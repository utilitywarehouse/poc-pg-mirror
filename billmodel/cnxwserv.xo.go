// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Cnxwserv represents a row from 'equinox.cnxwserv'.
type Cnxwserv struct {
	Cnxwsservice   sql.NullString `json:"cnxwsservice"`   // cnxwsservice
	Cnxwsstartdate pq.NullTime    `json:"cnxwsstartdate"` // cnxwsstartdate
	Cnxwsenddate   pq.NullTime    `json:"cnxwsenddate"`   // cnxwsenddate
	Cnxwsoptid     sql.NullString `json:"cnxwsoptid"`     // cnxwsoptid
	EquinoxPrn     sql.NullInt64  `json:"equinox_prn"`    // equinox_prn
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

// CnxwservByEquinoxLrn retrieves a row from 'equinox.cnxwserv' as a Cnxwserv.
//
// Generated from index 'cnxwserv_pkey'.
func CnxwservByEquinoxLrn(db XODB, equinoxLrn int64) (*Cnxwserv, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cnxwsservice, cnxwsstartdate, cnxwsenddate, cnxwsoptid, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cnxwserv ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cnxwserv{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cnxwsservice, &c.Cnxwsstartdate, &c.Cnxwsenddate, &c.Cnxwsoptid, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
