// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Handset represents a row from 'equinox.handset'.
type Handset struct {
	HsID            sql.NullInt64   `json:"hs_id"`            // hs_id
	HsMake          sql.NullString  `json:"hs_make"`          // hs_make
	HsModel         sql.NullString  `json:"hs_model"`         // hs_model
	HsFeature1      sql.NullString  `json:"hs_feature_1"`     // hs_feature_1
	HsFeature2      sql.NullString  `json:"hs_feature_2"`     // hs_feature_2
	HsFeature3      sql.NullString  `json:"hs_feature_3"`     // hs_feature_3
	HsFeature4      sql.NullString  `json:"hs_feature_4"`     // hs_feature_4
	HsWeight        sql.NullInt64   `json:"hs_weight"`        // hs_weight
	HsTalktime      sql.NullFloat64 `json:"hs_talktime"`      // hs_talktime
	HsStandby       sql.NullInt64   `json:"hs_standby"`       // hs_standby
	HsSuspend       sql.NullInt64   `json:"hs_suspend"`       // hs_suspend
	HsBand          sql.NullString  `json:"hs_band"`          // hs_band
	HsWifi          sql.NullInt64   `json:"hs_wifi"`          // hs_wifi
	HsEmail         sql.NullInt64   `json:"hs_email"`         // hs_email
	HsMms           sql.NullInt64   `json:"hs_mms"`           // hs_mms
	HsBluetooth     sql.NullInt64   `json:"hs_bluetooth"`     // hs_bluetooth
	HsMemorycard    sql.NullInt64   `json:"hs_memorycard"`    // hs_memorycard
	HsInternetbrows sql.NullInt64   `json:"hs_internetbrows"` // hs_internetbrows
	HsMp3player     sql.NullInt64   `json:"hs_mp3player"`     // hs_mp3player
	HsFmradio       sql.NullInt64   `json:"hs_fmradio"`       // hs_fmradio
	HsCamera        sql.NullString  `json:"hs_camera"`        // hs_camera
	HsGps           sql.NullInt64   `json:"hs_gps"`           // hs_gps
	HsSmartphone    sql.NullFloat64 `json:"hs_smartphone"`    // hs_smartphone
	HsSpareC1       sql.NullString  `json:"hs_spare_c1"`      // hs_spare_c1
	HsSpareD1       pq.NullTime     `json:"hs_spare_d1"`      // hs_spare_d1
	HsSpareN1       sql.NullInt64   `json:"hs_spare_n1"`      // hs_spare_n1
	HsAllowImei     sql.NullInt64   `json:"hs_allow_imei"`    // hs_allow_imei
	HsSimtype       sql.NullInt64   `json:"hs_simtype"`       // hs_simtype
	HsIdrestrict    sql.NullInt64   `json:"hs_idrestrict"`    // hs_idrestrict
	HsStaffrestrict sql.NullInt64   `json:"hs_staffrestrict"` // hs_staffrestrict
	EquinoxLrn      int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllHandset(db XODB, callback func(x Handset) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`hs_id, hs_make, hs_model, hs_feature_1, hs_feature_2, hs_feature_3, hs_feature_4, hs_weight, hs_talktime, hs_standby, hs_suspend, hs_band, hs_wifi, hs_email, hs_mms, hs_bluetooth, hs_memorycard, hs_internetbrows, hs_mp3player, hs_fmradio, hs_camera, hs_gps, hs_smartphone, hs_spare_c1, hs_spare_d1, hs_spare_n1, hs_allow_imei, hs_simtype, hs_idrestrict, hs_staffrestrict, equinox_lrn, equinox_sec ` +
		`FROM equinox.handset `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		h := Handset{}

		// scan
		err = q.Scan(&h.HsID, &h.HsMake, &h.HsModel, &h.HsFeature1, &h.HsFeature2, &h.HsFeature3, &h.HsFeature4, &h.HsWeight, &h.HsTalktime, &h.HsStandby, &h.HsSuspend, &h.HsBand, &h.HsWifi, &h.HsEmail, &h.HsMms, &h.HsBluetooth, &h.HsMemorycard, &h.HsInternetbrows, &h.HsMp3player, &h.HsFmradio, &h.HsCamera, &h.HsGps, &h.HsSmartphone, &h.HsSpareC1, &h.HsSpareD1, &h.HsSpareN1, &h.HsAllowImei, &h.HsSimtype, &h.HsIdrestrict, &h.HsStaffrestrict, &h.EquinoxLrn, &h.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(h) {
			return nil
		}
	}

	return nil
}

// HandsetByEquinoxLrn retrieves a row from 'equinox.handset' as a Handset.
//
// Generated from index 'handset_pkey'.
func HandsetByEquinoxLrn(db XODB, equinoxLrn int64) (*Handset, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`hs_id, hs_make, hs_model, hs_feature_1, hs_feature_2, hs_feature_3, hs_feature_4, hs_weight, hs_talktime, hs_standby, hs_suspend, hs_band, hs_wifi, hs_email, hs_mms, hs_bluetooth, hs_memorycard, hs_internetbrows, hs_mp3player, hs_fmradio, hs_camera, hs_gps, hs_smartphone, hs_spare_c1, hs_spare_d1, hs_spare_n1, hs_allow_imei, hs_simtype, hs_idrestrict, hs_staffrestrict, equinox_lrn, equinox_sec ` +
		`FROM equinox.handset ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	h := Handset{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&h.HsID, &h.HsMake, &h.HsModel, &h.HsFeature1, &h.HsFeature2, &h.HsFeature3, &h.HsFeature4, &h.HsWeight, &h.HsTalktime, &h.HsStandby, &h.HsSuspend, &h.HsBand, &h.HsWifi, &h.HsEmail, &h.HsMms, &h.HsBluetooth, &h.HsMemorycard, &h.HsInternetbrows, &h.HsMp3player, &h.HsFmradio, &h.HsCamera, &h.HsGps, &h.HsSmartphone, &h.HsSpareC1, &h.HsSpareD1, &h.HsSpareN1, &h.HsAllowImei, &h.HsSimtype, &h.HsIdrestrict, &h.HsStaffrestrict, &h.EquinoxLrn, &h.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &h, nil
}
