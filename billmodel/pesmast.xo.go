// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Pesmast represents a row from 'equinox.pesmast'.
type Pesmast struct {
	Pmtariff       sql.NullString  `json:"pmtariff"`       // pmtariff
	Pmdescription  sql.NullString  `json:"pmdescription"`  // pmdescription
	Pmpaymethod    sql.NullString  `json:"pmpaymethod"`    // pmpaymethod
	Pmdatefrom     pq.NullTime     `json:"pmdatefrom"`     // pmdatefrom
	Pmdateto       pq.NullTime     `json:"pmdateto"`       // pmdateto
	Pmrmrflag      sql.NullString  `json:"pmrmrflag"`      // pmrmrflag
	Pmmonthorday   sql.NullString  `json:"pmmonthorday"`   // pmmonthorday
	Pmfixeddateend pq.NullTime     `json:"pmfixeddateend"` // pmfixeddateend
	Pmtype         sql.NullString  `json:"pmtype"`         // pmtype
	Pmtiedshort    sql.NullInt64   `json:"pmtiedshort"`    // pmtiedshort
	Pmtiedlong     sql.NullInt64   `json:"pmtiedlong"`     // pmtiedlong
	Pmrct          sql.NullString  `json:"pmrct"`          // pmrct
	Pmact          sql.NullString  `json:"pmact"`          // pmact
	Pmtermfee      sql.NullFloat64 `json:"pmtermfee"`      // pmtermfee
	Pmddequiv      sql.NullString  `json:"pmddequiv"`      // pmddequiv
	Pmnonddeqiv    sql.NullString  `json:"pmnonddeqiv"`    // pmnonddeqiv
	EquinoxLrn     int64           `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`    // equinox_sec
}

func AllPesmast(db XODB, callback func(x Pesmast) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`pmtariff, pmdescription, pmpaymethod, pmdatefrom, pmdateto, pmrmrflag, pmmonthorday, pmfixeddateend, pmtype, pmtiedshort, pmtiedlong, pmrct, pmact, pmtermfee, pmddequiv, pmnonddeqiv, equinox_lrn, equinox_sec ` +
		`FROM equinox.pesmast `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		p := Pesmast{}

		// scan
		err = q.Scan(&p.Pmtariff, &p.Pmdescription, &p.Pmpaymethod, &p.Pmdatefrom, &p.Pmdateto, &p.Pmrmrflag, &p.Pmmonthorday, &p.Pmfixeddateend, &p.Pmtype, &p.Pmtiedshort, &p.Pmtiedlong, &p.Pmrct, &p.Pmact, &p.Pmtermfee, &p.Pmddequiv, &p.Pmnonddeqiv, &p.EquinoxLrn, &p.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(p) {
			return nil
		}
	}

	return nil
}

// PesmastByEquinoxLrn retrieves a row from 'equinox.pesmast' as a Pesmast.
//
// Generated from index 'pesmast_pkey'.
func PesmastByEquinoxLrn(db XODB, equinoxLrn int64) (*Pesmast, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pmtariff, pmdescription, pmpaymethod, pmdatefrom, pmdateto, pmrmrflag, pmmonthorday, pmfixeddateend, pmtype, pmtiedshort, pmtiedlong, pmrct, pmact, pmtermfee, pmddequiv, pmnonddeqiv, equinox_lrn, equinox_sec ` +
		`FROM equinox.pesmast ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Pesmast{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pmtariff, &p.Pmdescription, &p.Pmpaymethod, &p.Pmdatefrom, &p.Pmdateto, &p.Pmrmrflag, &p.Pmmonthorday, &p.Pmfixeddateend, &p.Pmtype, &p.Pmtiedshort, &p.Pmtiedlong, &p.Pmrct, &p.Pmact, &p.Pmtermfee, &p.Pmddequiv, &p.Pmnonddeqiv, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
