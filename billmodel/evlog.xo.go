// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Evlog represents a row from 'equinox.evlog'.
type Evlog struct {
	Eventlogid     sql.NullInt64  `json:"eventlogid"`     // eventlogid
	Evlchildid     sql.NullInt64  `json:"evlchildid"`     // evlchildid
	Evldate        pq.NullTime    `json:"evldate"`        // evldate
	Evltime        pq.NullTime    `json:"evltime"`        // evltime
	Evlstartdate   pq.NullTime    `json:"evlstartdate"`   // evlstartdate
	Evlstarttime   pq.NullTime    `json:"evlstarttime"`   // evlstarttime
	Evlenddate     pq.NullTime    `json:"evlenddate"`     // evlenddate
	Evlendtime     pq.NullTime    `json:"evlendtime"`     // evlendtime
	Evlmessage     sql.NullString `json:"evlmessage"`     // evlmessage
	Evldetails     sql.NullInt64  `json:"evldetails"`     // evldetails
	Evltype        sql.NullString `json:"evltype"`        // evltype
	Evlcategory    sql.NullString `json:"evlcategory"`    // evlcategory
	Evlraisedby    sql.NullString `json:"evlraisedby"`    // evlraisedby
	Evlmachine     sql.NullString `json:"evlmachine"`     // evlmachine
	Evladditional1 sql.NullString `json:"evladditional1"` // evladditional1
	Evladditional2 sql.NullString `json:"evladditional2"` // evladditional2
	Evladditional3 sql.NullString `json:"evladditional3"` // evladditional3
	Evladditional4 sql.NullString `json:"evladditional4"` // evladditional4
	EquinoxPrn     sql.NullInt64  `json:"equinox_prn"`    // equinox_prn
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

func AllEvlog(db XODB, callback func(x Evlog) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`eventlogid, evlchildid, evldate, evltime, evlstartdate, evlstarttime, evlenddate, evlendtime, evlmessage, evldetails, evltype, evlcategory, evlraisedby, evlmachine, evladditional1, evladditional2, evladditional3, evladditional4, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.evlog `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		e := Evlog{}

		// scan
		err = q.Scan(&e.Eventlogid, &e.Evlchildid, &e.Evldate, &e.Evltime, &e.Evlstartdate, &e.Evlstarttime, &e.Evlenddate, &e.Evlendtime, &e.Evlmessage, &e.Evldetails, &e.Evltype, &e.Evlcategory, &e.Evlraisedby, &e.Evlmachine, &e.Evladditional1, &e.Evladditional2, &e.Evladditional3, &e.Evladditional4, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(e) {
			return nil
		}
	}

	return nil
}

// EvlogByEquinoxLrn retrieves a row from 'equinox.evlog' as a Evlog.
//
// Generated from index 'evlog_pkey'.
func EvlogByEquinoxLrn(db XODB, equinoxLrn int64) (*Evlog, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`eventlogid, evlchildid, evldate, evltime, evlstartdate, evlstarttime, evlenddate, evlendtime, evlmessage, evldetails, evltype, evlcategory, evlraisedby, evlmachine, evladditional1, evladditional2, evladditional3, evladditional4, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.evlog ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Evlog{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Eventlogid, &e.Evlchildid, &e.Evldate, &e.Evltime, &e.Evlstartdate, &e.Evlstarttime, &e.Evlenddate, &e.Evlendtime, &e.Evlmessage, &e.Evldetails, &e.Evltype, &e.Evlcategory, &e.Evlraisedby, &e.Evlmachine, &e.Evladditional1, &e.Evladditional2, &e.Evladditional3, &e.Evladditional4, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
