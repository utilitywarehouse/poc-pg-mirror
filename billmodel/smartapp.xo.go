// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Smartapp represents a row from 'equinox.smartapp'.
type Smartapp struct {
	Smadate         pq.NullTime    `json:"smadate"`         // smadate
	Smatimeslot     sql.NullString `json:"smatimeslot"`     // smatimeslot
	Smabookingref   sql.NullString `json:"smabookingref"`   // smabookingref
	Smacancelled    pq.NullTime    `json:"smacancelled"`    // smacancelled
	Smacancelledby  sql.NullInt64  `json:"smacancelledby"`  // smacancelledby
	Smacancelreason sql.NullInt64  `json:"smacancelreason"` // smacancelreason
	Smadeemed       sql.NullInt64  `json:"smadeemed"`       // smadeemed
	Smabookedby     sql.NullString `json:"smabookedby"`     // smabookedby
	Smanotes        sql.NullInt64  `json:"smanotes"`        // smanotes
	EquinoxPrn      sql.NullInt64  `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllSmartapp(db XODB, callback func(x Smartapp) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`smadate, smatimeslot, smabookingref, smacancelled, smacancelledby, smacancelreason, smadeemed, smabookedby, smanotes, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.smartapp `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		s := Smartapp{}

		// scan
		err = q.Scan(&s.Smadate, &s.Smatimeslot, &s.Smabookingref, &s.Smacancelled, &s.Smacancelledby, &s.Smacancelreason, &s.Smadeemed, &s.Smabookedby, &s.Smanotes, &s.EquinoxPrn, &s.EquinoxLrn, &s.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(s) {
			return nil
		}
	}

	return nil
}

// SmartappByEquinoxLrn retrieves a row from 'equinox.smartapp' as a Smartapp.
//
// Generated from index 'smartapp_pkey'.
func SmartappByEquinoxLrn(db XODB, equinoxLrn int64) (*Smartapp, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`smadate, smatimeslot, smabookingref, smacancelled, smacancelledby, smacancelreason, smadeemed, smabookedby, smanotes, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.smartapp ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	s := Smartapp{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&s.Smadate, &s.Smatimeslot, &s.Smabookingref, &s.Smacancelled, &s.Smacancelledby, &s.Smacancelreason, &s.Smadeemed, &s.Smabookedby, &s.Smanotes, &s.EquinoxPrn, &s.EquinoxLrn, &s.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &s, nil
}
