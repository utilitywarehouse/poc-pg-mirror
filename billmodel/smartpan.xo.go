// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Smartpan represents a row from 'equinox.smartpan'.
type Smartpan struct {
	Spanpan       sql.NullString `json:"spanpan"`       // spanpan
	Spanaccno     sql.NullString `json:"spanaccno"`     // spanaccno
	Spanmpxn      sql.NullString `json:"spanmpxn"`      // spanmpxn
	Spanallocated pq.NullTime    `json:"spanallocated"` // spanallocated
	Spansource    sql.NullString `json:"spansource"`    // spansource
	Spanspares1   sql.NullString `json:"spanspares1"`   // spanspares1
	Spanspared1   pq.NullTime    `json:"spanspared1"`   // spanspared1
	Spanspared2   pq.NullTime    `json:"spanspared2"`   // spanspared2
	Spansparen1   sql.NullInt64  `json:"spansparen1"`   // spansparen1
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

// SmartpanByEquinoxLrn retrieves a row from 'equinox.smartpan' as a Smartpan.
//
// Generated from index 'smartpan_pkey'.
func SmartpanByEquinoxLrn(db XODB, equinoxLrn int64) (*Smartpan, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`spanpan, spanaccno, spanmpxn, spanallocated, spansource, spanspares1, spanspared1, spanspared2, spansparen1, equinox_lrn, equinox_sec ` +
		`FROM equinox.smartpan ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	s := Smartpan{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&s.Spanpan, &s.Spanaccno, &s.Spanmpxn, &s.Spanallocated, &s.Spansource, &s.Spanspares1, &s.Spanspared1, &s.Spanspared2, &s.Spansparen1, &s.EquinoxLrn, &s.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &s, nil
}
