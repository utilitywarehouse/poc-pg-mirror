// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Igtrange represents a row from 'equinox.igtrange'.
type Igtrange struct {
	Igtrstart     sql.NullInt64  `json:"igtrstart"`     // igtrstart
	Igtrend       sql.NullInt64  `json:"igtrend"`       // igtrend
	Igtrvalidfrom pq.NullTime    `json:"igtrvalidfrom"` // igtrvalidfrom
	Igtrvalidto   pq.NullTime    `json:"igtrvalidto"`   // igtrvalidto
	Igtrtypeid    sql.NullString `json:"igtrtypeid"`    // igtrtypeid
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

// IgtrangeByEquinoxLrn retrieves a row from 'equinox.igtrange' as a Igtrange.
//
// Generated from index 'igtrange_pkey'.
func IgtrangeByEquinoxLrn(db XODB, equinoxLrn int64) (*Igtrange, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`igtrstart, igtrend, igtrvalidfrom, igtrvalidto, igtrtypeid, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.igtrange ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	i := Igtrange{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&i.Igtrstart, &i.Igtrend, &i.Igtrvalidfrom, &i.Igtrvalidto, &i.Igtrtypeid, &i.EquinoxPrn, &i.EquinoxLrn, &i.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &i, nil
}
