// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Content represents a row from 'equinox.content'.
type Content struct {
	Cntid           sql.NullString `json:"cntid"`           // cntid
	Cnttitle        sql.NullInt64  `json:"cnttitle"`        // cnttitle
	Cntbody         sql.NullInt64  `json:"cntbody"`         // cntbody
	Cntdestination  sql.NullString `json:"cntdestination"`  // cntdestination
	Cntoriginator   sql.NullString `json:"cntoriginator"`   // cntoriginator
	Cntcc           sql.NullString `json:"cntcc"`           // cntcc
	Cntbc           sql.NullString `json:"cntbc"`           // cntbc
	Cntcategory     sql.NullString `json:"cntcategory"`     // cntcategory
	Cntlastchange   sql.NullString `json:"cntlastchange"`   // cntlastchange
	Cntdateadded    pq.NullTime    `json:"cntdateadded"`    // cntdateadded
	Cntparentid     sql.NullString `json:"cntparentid"`     // cntparentid
	Cntversion      sql.NullString `json:"cntversion"`      // cntversion
	Cntlastreview   pq.NullTime    `json:"cntlastreview"`   // cntlastreview
	Cntdept         sql.NullString `json:"cntdept"`         // cntdept
	Cntteam         sql.NullString `json:"cntteam"`         // cntteam
	Cntlastused     pq.NullTime    `json:"cntlastused"`     // cntlastused
	Cntnextreview   pq.NullTime    `json:"cntnextreview"`   // cntnextreview
	Cntproposed     sql.NullInt64  `json:"cntproposed"`     // cntproposed
	Cntinuse        sql.NullInt64  `json:"cntinuse"`        // cntinuse
	Cntletterid     sql.NullString `json:"cntletterid"`     // cntletterid
	Cntbounceaction sql.NullString `json:"cntbounceaction"` // cntbounceaction
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllContent(db XODB, callback func(x Content) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cntid, cnttitle, cntbody, cntdestination, cntoriginator, cntcc, cntbc, cntcategory, cntlastchange, cntdateadded, cntparentid, cntversion, cntlastreview, cntdept, cntteam, cntlastused, cntnextreview, cntproposed, cntinuse, cntletterid, cntbounceaction, equinox_lrn, equinox_sec ` +
		`FROM equinox.content `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Content{}

		// scan
		err = q.Scan(&c.Cntid, &c.Cnttitle, &c.Cntbody, &c.Cntdestination, &c.Cntoriginator, &c.Cntcc, &c.Cntbc, &c.Cntcategory, &c.Cntlastchange, &c.Cntdateadded, &c.Cntparentid, &c.Cntversion, &c.Cntlastreview, &c.Cntdept, &c.Cntteam, &c.Cntlastused, &c.Cntnextreview, &c.Cntproposed, &c.Cntinuse, &c.Cntletterid, &c.Cntbounceaction, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// ContentByEquinoxLrn retrieves a row from 'equinox.content' as a Content.
//
// Generated from index 'content_pkey'.
func ContentByEquinoxLrn(db XODB, equinoxLrn int64) (*Content, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cntid, cnttitle, cntbody, cntdestination, cntoriginator, cntcc, cntbc, cntcategory, cntlastchange, cntdateadded, cntparentid, cntversion, cntlastreview, cntdept, cntteam, cntlastused, cntnextreview, cntproposed, cntinuse, cntletterid, cntbounceaction, equinox_lrn, equinox_sec ` +
		`FROM equinox.content ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Content{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cntid, &c.Cnttitle, &c.Cntbody, &c.Cntdestination, &c.Cntoriginator, &c.Cntcc, &c.Cntbc, &c.Cntcategory, &c.Cntlastchange, &c.Cntdateadded, &c.Cntparentid, &c.Cntversion, &c.Cntlastreview, &c.Cntdept, &c.Cntteam, &c.Cntlastused, &c.Cntnextreview, &c.Cntproposed, &c.Cntinuse, &c.Cntletterid, &c.Cntbounceaction, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
