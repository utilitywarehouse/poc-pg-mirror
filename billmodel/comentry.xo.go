// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Comentry represents a row from 'equinox.comentry'.
type Comentry struct {
	Ceperiod        sql.NullString  `json:"ceperiod"`        // ceperiod
	Cecrnumber      sql.NullInt64   `json:"cecrnumber"`      // cecrnumber
	Cedealer        sql.NullString  `json:"cedealer"`        // cedealer
	Cecode          sql.NullString  `json:"cecode"`          // cecode
	Ceccid          sql.NullInt64   `json:"ceccid"`          // ceccid
	Cesource        sql.NullString  `json:"cesource"`        // cesource
	Ceamount        sql.NullFloat64 `json:"ceamount"`        // ceamount
	Cechar1         sql.NullString  `json:"cechar1"`         // cechar1
	Cechar2         sql.NullString  `json:"cechar2"`         // cechar2
	Cechar3         sql.NullString  `json:"cechar3"`         // cechar3
	Cechar4         sql.NullString  `json:"cechar4"`         // cechar4
	Cenum1          sql.NullFloat64 `json:"cenum1"`          // cenum1
	Cenum2          sql.NullFloat64 `json:"cenum2"`          // cenum2
	Cenum3          sql.NullFloat64 `json:"cenum3"`          // cenum3
	Cenum4          sql.NullFloat64 `json:"cenum4"`          // cenum4
	Cedate1         pq.NullTime     `json:"cedate1"`         // cedate1
	Cedisplay1      sql.NullString  `json:"cedisplay1"`      // cedisplay1
	Cedisplay2      sql.NullString  `json:"cedisplay2"`      // cedisplay2
	Cedisplay3      sql.NullString  `json:"cedisplay3"`      // cedisplay3
	Cedisplay4      sql.NullString  `json:"cedisplay4"`      // cedisplay4
	Ceflags         sql.NullString  `json:"ceflags"`         // ceflags
	Comentrysparec1 sql.NullString  `json:"comentrysparec1"` // comentrysparec1
	Cenum5          sql.NullFloat64 `json:"cenum5"`          // cenum5
	Comentryspared1 pq.NullTime     `json:"comentryspared1"` // comentryspared1
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

func AllComentry(db XODB, callback func(x Comentry) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`ceperiod, cecrnumber, cedealer, cecode, ceccid, cesource, ceamount, cechar1, cechar2, cechar3, cechar4, cenum1, cenum2, cenum3, cenum4, cedate1, cedisplay1, cedisplay2, cedisplay3, cedisplay4, ceflags, comentrysparec1, cenum5, comentryspared1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.comentry `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Comentry{}

		// scan
		err = q.Scan(&c.Ceperiod, &c.Cecrnumber, &c.Cedealer, &c.Cecode, &c.Ceccid, &c.Cesource, &c.Ceamount, &c.Cechar1, &c.Cechar2, &c.Cechar3, &c.Cechar4, &c.Cenum1, &c.Cenum2, &c.Cenum3, &c.Cenum4, &c.Cedate1, &c.Cedisplay1, &c.Cedisplay2, &c.Cedisplay3, &c.Cedisplay4, &c.Ceflags, &c.Comentrysparec1, &c.Cenum5, &c.Comentryspared1, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// ComentryByEquinoxLrn retrieves a row from 'equinox.comentry' as a Comentry.
//
// Generated from index 'comentry_pkey'.
func ComentryByEquinoxLrn(db XODB, equinoxLrn int64) (*Comentry, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ceperiod, cecrnumber, cedealer, cecode, ceccid, cesource, ceamount, cechar1, cechar2, cechar3, cechar4, cenum1, cenum2, cenum3, cenum4, cedate1, cedisplay1, cedisplay2, cedisplay3, cedisplay4, ceflags, comentrysparec1, cenum5, comentryspared1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.comentry ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Comentry{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Ceperiod, &c.Cecrnumber, &c.Cedealer, &c.Cecode, &c.Ceccid, &c.Cesource, &c.Ceamount, &c.Cechar1, &c.Cechar2, &c.Cechar3, &c.Cechar4, &c.Cenum1, &c.Cenum2, &c.Cenum3, &c.Cenum4, &c.Cedate1, &c.Cedisplay1, &c.Cedisplay2, &c.Cedisplay3, &c.Cedisplay4, &c.Ceflags, &c.Comentrysparec1, &c.Cenum5, &c.Comentryspared1, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
