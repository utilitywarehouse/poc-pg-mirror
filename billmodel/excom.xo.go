// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Excom represents a row from 'equinox.excoms'.
type Excom struct {
	Excomuniquesys   sql.NullFloat64 `json:"excomuniquesys"`   // excomuniquesys
	Excomdate        pq.NullTime     `json:"excomdate"`        // excomdate
	Excomtime        pq.NullTime     `json:"excomtime"`        // excomtime
	Excomprobcode    sql.NullString  `json:"excomprobcode"`    // excomprobcode
	Excomadditional1 sql.NullString  `json:"excomadditional1"` // excomadditional1
	Excomadditional2 sql.NullString  `json:"excomadditional2"` // excomadditional2
	Excomadditional3 sql.NullString  `json:"excomadditional3"` // excomadditional3
	Excomadditional8 sql.NullString  `json:"excomadditional8"` // excomadditional8
	Excomadditional7 sql.NullString  `json:"excomadditional7"` // excomadditional7
	Excomadditional6 sql.NullString  `json:"excomadditional6"` // excomadditional6
	Excomadditional5 sql.NullString  `json:"excomadditional5"` // excomadditional5
	Excomadditional4 sql.NullString  `json:"excomadditional4"` // excomadditional4
	Excomdetails     sql.NullInt64   `json:"excomdetails"`     // excomdetails
	Excomenteredby   sql.NullString  `json:"excomenteredby"`   // excomenteredby
	Excompriority    sql.NullString  `json:"excompriority"`    // excompriority
	Excomstatus      sql.NullInt64   `json:"excomstatus"`      // excomstatus
	Excomticketno    sql.NullString  `json:"excomticketno"`    // excomticketno
	Excomcompleted   pq.NullTime     `json:"excomcompleted"`   // excomcompleted
	Excomcompletby   sql.NullString  `json:"excomcompletby"`   // excomcompletby
	Excomactiondate  pq.NullTime     `json:"excomactiondate"`  // excomactiondate
	Excomstrtime     sql.NullString  `json:"excomstrtime"`     // excomstrtime
	Excomssparen1    sql.NullFloat64 `json:"excomssparen1"`    // excomssparen1
	Excomstrdate     pq.NullTime     `json:"excomstrdate"`     // excomstrdate
	Excomslastchange sql.NullString  `json:"excomslastchange"` // excomslastchange
	Excomsspared1    pq.NullTime     `json:"excomsspared1"`    // excomsspared1
	Excomssparet1    pq.NullTime     `json:"excomssparet1"`    // excomssparet1
	Excomadditional9 sql.NullString  `json:"excomadditional9"` // excomadditional9
	Excomadd10       sql.NullString  `json:"excomadd10"`       // excomadd10
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

// ExcomByEquinoxLrn retrieves a row from 'equinox.excoms' as a Excom.
//
// Generated from index 'excoms_pkey'.
func ExcomByEquinoxLrn(db XODB, equinoxLrn int64) (*Excom, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`excomuniquesys, excomdate, excomtime, excomprobcode, excomadditional1, excomadditional2, excomadditional3, excomadditional8, excomadditional7, excomadditional6, excomadditional5, excomadditional4, excomdetails, excomenteredby, excompriority, excomstatus, excomticketno, excomcompleted, excomcompletby, excomactiondate, excomstrtime, excomssparen1, excomstrdate, excomslastchange, excomsspared1, excomssparet1, excomadditional9, excomadd10, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.excoms ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Excom{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Excomuniquesys, &e.Excomdate, &e.Excomtime, &e.Excomprobcode, &e.Excomadditional1, &e.Excomadditional2, &e.Excomadditional3, &e.Excomadditional8, &e.Excomadditional7, &e.Excomadditional6, &e.Excomadditional5, &e.Excomadditional4, &e.Excomdetails, &e.Excomenteredby, &e.Excompriority, &e.Excomstatus, &e.Excomticketno, &e.Excomcompleted, &e.Excomcompletby, &e.Excomactiondate, &e.Excomstrtime, &e.Excomssparen1, &e.Excomstrdate, &e.Excomslastchange, &e.Excomsspared1, &e.Excomssparet1, &e.Excomadditional9, &e.Excomadd10, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
