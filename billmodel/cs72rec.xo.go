// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cs72rec represents a row from 'equinox.cs72recs'.
type Cs72rec struct {
	Cs72rejreason sql.NullString `json:"cs72rejreason"` // cs72rejreason
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllCs72rec(db XODB, callback func(x Cs72rec) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cs72rejreason, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cs72recs `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cs72rec{}

		// scan
		err = q.Scan(&c.Cs72rejreason, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// Cs72recByEquinoxLrn retrieves a row from 'equinox.cs72recs' as a Cs72rec.
//
// Generated from index 'cs72recs_pkey'.
func Cs72recByEquinoxLrn(db XODB, equinoxLrn int64) (*Cs72rec, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cs72rejreason, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cs72recs ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cs72rec{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cs72rejreason, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
