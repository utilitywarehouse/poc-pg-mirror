// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
	"errors"
)

// Pmdetail represents a row from 'equinox.pmdetail'.
type Pmdetail struct {
	Pmdregion       sql.NullString  `json:"pmdregion"`       // pmdregion
	Pmdgasmonthly   sql.NullFloat64 `json:"pmdgasmonthly"`   // pmdgasmonthly
	Pmdgasdaily     sql.NullFloat64 `json:"pmdgasdaily"`     // pmdgasdaily
	Pmdgasppkwh     sql.NullFloat64 `json:"pmdgasppkwh"`     // pmdgasppkwh
	Pmdgastcr       sql.NullFloat64 `json:"pmdgastcr"`       // pmdgastcr
	Pmdgastcrdual   sql.NullFloat64 `json:"pmdgastcrdual"`   // pmdgastcrdual
	Pmdgdmonthly    sql.NullFloat64 `json:"pmdgdmonthly"`    // pmdgdmonthly
	Pmdgddaily      sql.NullFloat64 `json:"pmdgddaily"`      // pmdgddaily
	Pmdgdppkwh      sql.NullFloat64 `json:"pmdgdppkwh"`      // pmdgdppkwh
	Pmdgdtcr        sql.NullFloat64 `json:"pmdgdtcr"`        // pmdgdtcr
	Pmdgdtcrdual    sql.NullFloat64 `json:"pmdgdtcrdual"`    // pmdgdtcrdual
	Pmde7monthly    sql.NullFloat64 `json:"pmde7monthly"`    // pmde7monthly
	Pmde7daily      sql.NullFloat64 `json:"pmde7daily"`      // pmde7daily
	Pmde7dayppkwh   sql.NullFloat64 `json:"pmde7dayppkwh"`   // pmde7dayppkwh
	Pmde7nightppkwh sql.NullFloat64 `json:"pmde7nightppkwh"` // pmde7nightppkwh
	Pmdstorageppkwh sql.NullFloat64 `json:"pmdstorageppkwh"` // pmdstorageppkwh
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the Pmdetail exists in the database.
func (p *Pmdetail) Exists() bool {
	return p._exists
}

// Deleted provides information if the Pmdetail has been deleted from the database.
func (p *Pmdetail) Deleted() bool {
	return p._deleted
}

// Insert inserts the Pmdetail to the database.
func (p *Pmdetail) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if p._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.pmdetail (` +
		`pmdregion, pmdgasmonthly, pmdgasdaily, pmdgasppkwh, pmdgastcr, pmdgastcrdual, pmdgdmonthly, pmdgddaily, pmdgdppkwh, pmdgdtcr, pmdgdtcrdual, pmde7monthly, pmde7daily, pmde7dayppkwh, pmde7nightppkwh, pmdstorageppkwh, equinox_prn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18` +
		`) RETURNING equinox_lrn`

	// run query
	XOLog(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxSec)
	err = db.QueryRow(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxSec).Scan(&p.EquinoxLrn)
	if err != nil {
		return err
	}

	// set existence
	p._exists = true

	return nil
}

// Update updates the Pmdetail in the database.
func (p *Pmdetail) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !p._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if p._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE equinox.pmdetail SET (` +
		`pmdregion, pmdgasmonthly, pmdgasdaily, pmdgasppkwh, pmdgastcr, pmdgastcrdual, pmdgdmonthly, pmdgddaily, pmdgdppkwh, pmdgdtcr, pmdgdtcrdual, pmde7monthly, pmde7daily, pmde7dayppkwh, pmde7nightppkwh, pmdstorageppkwh, equinox_prn, equinox_sec` +
		`) = ( ` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18` +
		`) WHERE equinox_lrn = $19`

	// run query
	XOLog(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxSec, p.EquinoxLrn)
	_, err = db.Exec(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxSec, p.EquinoxLrn)
	return err
}

// Save saves the Pmdetail to the database.
func (p *Pmdetail) Save(db XODB) error {
	if p.Exists() {
		return p.Update(db)
	}

	return p.Insert(db)
}

// Upsert performs an upsert for Pmdetail.
//
// NOTE: PostgreSQL 9.5+ only
func (p *Pmdetail) Upsert(db XODB) error {
	var err error

	// if already exist, bail
	if p._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.pmdetail (` +
		`pmdregion, pmdgasmonthly, pmdgasdaily, pmdgasppkwh, pmdgastcr, pmdgastcrdual, pmdgdmonthly, pmdgddaily, pmdgdppkwh, pmdgdtcr, pmdgdtcrdual, pmde7monthly, pmde7daily, pmde7dayppkwh, pmde7nightppkwh, pmdstorageppkwh, equinox_prn, equinox_lrn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19` +
		`) ON CONFLICT (equinox_lrn) DO UPDATE SET (` +
		`pmdregion, pmdgasmonthly, pmdgasdaily, pmdgasppkwh, pmdgastcr, pmdgastcrdual, pmdgdmonthly, pmdgddaily, pmdgdppkwh, pmdgdtcr, pmdgdtcrdual, pmde7monthly, pmde7daily, pmde7dayppkwh, pmde7nightppkwh, pmdstorageppkwh, equinox_prn, equinox_lrn, equinox_sec` +
		`) = (` +
		`EXCLUDED.pmdregion, EXCLUDED.pmdgasmonthly, EXCLUDED.pmdgasdaily, EXCLUDED.pmdgasppkwh, EXCLUDED.pmdgastcr, EXCLUDED.pmdgastcrdual, EXCLUDED.pmdgdmonthly, EXCLUDED.pmdgddaily, EXCLUDED.pmdgdppkwh, EXCLUDED.pmdgdtcr, EXCLUDED.pmdgdtcrdual, EXCLUDED.pmde7monthly, EXCLUDED.pmde7daily, EXCLUDED.pmde7dayppkwh, EXCLUDED.pmde7nightppkwh, EXCLUDED.pmdstorageppkwh, EXCLUDED.equinox_prn, EXCLUDED.equinox_lrn, EXCLUDED.equinox_sec` +
		`)`

	// run query
	XOLog(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxLrn, p.EquinoxSec)
	_, err = db.Exec(sqlstr, p.Pmdregion, p.Pmdgasmonthly, p.Pmdgasdaily, p.Pmdgasppkwh, p.Pmdgastcr, p.Pmdgastcrdual, p.Pmdgdmonthly, p.Pmdgddaily, p.Pmdgdppkwh, p.Pmdgdtcr, p.Pmdgdtcrdual, p.Pmde7monthly, p.Pmde7daily, p.Pmde7dayppkwh, p.Pmde7nightppkwh, p.Pmdstorageppkwh, p.EquinoxPrn, p.EquinoxLrn, p.EquinoxSec)
	if err != nil {
		return err
	}

	// set existence
	p._exists = true

	return nil
}

// Delete deletes the Pmdetail from the database.
func (p *Pmdetail) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !p._exists {
		return nil
	}

	// if deleted, bail
	if p._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM equinox.pmdetail WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, p.EquinoxLrn)
	_, err = db.Exec(sqlstr, p.EquinoxLrn)
	if err != nil {
		return err
	}

	// set deleted
	p._deleted = true

	return nil
}

// PmdetailByEquinoxLrn retrieves a row from 'equinox.pmdetail' as a Pmdetail.
//
// Generated from index 'pmdetail_pkey'.
func PmdetailByEquinoxLrn(db XODB, equinoxLrn int64) (*Pmdetail, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pmdregion, pmdgasmonthly, pmdgasdaily, pmdgasppkwh, pmdgastcr, pmdgastcrdual, pmdgdmonthly, pmdgddaily, pmdgdppkwh, pmdgdtcr, pmdgdtcrdual, pmde7monthly, pmde7daily, pmde7dayppkwh, pmde7nightppkwh, pmdstorageppkwh, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.pmdetail ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Pmdetail{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pmdregion, &p.Pmdgasmonthly, &p.Pmdgasdaily, &p.Pmdgasppkwh, &p.Pmdgastcr, &p.Pmdgastcrdual, &p.Pmdgdmonthly, &p.Pmdgddaily, &p.Pmdgdppkwh, &p.Pmdgdtcr, &p.Pmdgdtcrdual, &p.Pmde7monthly, &p.Pmde7daily, &p.Pmde7dayppkwh, &p.Pmde7nightppkwh, &p.Pmdstorageppkwh, &p.EquinoxPrn, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
