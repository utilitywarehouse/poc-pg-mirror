// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Benefit represents a row from 'equinox.benefits'.
type Benefit struct {
	BenAccountno  sql.NullString  `json:"ben_accountno"`  // ben_accountno
	BenStartdate  pq.NullTime     `json:"ben_startdate"`  // ben_startdate
	BenType       sql.NullString  `json:"ben_type"`       // ben_type
	BenAddinfo1   sql.NullString  `json:"ben_addinfo1"`   // ben_addinfo1
	BenAddinfo2   sql.NullString  `json:"ben_addinfo2"`   // ben_addinfo2
	BenAddinfo3   sql.NullString  `json:"ben_addinfo3"`   // ben_addinfo3
	BenChanged    pq.NullTime     `json:"ben_changed"`    // ben_changed
	BenNextchngd  pq.NullTime     `json:"ben_nextchngd"`  // ben_nextchngd
	BenNextchnga1 sql.NullString  `json:"ben_nextchnga1"` // ben_nextchnga1
	BenNexttype   sql.NullString  `json:"ben_nexttype"`   // ben_nexttype
	BenNextchngs  sql.NullString  `json:"ben_nextchngs"`  // ben_nextchngs
	BenStatus     sql.NullString  `json:"ben_status"`     // ben_status
	BenSuspended  pq.NullTime     `json:"ben_suspended"`  // ben_suspended
	BenNextchnga2 sql.NullString  `json:"ben_nextchnga2"` // ben_nextchnga2
	BenSparen1    sql.NullFloat64 `json:"ben_sparen1"`    // ben_sparen1
	BenSpared1    pq.NullTime     `json:"ben_spared1"`    // ben_spared1
	BenSparel1    sql.NullInt64   `json:"ben_sparel1"`    // ben_sparel1
	BenChargedate pq.NullTime     `json:"ben_chargedate"` // ben_chargedate
	EquinoxLrn    int64           `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec    sql.NullInt64   `json:"equinox_sec"`    // equinox_sec
}

func AllBenefit(db XODB, callback func(x Benefit) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`ben_accountno, ben_startdate, ben_type, ben_addinfo1, ben_addinfo2, ben_addinfo3, ben_changed, ben_nextchngd, ben_nextchnga1, ben_nexttype, ben_nextchngs, ben_status, ben_suspended, ben_nextchnga2, ben_sparen1, ben_spared1, ben_sparel1, ben_chargedate, equinox_lrn, equinox_sec ` +
		`FROM equinox.benefits `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		b := Benefit{}

		// scan
		err = q.Scan(&b.BenAccountno, &b.BenStartdate, &b.BenType, &b.BenAddinfo1, &b.BenAddinfo2, &b.BenAddinfo3, &b.BenChanged, &b.BenNextchngd, &b.BenNextchnga1, &b.BenNexttype, &b.BenNextchngs, &b.BenStatus, &b.BenSuspended, &b.BenNextchnga2, &b.BenSparen1, &b.BenSpared1, &b.BenSparel1, &b.BenChargedate, &b.EquinoxLrn, &b.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(b) {
			return nil
		}
	}

	return nil
}

// BenefitByEquinoxLrn retrieves a row from 'equinox.benefits' as a Benefit.
//
// Generated from index 'benefits_pkey'.
func BenefitByEquinoxLrn(db XODB, equinoxLrn int64) (*Benefit, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ben_accountno, ben_startdate, ben_type, ben_addinfo1, ben_addinfo2, ben_addinfo3, ben_changed, ben_nextchngd, ben_nextchnga1, ben_nexttype, ben_nextchngs, ben_status, ben_suspended, ben_nextchnga2, ben_sparen1, ben_spared1, ben_sparel1, ben_chargedate, equinox_lrn, equinox_sec ` +
		`FROM equinox.benefits ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Benefit{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.BenAccountno, &b.BenStartdate, &b.BenType, &b.BenAddinfo1, &b.BenAddinfo2, &b.BenAddinfo3, &b.BenChanged, &b.BenNextchngd, &b.BenNextchnga1, &b.BenNexttype, &b.BenNextchngs, &b.BenStatus, &b.BenSuspended, &b.BenNextchnga2, &b.BenSparen1, &b.BenSpared1, &b.BenSparel1, &b.BenChargedate, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
