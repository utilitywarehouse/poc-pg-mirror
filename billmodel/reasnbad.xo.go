// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Reasnbad represents a row from 'equinox.reasnbad'.
type Reasnbad struct {
	Reaid         sql.NullInt64  `json:"reaid"`         // reaid
	Readescrip    sql.NullString `json:"readescrip"`    // readescrip
	Reareportname sql.NullString `json:"reareportname"` // reareportname
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllReasnbad(db XODB, callback func(x Reasnbad) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`reaid, readescrip, reareportname, equinox_lrn, equinox_sec ` +
		`FROM equinox.reasnbad `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		r := Reasnbad{}

		// scan
		err = q.Scan(&r.Reaid, &r.Readescrip, &r.Reareportname, &r.EquinoxLrn, &r.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(r) {
			return nil
		}
	}

	return nil
}

// ReasnbadByEquinoxLrn retrieves a row from 'equinox.reasnbad' as a Reasnbad.
//
// Generated from index 'reasnbad_pkey'.
func ReasnbadByEquinoxLrn(db XODB, equinoxLrn int64) (*Reasnbad, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`reaid, readescrip, reareportname, equinox_lrn, equinox_sec ` +
		`FROM equinox.reasnbad ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	r := Reasnbad{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&r.Reaid, &r.Readescrip, &r.Reareportname, &r.EquinoxLrn, &r.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &r, nil
}
