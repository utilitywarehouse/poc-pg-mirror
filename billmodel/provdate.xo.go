// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Provdate represents a row from 'equinox.provdate'.
type Provdate struct {
	Provdate      pq.NullTime    `json:"provdate"`      // provdate
	Provreqdate   pq.NullTime    `json:"provreqdate"`   // provreqdate
	Provcreateddt pq.NullTime    `json:"provcreateddt"` // provcreateddt
	Provcreatedtm pq.NullTime    `json:"provcreatedtm"` // provcreatedtm
	Provcreatedby sql.NullString `json:"provcreatedby"` // provcreatedby
	Provediteddt  pq.NullTime    `json:"provediteddt"`  // provediteddt
	Proveditedtm  pq.NullTime    `json:"proveditedtm"`  // proveditedtm
	Proveditedby  sql.NullString `json:"proveditedby"`  // proveditedby
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

// ProvdateByEquinoxLrn retrieves a row from 'equinox.provdate' as a Provdate.
//
// Generated from index 'provdate_pkey'.
func ProvdateByEquinoxLrn(db XODB, equinoxLrn int64) (*Provdate, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`provdate, provreqdate, provcreateddt, provcreatedtm, provcreatedby, provediteddt, proveditedtm, proveditedby, equinox_lrn, equinox_sec ` +
		`FROM equinox.provdate ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Provdate{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Provdate, &p.Provreqdate, &p.Provcreateddt, &p.Provcreatedtm, &p.Provcreatedby, &p.Provediteddt, &p.Proveditedtm, &p.Proveditedby, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
