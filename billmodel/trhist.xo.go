// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// TrHist represents a row from 'equinox.tr_hist'.
type TrHist struct {
	TrhistDate    pq.NullTime    `json:"trhist_date"`    // trhist_date
	TrhistTime    pq.NullTime    `json:"trhist_time"`    // trhist_time
	TrhistUser    sql.NullString `json:"trhist_user"`    // trhist_user
	TrhistNotes   sql.NullInt64  `json:"trhist_notes"`   // trhist_notes
	TrhistCode    sql.NullString `json:"trhist_code"`    // trhist_code
	TrhistSpared1 pq.NullTime    `json:"trhist_spared1"` // trhist_spared1
	TrhistSparec1 sql.NullString `json:"trhist_sparec1"` // trhist_sparec1
	TrhistSparen1 sql.NullInt64  `json:"trhist_sparen1"` // trhist_sparen1
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`    // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

func AllTrHist(db XODB, callback func(x TrHist) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`trhist_date, trhist_time, trhist_user, trhist_notes, trhist_code, trhist_spared1, trhist_sparec1, trhist_sparen1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.tr_hist `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		th := TrHist{}

		// scan
		err = q.Scan(&th.TrhistDate, &th.TrhistTime, &th.TrhistUser, &th.TrhistNotes, &th.TrhistCode, &th.TrhistSpared1, &th.TrhistSparec1, &th.TrhistSparen1, &th.EquinoxPrn, &th.EquinoxLrn, &th.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(th) {
			return nil
		}
	}

	return nil
}

// TrHistByEquinoxLrn retrieves a row from 'equinox.tr_hist' as a TrHist.
//
// Generated from index 'tr_hist_pkey'.
func TrHistByEquinoxLrn(db XODB, equinoxLrn int64) (*TrHist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`trhist_date, trhist_time, trhist_user, trhist_notes, trhist_code, trhist_spared1, trhist_sparec1, trhist_sparen1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.tr_hist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	th := TrHist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&th.TrhistDate, &th.TrhistTime, &th.TrhistUser, &th.TrhistNotes, &th.TrhistCode, &th.TrhistSpared1, &th.TrhistSparec1, &th.TrhistSparen1, &th.EquinoxPrn, &th.EquinoxLrn, &th.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &th, nil
}
