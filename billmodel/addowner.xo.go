// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Addowner represents a row from 'equinox.addowner'.
type Addowner struct {
	Addoname        sql.NullString `json:"addoname"`        // addoname
	Addostartdate   pq.NullTime    `json:"addostartdate"`   // addostartdate
	Addoenddate     pq.NullTime    `json:"addoenddate"`     // addoenddate
	Addopostcode    sql.NullString `json:"addopostcode"`    // addopostcode
	Addocontactno   sql.NullString `json:"addocontactno"`   // addocontactno
	Addoemail       sql.NullString `json:"addoemail"`       // addoemail
	Addoaddress     sql.NullString `json:"addoaddress"`     // addoaddress
	Addoletagent    sql.NullString `json:"addoletagent"`    // addoletagent
	Addoletacontact sql.NullString `json:"addoletacontact"` // addoletacontact
	Addoletpostcode sql.NullString `json:"addoletpostcode"` // addoletpostcode
	Addoletphone    sql.NullString `json:"addoletphone"`    // addoletphone
	Addocustaccount sql.NullString `json:"addocustaccount"` // addocustaccount
	Addoenterredby  sql.NullString `json:"addoenterredby"`  // addoenterredby
	EquinoxPrn      sql.NullInt64  `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllAddowner(db XODB, callback func(x Addowner) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`addoname, addostartdate, addoenddate, addopostcode, addocontactno, addoemail, addoaddress, addoletagent, addoletacontact, addoletpostcode, addoletphone, addocustaccount, addoenterredby, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.addowner `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		a := Addowner{}

		// scan
		err = q.Scan(&a.Addoname, &a.Addostartdate, &a.Addoenddate, &a.Addopostcode, &a.Addocontactno, &a.Addoemail, &a.Addoaddress, &a.Addoletagent, &a.Addoletacontact, &a.Addoletpostcode, &a.Addoletphone, &a.Addocustaccount, &a.Addoenterredby, &a.EquinoxPrn, &a.EquinoxLrn, &a.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(a) {
			return nil
		}
	}

	return nil
}

// AddownerByEquinoxLrn retrieves a row from 'equinox.addowner' as a Addowner.
//
// Generated from index 'addowner_pkey'.
func AddownerByEquinoxLrn(db XODB, equinoxLrn int64) (*Addowner, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`addoname, addostartdate, addoenddate, addopostcode, addocontactno, addoemail, addoaddress, addoletagent, addoletacontact, addoletpostcode, addoletphone, addocustaccount, addoenterredby, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.addowner ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	a := Addowner{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&a.Addoname, &a.Addostartdate, &a.Addoenddate, &a.Addopostcode, &a.Addocontactno, &a.Addoemail, &a.Addoaddress, &a.Addoletagent, &a.Addoletacontact, &a.Addoletpostcode, &a.Addoletphone, &a.Addocustaccount, &a.Addoenterredby, &a.EquinoxPrn, &a.EquinoxLrn, &a.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &a, nil
}
