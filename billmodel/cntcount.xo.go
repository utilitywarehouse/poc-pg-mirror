// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cntcount represents a row from 'equinox.cntcount'.
type Cntcount struct {
	Cntcmonth  sql.NullString `json:"cntcmonth"`   // cntcmonth
	Cntccount  sql.NullInt64  `json:"cntccount"`   // cntccount
	EquinoxPrn sql.NullInt64  `json:"equinox_prn"` // equinox_prn
	EquinoxLrn int64          `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec sql.NullInt64  `json:"equinox_sec"` // equinox_sec
}

func AllCntcount(db XODB, callback func(x Cntcount) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cntcmonth, cntccount, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cntcount `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cntcount{}

		// scan
		err = q.Scan(&c.Cntcmonth, &c.Cntccount, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CntcountByEquinoxLrn retrieves a row from 'equinox.cntcount' as a Cntcount.
//
// Generated from index 'cntcount_pkey'.
func CntcountByEquinoxLrn(db XODB, equinoxLrn int64) (*Cntcount, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cntcmonth, cntccount, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cntcount ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cntcount{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cntcmonth, &c.Cntccount, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
