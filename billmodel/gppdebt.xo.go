// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gppdebt represents a row from 'equinox.gppdebt'.
type Gppdebt struct {
	Gppddebt         sql.NullFloat64 `json:"gppddebt"`         // gppddebt
	Gppdweeklymax    sql.NullFloat64 `json:"gppdweeklymax"`    // gppdweeklymax
	Gppdweeklymin    sql.NullFloat64 `json:"gppdweeklymin"`    // gppdweeklymin
	Gppdpercent      sql.NullInt64   `json:"gppdpercent"`      // gppdpercent
	Gppdnongasdebt   sql.NullFloat64 `json:"gppdnongasdebt"`   // gppdnongasdebt
	Gppddate         pq.NullTime     `json:"gppddate"`         // gppddate
	Gppdemergcredlim sql.NullInt64   `json:"gppdemergcredlim"` // gppdemergcredlim
	Gppdemergcreddeb sql.NullFloat64 `json:"gppdemergcreddeb"` // gppdemergcreddeb
	Gppdlog1         sql.NullFloat64 `json:"gppdlog1"`         // gppdlog1
	Gppdlog2         sql.NullFloat64 `json:"gppdlog2"`         // gppdlog2
	Gppdlog3         sql.NullFloat64 `json:"gppdlog3"`         // gppdlog3
	Gppdlog4         sql.NullFloat64 `json:"gppdlog4"`         // gppdlog4
	Gppdmsnmatch     sql.NullInt64   `json:"gppdmsnmatch"`     // gppdmsnmatch
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllGppdebt(db XODB, callback func(x Gppdebt) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gppddebt, gppdweeklymax, gppdweeklymin, gppdpercent, gppdnongasdebt, gppddate, gppdemergcredlim, gppdemergcreddeb, gppdlog1, gppdlog2, gppdlog3, gppdlog4, gppdmsnmatch, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gppdebt `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Gppdebt{}

		// scan
		err = q.Scan(&g.Gppddebt, &g.Gppdweeklymax, &g.Gppdweeklymin, &g.Gppdpercent, &g.Gppdnongasdebt, &g.Gppddate, &g.Gppdemergcredlim, &g.Gppdemergcreddeb, &g.Gppdlog1, &g.Gppdlog2, &g.Gppdlog3, &g.Gppdlog4, &g.Gppdmsnmatch, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GppdebtByEquinoxLrn retrieves a row from 'equinox.gppdebt' as a Gppdebt.
//
// Generated from index 'gppdebt_pkey'.
func GppdebtByEquinoxLrn(db XODB, equinoxLrn int64) (*Gppdebt, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gppddebt, gppdweeklymax, gppdweeklymin, gppdpercent, gppdnongasdebt, gppddate, gppdemergcredlim, gppdemergcreddeb, gppdlog1, gppdlog2, gppdlog3, gppdlog4, gppdmsnmatch, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gppdebt ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gppdebt{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gppddebt, &g.Gppdweeklymax, &g.Gppdweeklymin, &g.Gppdpercent, &g.Gppdnongasdebt, &g.Gppddate, &g.Gppdemergcredlim, &g.Gppdemergcreddeb, &g.Gppdlog1, &g.Gppdlog2, &g.Gppdlog3, &g.Gppdlog4, &g.Gppdmsnmatch, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
