// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gvisit represents a row from 'equinox.gvisit'.
type Gvisit struct {
	Gvisitdate       pq.NullTime    `json:"gvisitdate"`       // gvisitdate
	Gvisitoutcome    sql.NullString `json:"gvisitoutcome"`    // gvisitoutcome
	Gvisitnotes      sql.NullInt64  `json:"gvisitnotes"`      // gvisitnotes
	Gvisitreading    sql.NullString `json:"gvisitreading"`    // gvisitreading
	Gvisitreadtype   sql.NullString `json:"gvisitreadtype"`   // gvisitreadtype
	Gvisitfilename   sql.NullString `json:"gvisitfilename"`   // gvisitfilename
	Gvisitimportdate pq.NullTime    `json:"gvisitimportdate"` // gvisitimportdate
	EquinoxPrn       sql.NullInt64  `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// GvisitByEquinoxLrn retrieves a row from 'equinox.gvisit' as a Gvisit.
//
// Generated from index 'gvisit_pkey'.
func GvisitByEquinoxLrn(db XODB, equinoxLrn int64) (*Gvisit, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gvisitdate, gvisitoutcome, gvisitnotes, gvisitreading, gvisitreadtype, gvisitfilename, gvisitimportdate, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gvisit ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gvisit{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gvisitdate, &g.Gvisitoutcome, &g.Gvisitnotes, &g.Gvisitreading, &g.Gvisitreadtype, &g.Gvisitfilename, &g.Gvisitimportdate, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
