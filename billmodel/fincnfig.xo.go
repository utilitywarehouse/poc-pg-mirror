// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Fincnfig represents a row from 'equinox.fincnfig'.
type Fincnfig struct {
	Fnccref          sql.NullString `json:"fnccref"`          // fnccref
	Fncccommentcode  sql.NullString `json:"fncccommentcode"`  // fncccommentcode
	Fnccpaymenttype  sql.NullString `json:"fnccpaymenttype"`  // fnccpaymenttype
	Fnccpaymenttitle sql.NullString `json:"fnccpaymenttitle"` // fnccpaymenttitle
	Fnccbatchcode    sql.NullString `json:"fnccbatchcode"`    // fnccbatchcode
	Fnccadjustment   sql.NullString `json:"fnccadjustment"`   // fnccadjustment
	Fncccompymnttype sql.NullString `json:"fncccompymnttype"` // fncccompymnttype
	Fnccdescription  sql.NullString `json:"fnccdescription"`  // fnccdescription
	Fnccsuspend      sql.NullInt64  `json:"fnccsuspend"`      // fnccsuspend
	Fncccomadj       sql.NullString `json:"fncccomadj"`       // fncccomadj
	Fncccomamount    sql.NullString `json:"fncccomamount"`    // fncccomamount
	Fnccpending      sql.NullString `json:"fnccpending"`      // fnccpending
	Fnccdisplaysign  sql.NullString `json:"fnccdisplaysign"`  // fnccdisplaysign
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// FincnfigByEquinoxLrn retrieves a row from 'equinox.fincnfig' as a Fincnfig.
//
// Generated from index 'fincnfig_pkey'.
func FincnfigByEquinoxLrn(db XODB, equinoxLrn int64) (*Fincnfig, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`fnccref, fncccommentcode, fnccpaymenttype, fnccpaymenttitle, fnccbatchcode, fnccadjustment, fncccompymnttype, fnccdescription, fnccsuspend, fncccomadj, fncccomamount, fnccpending, fnccdisplaysign, equinox_lrn, equinox_sec ` +
		`FROM equinox.fincnfig ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	f := Fincnfig{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&f.Fnccref, &f.Fncccommentcode, &f.Fnccpaymenttype, &f.Fnccpaymenttitle, &f.Fnccbatchcode, &f.Fnccadjustment, &f.Fncccompymnttype, &f.Fnccdescription, &f.Fnccsuspend, &f.Fncccomadj, &f.Fncccomamount, &f.Fnccpending, &f.Fnccdisplaysign, &f.EquinoxLrn, &f.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &f, nil
}
