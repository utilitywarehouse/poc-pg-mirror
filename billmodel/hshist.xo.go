// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// HsHist represents a row from 'equinox.hs_hist'.
type HsHist struct {
	HsHistDate      pq.NullTime     `json:"hs_hist_date"`     // hs_hist_date
	HsHistcost      sql.NullFloat64 `json:"hs_histcost"`      // hs_histcost
	HsHistRPC       sql.NullString  `json:"hs_hist_rpc"`      // hs_hist_rpc
	HsHistcontribut sql.NullFloat64 `json:"hs_histcontribut"` // hs_histcontribut
	HsHisthsguide   sql.NullString  `json:"hs_histhsguide"`   // hs_histhsguide
	HsHistspared1   pq.NullTime     `json:"hs_histspared1"`   // hs_histspared1
	HsHistphonetype sql.NullInt64   `json:"hs_histphonetype"` // hs_histphonetype
	HsHistgoldcont  sql.NullFloat64 `json:"hs_histgoldcont"`  // hs_histgoldcont
	HsHist24mcharge sql.NullString  `json:"hs_hist24mcharge"` // hs_hist24mcharge
	HsHist12mcharge sql.NullString  `json:"hs_hist12mcharge"` // hs_hist12mcharge
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllHsHist(db XODB, callback func(x HsHist) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`hs_hist_date, hs_histcost, hs_hist_rpc, hs_histcontribut, hs_histhsguide, hs_histspared1, hs_histphonetype, hs_histgoldcont, hs_hist24mcharge, hs_hist12mcharge, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.hs_hist `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		hh := HsHist{}

		// scan
		err = q.Scan(&hh.HsHistDate, &hh.HsHistcost, &hh.HsHistRPC, &hh.HsHistcontribut, &hh.HsHisthsguide, &hh.HsHistspared1, &hh.HsHistphonetype, &hh.HsHistgoldcont, &hh.HsHist24mcharge, &hh.HsHist12mcharge, &hh.EquinoxPrn, &hh.EquinoxLrn, &hh.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(hh) {
			return nil
		}
	}

	return nil
}

// HsHistByEquinoxLrn retrieves a row from 'equinox.hs_hist' as a HsHist.
//
// Generated from index 'hs_hist_pkey'.
func HsHistByEquinoxLrn(db XODB, equinoxLrn int64) (*HsHist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`hs_hist_date, hs_histcost, hs_hist_rpc, hs_histcontribut, hs_histhsguide, hs_histspared1, hs_histphonetype, hs_histgoldcont, hs_hist24mcharge, hs_hist12mcharge, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.hs_hist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	hh := HsHist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&hh.HsHistDate, &hh.HsHistcost, &hh.HsHistRPC, &hh.HsHistcontribut, &hh.HsHisthsguide, &hh.HsHistspared1, &hh.HsHistphonetype, &hh.HsHistgoldcont, &hh.HsHist24mcharge, &hh.HsHist12mcharge, &hh.EquinoxPrn, &hh.EquinoxLrn, &hh.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &hh, nil
}
