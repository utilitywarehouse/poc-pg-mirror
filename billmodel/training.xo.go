// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Training represents a row from 'equinox.training'.
type Training struct {
	Truniqueid      sql.NullInt64  `json:"truniqueid"`      // truniqueid
	Trvenueid       sql.NullInt64  `json:"trvenueid"`       // trvenueid
	Trtrainerid     sql.NullString `json:"trtrainerid"`     // trtrainerid
	Trtrainerid2    sql.NullString `json:"trtrainerid2"`    // trtrainerid2
	Trdate          pq.NullTime    `json:"trdate"`          // trdate
	Trstarttime     pq.NullTime    `json:"trstarttime"`     // trstarttime
	Trtime          pq.NullTime    `json:"trtime"`          // trtime
	Trcapacity      sql.NullInt64  `json:"trcapacity"`      // trcapacity
	Trsparec2       sql.NullString `json:"trsparec2"`       // trsparec2
	Trcoelevel      sql.NullString `json:"trcoelevel"`      // trcoelevel
	Trstatus        sql.NullString `json:"trstatus"`        // trstatus
	Trtrainername   sql.NullString `json:"trtrainername"`   // trtrainername
	Trtrainername2  sql.NullString `json:"trtrainername2"`  // trtrainername2
	Trsentsms       sql.NullString `json:"trsentsms"`       // trsentsms
	Trspacen1       sql.NullInt64  `json:"trspacen1"`       // trspacen1
	Trsparec1       sql.NullString `json:"trsparec1"`       // trsparec1
	Troldexecspaces sql.NullInt64  `json:"troldexecspaces"` // troldexecspaces
	Trnewexecspaces sql.NullInt64  `json:"trnewexecspaces"` // trnewexecspaces
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllTraining(db XODB, callback func(x Training) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`truniqueid, trvenueid, trtrainerid, trtrainerid2, trdate, trstarttime, trtime, trcapacity, trsparec2, trcoelevel, trstatus, trtrainername, trtrainername2, trsentsms, trspacen1, trsparec1, troldexecspaces, trnewexecspaces, equinox_lrn, equinox_sec ` +
		`FROM equinox.training `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		t := Training{}

		// scan
		err = q.Scan(&t.Truniqueid, &t.Trvenueid, &t.Trtrainerid, &t.Trtrainerid2, &t.Trdate, &t.Trstarttime, &t.Trtime, &t.Trcapacity, &t.Trsparec2, &t.Trcoelevel, &t.Trstatus, &t.Trtrainername, &t.Trtrainername2, &t.Trsentsms, &t.Trspacen1, &t.Trsparec1, &t.Troldexecspaces, &t.Trnewexecspaces, &t.EquinoxLrn, &t.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(t) {
			return nil
		}
	}

	return nil
}

// TrainingByEquinoxLrn retrieves a row from 'equinox.training' as a Training.
//
// Generated from index 'training_pkey'.
func TrainingByEquinoxLrn(db XODB, equinoxLrn int64) (*Training, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`truniqueid, trvenueid, trtrainerid, trtrainerid2, trdate, trstarttime, trtime, trcapacity, trsparec2, trcoelevel, trstatus, trtrainername, trtrainername2, trsentsms, trspacen1, trsparec1, troldexecspaces, trnewexecspaces, equinox_lrn, equinox_sec ` +
		`FROM equinox.training ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	t := Training{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&t.Truniqueid, &t.Trvenueid, &t.Trtrainerid, &t.Trtrainerid2, &t.Trdate, &t.Trstarttime, &t.Trtime, &t.Trcapacity, &t.Trsparec2, &t.Trcoelevel, &t.Trstatus, &t.Trtrainername, &t.Trtrainername2, &t.Trsentsms, &t.Trspacen1, &t.Trsparec1, &t.Troldexecspaces, &t.Trnewexecspaces, &t.EquinoxLrn, &t.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &t, nil
}
