// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// OEvent represents a row from 'equinox.o_events'.
type OEvent struct {
	OeEventID      sql.NullString `json:"oe_event_id"`      // oe_event_id
	OeVenueID      sql.NullString `json:"oe_venue_id"`      // oe_venue_id
	OeTrainerID    sql.NullString `json:"oe_trainer_id"`    // oe_trainer_id
	OeTrainer2ID   sql.NullString `json:"oe_trainer2_id"`   // oe_trainer2_id
	OeEventDate    pq.NullTime    `json:"oe_event_date"`    // oe_event_date
	OeStartTime    pq.NullTime    `json:"oe_start_time"`    // oe_start_time
	OeRegTime      pq.NullTime    `json:"oe_reg_time"`      // oe_reg_time
	OeCapacity     sql.NullInt64  `json:"oe_capacity"`      // oe_capacity
	OeBooked       sql.NullInt64  `json:"oe_booked"`        // oe_booked
	OeEventLevel   sql.NullString `json:"oe_event_level"`   // oe_event_level
	OeEventStatus  sql.NullString `json:"oe_event_status"`  // oe_event_status
	OeTabletsReq   sql.NullInt64  `json:"oe_tablets_req"`   // oe_tablets_req
	OeTabsToreturn sql.NullInt64  `json:"oe_tabs_toreturn"` // oe_tabs_toreturn
	OeTabsReturned sql.NullInt64  `json:"oe_tabs_returned"` // oe_tabs_returned
	OeTabsAccntfor sql.NullInt64  `json:"oe_tabs_accntfor"` // oe_tabs_accntfor
	OeStartpksReq  sql.NullInt64  `json:"oe_startpks_req"`  // oe_startpks_req
	OeStartpksDisp sql.NullInt64  `json:"oe_startpks_disp"` // oe_startpks_disp
	OeDuration     sql.NullInt64  `json:"oe_duration"`      // oe_duration
	EquinoxLrn     int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// OEventByEquinoxLrn retrieves a row from 'equinox.o_events' as a OEvent.
//
// Generated from index 'o_events_pkey'.
func OEventByEquinoxLrn(db XODB, equinoxLrn int64) (*OEvent, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`oe_event_id, oe_venue_id, oe_trainer_id, oe_trainer2_id, oe_event_date, oe_start_time, oe_reg_time, oe_capacity, oe_booked, oe_event_level, oe_event_status, oe_tablets_req, oe_tabs_toreturn, oe_tabs_returned, oe_tabs_accntfor, oe_startpks_req, oe_startpks_disp, oe_duration, equinox_lrn, equinox_sec ` +
		`FROM equinox.o_events ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	oe := OEvent{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&oe.OeEventID, &oe.OeVenueID, &oe.OeTrainerID, &oe.OeTrainer2ID, &oe.OeEventDate, &oe.OeStartTime, &oe.OeRegTime, &oe.OeCapacity, &oe.OeBooked, &oe.OeEventLevel, &oe.OeEventStatus, &oe.OeTabletsReq, &oe.OeTabsToreturn, &oe.OeTabsReturned, &oe.OeTabsAccntfor, &oe.OeStartpksReq, &oe.OeStartpksDisp, &oe.OeDuration, &oe.EquinoxLrn, &oe.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &oe, nil
}
