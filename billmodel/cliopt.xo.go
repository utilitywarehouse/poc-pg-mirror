// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Cliopt represents a row from 'equinox.cliopts'.
type Cliopt struct {
	Clirmoptid       sql.NullString  `json:"clirmoptid"`       // clirmoptid
	Clirmsetup       sql.NullFloat64 `json:"clirmsetup"`       // clirmsetup
	Clirmmonthly     sql.NullFloat64 `json:"clirmmonthly"`     // clirmmonthly
	Clirmdaily       sql.NullFloat64 `json:"clirmdaily"`       // clirmdaily
	Clirmmnthordaily sql.NullString  `json:"clirmmnthordaily"` // clirmmnthordaily
	Clirmsparen1     sql.NullInt64   `json:"clirmsparen1"`     // clirmsparen1
	Clirmstartdate   pq.NullTime     `json:"clirmstartdate"`   // clirmstartdate
	Clirmenddate     pq.NullTime     `json:"clirmenddate"`     // clirmenddate
	Clirmpaiduntil   pq.NullTime     `json:"clirmpaiduntil"`   // clirmpaiduntil
	Clirmpaiduntilbr pq.NullTime     `json:"clirmpaiduntilbr"` // clirmpaiduntilbr
	Clirmmonthsadv   sql.NullInt64   `json:"clirmmonthsadv"`   // clirmmonthsadv
	Clirmoneofbillno sql.NullFloat64 `json:"clirmoneofbillno"` // clirmoneofbillno
	Clirmspecialdeal sql.NullInt64   `json:"clirmspecialdeal"` // clirmspecialdeal
	Clirmcontmethod  sql.NullString  `json:"clirmcontmethod"`  // clirmcontmethod
	Clirmdiscband    sql.NullString  `json:"clirmdiscband"`    // clirmdiscband
	Clirmdiscpercent sql.NullFloat64 `json:"clirmdiscpercent"` // clirmdiscpercent
	Clirmwlrorder    sql.NullString  `json:"clirmwlrorder"`    // clirmwlrorder
	Clirmquantity    sql.NullFloat64 `json:"clirmquantity"`    // clirmquantity
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllCliopt(db XODB, callback func(x Cliopt) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`clirmoptid, clirmsetup, clirmmonthly, clirmdaily, clirmmnthordaily, clirmsparen1, clirmstartdate, clirmenddate, clirmpaiduntil, clirmpaiduntilbr, clirmmonthsadv, clirmoneofbillno, clirmspecialdeal, clirmcontmethod, clirmdiscband, clirmdiscpercent, clirmwlrorder, clirmquantity, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cliopts `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cliopt{}

		// scan
		err = q.Scan(&c.Clirmoptid, &c.Clirmsetup, &c.Clirmmonthly, &c.Clirmdaily, &c.Clirmmnthordaily, &c.Clirmsparen1, &c.Clirmstartdate, &c.Clirmenddate, &c.Clirmpaiduntil, &c.Clirmpaiduntilbr, &c.Clirmmonthsadv, &c.Clirmoneofbillno, &c.Clirmspecialdeal, &c.Clirmcontmethod, &c.Clirmdiscband, &c.Clirmdiscpercent, &c.Clirmwlrorder, &c.Clirmquantity, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// ClioptByEquinoxLrn retrieves a row from 'equinox.cliopts' as a Cliopt.
//
// Generated from index 'cliopts_pkey'.
func ClioptByEquinoxLrn(db XODB, equinoxLrn int64) (*Cliopt, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`clirmoptid, clirmsetup, clirmmonthly, clirmdaily, clirmmnthordaily, clirmsparen1, clirmstartdate, clirmenddate, clirmpaiduntil, clirmpaiduntilbr, clirmmonthsadv, clirmoneofbillno, clirmspecialdeal, clirmcontmethod, clirmdiscband, clirmdiscpercent, clirmwlrorder, clirmquantity, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cliopts ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cliopt{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Clirmoptid, &c.Clirmsetup, &c.Clirmmonthly, &c.Clirmdaily, &c.Clirmmnthordaily, &c.Clirmsparen1, &c.Clirmstartdate, &c.Clirmenddate, &c.Clirmpaiduntil, &c.Clirmpaiduntilbr, &c.Clirmmonthsadv, &c.Clirmoneofbillno, &c.Clirmspecialdeal, &c.Clirmcontmethod, &c.Clirmdiscband, &c.Clirmdiscpercent, &c.Clirmwlrorder, &c.Clirmquantity, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
