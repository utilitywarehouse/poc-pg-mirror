// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Pickcode represents a row from 'equinox.pickcode'.
type Pickcode struct {
	Pickcodecode  sql.NullString  `json:"pickcodecode"`  // pickcodecode
	Pickcodedesc  sql.NullString  `json:"pickcodedesc"`  // pickcodedesc
	Pickenteredby sql.NullString  `json:"pickenteredby"` // pickenteredby
	Pickcodepromo sql.NullString  `json:"pickcodepromo"` // pickcodepromo
	Picksparec1   sql.NullString  `json:"picksparec1"`   // picksparec1
	Picksparen1   sql.NullFloat64 `json:"picksparen1"`   // picksparen1
	Pickspared1   pq.NullTime     `json:"pickspared1"`   // pickspared1
	EquinoxLrn    int64           `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64   `json:"equinox_sec"`   // equinox_sec
}

// PickcodeByEquinoxLrn retrieves a row from 'equinox.pickcode' as a Pickcode.
//
// Generated from index 'pickcode_pkey'.
func PickcodeByEquinoxLrn(db XODB, equinoxLrn int64) (*Pickcode, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pickcodecode, pickcodedesc, pickenteredby, pickcodepromo, picksparec1, picksparen1, pickspared1, equinox_lrn, equinox_sec ` +
		`FROM equinox.pickcode ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Pickcode{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pickcodecode, &p.Pickcodedesc, &p.Pickenteredby, &p.Pickcodepromo, &p.Picksparec1, &p.Picksparen1, &p.Pickspared1, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
