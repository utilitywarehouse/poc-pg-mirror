// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gasdatum represents a row from 'equinox.gasdata'.
type Gasdatum struct {
	Gwldz      sql.NullString  `json:"gwldz"`       // gwldz
	Gwdate     pq.NullTime     `json:"gwdate"`      // gwdate
	Gwewcf     sql.NullFloat64 `json:"gwewcf"`      // gwewcf
	Gwalp01    sql.NullFloat64 `json:"gwalp01"`     // gwalp01
	Gwalp02    sql.NullFloat64 `json:"gwalp02"`     // gwalp02
	Gwdaf01    sql.NullFloat64 `json:"gwdaf01"`     // gwdaf01
	Gwdaf02    sql.NullFloat64 `json:"gwdaf02"`     // gwdaf02
	EquinoxLrn int64           `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec sql.NullInt64   `json:"equinox_sec"` // equinox_sec
}

func AllGasdatum(db XODB, callback func(x Gasdatum) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gwldz, gwdate, gwewcf, gwalp01, gwalp02, gwdaf01, gwdaf02, equinox_lrn, equinox_sec ` +
		`FROM equinox.gasdata `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Gasdatum{}

		// scan
		err = q.Scan(&g.Gwldz, &g.Gwdate, &g.Gwewcf, &g.Gwalp01, &g.Gwalp02, &g.Gwdaf01, &g.Gwdaf02, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GasdatumByEquinoxLrn retrieves a row from 'equinox.gasdata' as a Gasdatum.
//
// Generated from index 'gasdata_pkey'.
func GasdatumByEquinoxLrn(db XODB, equinoxLrn int64) (*Gasdatum, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gwldz, gwdate, gwewcf, gwalp01, gwalp02, gwdaf01, gwdaf02, equinox_lrn, equinox_sec ` +
		`FROM equinox.gasdata ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gasdatum{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gwldz, &g.Gwdate, &g.Gwewcf, &g.Gwalp01, &g.Gwalp02, &g.Gwdaf01, &g.Gwdaf02, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
