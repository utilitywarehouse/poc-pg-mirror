// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ffdfile represents a row from 'equinox.ffdfile'.
type Ffdfile struct {
	Gffconqrefno     sql.NullString  `json:"gffconqrefno"`     // gffconqrefno
	Gffcaseevntdescd sql.NullString  `json:"gffcaseevntdescd"` // gffcaseevntdescd
	Gffmprn          sql.NullFloat64 `json:"gffmprn"`          // gffmprn
	Gffstartreaddate pq.NullTime     `json:"gffstartreaddate"` // gffstartreaddate
	Gffendreaddate   pq.NullTime     `json:"gffendreaddate"`   // gffendreaddate
	Gffstartmeterrd  sql.NullFloat64 `json:"gffstartmeterrd"`  // gffstartmeterrd
	Gffendmeterread  sql.NullFloat64 `json:"gffendmeterread"`  // gffendmeterread
	Gffstartcorrrd   sql.NullFloat64 `json:"gffstartcorrrd"`   // gffstartcorrrd
	Gffendcorrrd     sql.NullFloat64 `json:"gffendcorrrd"`     // gffendcorrrd
	Gffstartrdtype   sql.NullString  `json:"gffstartrdtype"`   // gffstartrdtype
	Gffendrdtype     sql.NullString  `json:"gffendrdtype"`     // gffendrdtype
	Gffstartrdrsn    sql.NullString  `json:"gffstartrdrsn"`    // gffstartrdrsn
	Gffendrdrsn      sql.NullString  `json:"gffendrdrsn"`      // gffendrdrsn
	Gffvolconsumed   sql.NullFloat64 `json:"gffvolconsumed"`   // gffvolconsumed
	Gffinvvolconsumd sql.NullFloat64 `json:"gffinvvolconsumd"` // gffinvvolconsumd
	Gffunmtrdconsum  sql.NullFloat64 `json:"gffunmtrdconsum"`  // gffunmtrdconsum
	Gfftotallocvol   sql.NullFloat64 `json:"gfftotallocvol"`   // gfftotallocvol
	Gffdmdallocvol   sql.NullFloat64 `json:"gffdmdallocvol"`   // gffdmdallocvol
	Gffdmdallocengy  sql.NullFloat64 `json:"gffdmdallocengy"`  // gffdmdallocengy
	Gffactualenergy  sql.NullFloat64 `json:"gffactualenergy"`  // gffactualenergy
	Gffmetertzicount sql.NullInt64   `json:"gffmetertzicount"` // gffmetertzicount
	Gffcorrtzicnt    sql.NullInt64   `json:"gffcorrtzicnt"`    // gffcorrtzicnt
	Gffgrecharge     sql.NullFloat64 `json:"gffgrecharge"`     // gffgrecharge
	Gfftrecharge     sql.NullFloat64 `json:"gfftrecharge"`     // gfftrecharge
	Gffndmreadref    sql.NullInt64   `json:"gffndmreadref"`    // gffndmreadref
	Gfffldrereccnadj sql.NullString  `json:"gfffldrereccnadj"` // gfffldrereccnadj
	Gffnotesconadj   sql.NullString  `json:"gffnotesconadj"`   // gffnotesconadj
	Gfffldrerecrprd  sql.NullString  `json:"gfffldrerecrprd"`  // gfffldrerecrprd
	Gffnotesrprd     sql.NullString  `json:"gffnotesrprd"`     // gffnotesrprd
	Gffmeterassetinc sql.NullString  `json:"gffmeterassetinc"` // gffmeterassetinc
	Gffntsmtrassinc  sql.NullString  `json:"gffntsmtrassinc"`  // gffntsmtrassinc
	Gffcorrtolfail   sql.NullString  `json:"gffcorrtolfail"`   // gffcorrtolfail
	Gffntscortolfail sql.NullString  `json:"gffntscortolfail"` // gffntscortolfail
	Gffstartrdeopnt  sql.NullString  `json:"gffstartrdeopnt"`  // gffstartrdeopnt
	Gffntssrtrdeopnt sql.NullString  `json:"gffntssrtrdeopnt"` // gffntssrtrdeopnt
	Gffincconsump    sql.NullString  `json:"gffincconsump"`    // gffincconsump
	Gffntsinccnsmptn sql.NullString  `json:"gffntsinccnsmptn"` // gffntsinccnsmptn
	Gffincorrectttz  sql.NullString  `json:"gffincorrectttz"`  // gffincorrectttz
	Gffntsincorctttz sql.NullString  `json:"gffntsincorctttz"` // gffntsincorctttz
	Gffhistorconsum  sql.NullString  `json:"gffhistorconsum"`  // gffhistorconsum
	Gffntshistconsum sql.NullString  `json:"gffntshistconsum"` // gffntshistconsum
	Gffrejctcdreason sql.NullInt64   `json:"gffrejctcdreason"` // gffrejctcdreason
	Gffcontactstatus sql.NullString  `json:"gffcontactstatus"` // gffcontactstatus
	Gffldz           sql.NullString  `json:"gffldz"`           // gffldz
	Gfffilterfaildt  pq.NullTime     `json:"gfffilterfaildt"`  // gfffilterfaildt
	Gffprocessed     sql.NullInt64   `json:"gffprocessed"`     // gffprocessed
	Gffaccepted      sql.NullInt64   `json:"gffaccepted"`      // gffaccepted
	Gfffilename      sql.NullString  `json:"gfffilename"`      // gfffilename
	Gffarchived      sql.NullInt64   `json:"gffarchived"`      // gffarchived
	Gffdateimported  pq.NullTime     `json:"gffdateimported"`  // gffdateimported
	Gfftimeimported  pq.NullTime     `json:"gfftimeimported"`  // gfftimeimported
	Gffrejected      sql.NullInt64   `json:"gffrejected"`      // gffrejected
	Gffarchivedby    sql.NullString  `json:"gffarchivedby"`    // gffarchivedby
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllFfdfile(db XODB, callback func(x Ffdfile) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gffconqrefno, gffcaseevntdescd, gffmprn, gffstartreaddate, gffendreaddate, gffstartmeterrd, gffendmeterread, gffstartcorrrd, gffendcorrrd, gffstartrdtype, gffendrdtype, gffstartrdrsn, gffendrdrsn, gffvolconsumed, gffinvvolconsumd, gffunmtrdconsum, gfftotallocvol, gffdmdallocvol, gffdmdallocengy, gffactualenergy, gffmetertzicount, gffcorrtzicnt, gffgrecharge, gfftrecharge, gffndmreadref, gfffldrereccnadj, gffnotesconadj, gfffldrerecrprd, gffnotesrprd, gffmeterassetinc, gffntsmtrassinc, gffcorrtolfail, gffntscortolfail, gffstartrdeopnt, gffntssrtrdeopnt, gffincconsump, gffntsinccnsmptn, gffincorrectttz, gffntsincorctttz, gffhistorconsum, gffntshistconsum, gffrejctcdreason, gffcontactstatus, gffldz, gfffilterfaildt, gffprocessed, gffaccepted, gfffilename, gffarchived, gffdateimported, gfftimeimported, gffrejected, gffarchivedby, equinox_lrn, equinox_sec ` +
		`FROM equinox.ffdfile `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		f := Ffdfile{}

		// scan
		err = q.Scan(&f.Gffconqrefno, &f.Gffcaseevntdescd, &f.Gffmprn, &f.Gffstartreaddate, &f.Gffendreaddate, &f.Gffstartmeterrd, &f.Gffendmeterread, &f.Gffstartcorrrd, &f.Gffendcorrrd, &f.Gffstartrdtype, &f.Gffendrdtype, &f.Gffstartrdrsn, &f.Gffendrdrsn, &f.Gffvolconsumed, &f.Gffinvvolconsumd, &f.Gffunmtrdconsum, &f.Gfftotallocvol, &f.Gffdmdallocvol, &f.Gffdmdallocengy, &f.Gffactualenergy, &f.Gffmetertzicount, &f.Gffcorrtzicnt, &f.Gffgrecharge, &f.Gfftrecharge, &f.Gffndmreadref, &f.Gfffldrereccnadj, &f.Gffnotesconadj, &f.Gfffldrerecrprd, &f.Gffnotesrprd, &f.Gffmeterassetinc, &f.Gffntsmtrassinc, &f.Gffcorrtolfail, &f.Gffntscortolfail, &f.Gffstartrdeopnt, &f.Gffntssrtrdeopnt, &f.Gffincconsump, &f.Gffntsinccnsmptn, &f.Gffincorrectttz, &f.Gffntsincorctttz, &f.Gffhistorconsum, &f.Gffntshistconsum, &f.Gffrejctcdreason, &f.Gffcontactstatus, &f.Gffldz, &f.Gfffilterfaildt, &f.Gffprocessed, &f.Gffaccepted, &f.Gfffilename, &f.Gffarchived, &f.Gffdateimported, &f.Gfftimeimported, &f.Gffrejected, &f.Gffarchivedby, &f.EquinoxLrn, &f.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(f) {
			return nil
		}
	}

	return nil
}

// FfdfileByEquinoxLrn retrieves a row from 'equinox.ffdfile' as a Ffdfile.
//
// Generated from index 'ffdfile_pkey'.
func FfdfileByEquinoxLrn(db XODB, equinoxLrn int64) (*Ffdfile, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gffconqrefno, gffcaseevntdescd, gffmprn, gffstartreaddate, gffendreaddate, gffstartmeterrd, gffendmeterread, gffstartcorrrd, gffendcorrrd, gffstartrdtype, gffendrdtype, gffstartrdrsn, gffendrdrsn, gffvolconsumed, gffinvvolconsumd, gffunmtrdconsum, gfftotallocvol, gffdmdallocvol, gffdmdallocengy, gffactualenergy, gffmetertzicount, gffcorrtzicnt, gffgrecharge, gfftrecharge, gffndmreadref, gfffldrereccnadj, gffnotesconadj, gfffldrerecrprd, gffnotesrprd, gffmeterassetinc, gffntsmtrassinc, gffcorrtolfail, gffntscortolfail, gffstartrdeopnt, gffntssrtrdeopnt, gffincconsump, gffntsinccnsmptn, gffincorrectttz, gffntsincorctttz, gffhistorconsum, gffntshistconsum, gffrejctcdreason, gffcontactstatus, gffldz, gfffilterfaildt, gffprocessed, gffaccepted, gfffilename, gffarchived, gffdateimported, gfftimeimported, gffrejected, gffarchivedby, equinox_lrn, equinox_sec ` +
		`FROM equinox.ffdfile ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	f := Ffdfile{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&f.Gffconqrefno, &f.Gffcaseevntdescd, &f.Gffmprn, &f.Gffstartreaddate, &f.Gffendreaddate, &f.Gffstartmeterrd, &f.Gffendmeterread, &f.Gffstartcorrrd, &f.Gffendcorrrd, &f.Gffstartrdtype, &f.Gffendrdtype, &f.Gffstartrdrsn, &f.Gffendrdrsn, &f.Gffvolconsumed, &f.Gffinvvolconsumd, &f.Gffunmtrdconsum, &f.Gfftotallocvol, &f.Gffdmdallocvol, &f.Gffdmdallocengy, &f.Gffactualenergy, &f.Gffmetertzicount, &f.Gffcorrtzicnt, &f.Gffgrecharge, &f.Gfftrecharge, &f.Gffndmreadref, &f.Gfffldrereccnadj, &f.Gffnotesconadj, &f.Gfffldrerecrprd, &f.Gffnotesrprd, &f.Gffmeterassetinc, &f.Gffntsmtrassinc, &f.Gffcorrtolfail, &f.Gffntscortolfail, &f.Gffstartrdeopnt, &f.Gffntssrtrdeopnt, &f.Gffincconsump, &f.Gffntsinccnsmptn, &f.Gffincorrectttz, &f.Gffntsincorctttz, &f.Gffhistorconsum, &f.Gffntshistconsum, &f.Gffrejctcdreason, &f.Gffcontactstatus, &f.Gffldz, &f.Gfffilterfaildt, &f.Gffprocessed, &f.Gffaccepted, &f.Gfffilename, &f.Gffarchived, &f.Gffdateimported, &f.Gfftimeimported, &f.Gffrejected, &f.Gffarchivedby, &f.EquinoxLrn, &f.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &f, nil
}
