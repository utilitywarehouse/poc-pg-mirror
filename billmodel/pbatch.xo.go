// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Pbatch represents a row from 'equinox.pbatches'.
type Pbatch struct {
	Pbbatchnumber  sql.NullString  `json:"pbbatchnumber"`  // pbbatchnumber
	Pbbatchdate    pq.NullTime     `json:"pbbatchdate"`    // pbbatchdate
	Pbbatchcode    sql.NullString  `json:"pbbatchcode"`    // pbbatchcode
	Pbcommitdate   pq.NullTime     `json:"pbcommitdate"`   // pbcommitdate
	Pbcommittime   pq.NullTime     `json:"pbcommittime"`   // pbcommittime
	Pbbatchtotal   sql.NullFloat64 `json:"pbbatchtotal"`   // pbbatchtotal
	Pbinputtotal   sql.NullFloat64 `json:"pbinputtotal"`   // pbinputtotal
	Pbinputrecords sql.NullInt64   `json:"pbinputrecords"` // pbinputrecords
	Pbnotes        sql.NullString  `json:"pbnotes"`        // pbnotes
	Pbpaymentdate  pq.NullTime     `json:"pbpaymentdate"`  // pbpaymentdate
	Pbbatchgroup   sql.NullString  `json:"pbbatchgroup"`   // pbbatchgroup
	EquinoxLrn     int64           `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`    // equinox_sec
}

// PbatchByEquinoxLrn retrieves a row from 'equinox.pbatches' as a Pbatch.
//
// Generated from index 'pbatches_pkey'.
func PbatchByEquinoxLrn(db XODB, equinoxLrn int64) (*Pbatch, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pbbatchnumber, pbbatchdate, pbbatchcode, pbcommitdate, pbcommittime, pbbatchtotal, pbinputtotal, pbinputrecords, pbnotes, pbpaymentdate, pbbatchgroup, equinox_lrn, equinox_sec ` +
		`FROM equinox.pbatches ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Pbatch{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pbbatchnumber, &p.Pbbatchdate, &p.Pbbatchcode, &p.Pbcommitdate, &p.Pbcommittime, &p.Pbbatchtotal, &p.Pbinputtotal, &p.Pbinputrecords, &p.Pbnotes, &p.Pbpaymentdate, &p.Pbbatchgroup, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
