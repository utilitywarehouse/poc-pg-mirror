// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cntpart represents a row from 'equinox.cntpart'.
type Cntpart struct {
	Cntpindex   sql.NullInt64  `json:"cntpindex"`   // cntpindex
	Cntptype    sql.NullString `json:"cntptype"`    // cntptype
	Cntpcontent sql.NullInt64  `json:"cntpcontent"` // cntpcontent
	EquinoxPrn  sql.NullInt64  `json:"equinox_prn"` // equinox_prn
	EquinoxLrn  int64          `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec  sql.NullInt64  `json:"equinox_sec"` // equinox_sec
}

func AllCntpart(db XODB, callback func(x Cntpart) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cntpindex, cntptype, cntpcontent, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cntpart `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cntpart{}

		// scan
		err = q.Scan(&c.Cntpindex, &c.Cntptype, &c.Cntpcontent, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CntpartByEquinoxLrn retrieves a row from 'equinox.cntpart' as a Cntpart.
//
// Generated from index 'cntpart_pkey'.
func CntpartByEquinoxLrn(db XODB, equinoxLrn int64) (*Cntpart, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cntpindex, cntptype, cntpcontent, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cntpart ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cntpart{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cntpindex, &c.Cntptype, &c.Cntpcontent, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
