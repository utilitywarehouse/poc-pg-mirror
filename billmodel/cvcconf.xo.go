// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cvcconf represents a row from 'equinox.cvcconf'.
type Cvcconf struct {
	Cvcconfigid      sql.NullInt64   `json:"cvcconfigid"`      // cvcconfigid
	Cvcdescription   sql.NullString  `json:"cvcdescription"`   // cvcdescription
	Cvcbillsfield    sql.NullString  `json:"cvcbillsfield"`    // cvcbillsfield
	Cvcentrycode     sql.NullInt64   `json:"cvcentrycode"`     // cvcentrycode
	Cvcexectotal     sql.NullInt64   `json:"cvcexectotal"`     // cvcexectotal
	Cvcdownlinetotal sql.NullInt64   `json:"cvcdownlinetotal"` // cvcdownlinetotal
	Cvcinvoicetotal  sql.NullInt64   `json:"cvcinvoicetotal"`  // cvcinvoicetotal
	Cvcdownline      sql.NullInt64   `json:"cvcdownline"`      // cvcdownline
	Cvcratingid      sql.NullInt64   `json:"cvcratingid"`      // cvcratingid
	Cvcservicecode   sql.NullString  `json:"cvcservicecode"`   // cvcservicecode
	Cvcrateposition  sql.NullInt64   `json:"cvcrateposition"`  // cvcrateposition
	Cvcservposition  sql.NullInt64   `json:"cvcservposition"`  // cvcservposition
	Cvcsparen2       sql.NullFloat64 `json:"cvcsparen2"`       // cvcsparen2
	Cvcsparec1       sql.NullString  `json:"cvcsparec1"`       // cvcsparec1
	Cvcsparec2       sql.NullString  `json:"cvcsparec2"`       // cvcsparec2
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllCvcconf(db XODB, callback func(x Cvcconf) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cvcconfigid, cvcdescription, cvcbillsfield, cvcentrycode, cvcexectotal, cvcdownlinetotal, cvcinvoicetotal, cvcdownline, cvcratingid, cvcservicecode, cvcrateposition, cvcservposition, cvcsparen2, cvcsparec1, cvcsparec2, equinox_lrn, equinox_sec ` +
		`FROM equinox.cvcconf `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cvcconf{}

		// scan
		err = q.Scan(&c.Cvcconfigid, &c.Cvcdescription, &c.Cvcbillsfield, &c.Cvcentrycode, &c.Cvcexectotal, &c.Cvcdownlinetotal, &c.Cvcinvoicetotal, &c.Cvcdownline, &c.Cvcratingid, &c.Cvcservicecode, &c.Cvcrateposition, &c.Cvcservposition, &c.Cvcsparen2, &c.Cvcsparec1, &c.Cvcsparec2, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CvcconfByEquinoxLrn retrieves a row from 'equinox.cvcconf' as a Cvcconf.
//
// Generated from index 'cvcconf_pkey'.
func CvcconfByEquinoxLrn(db XODB, equinoxLrn int64) (*Cvcconf, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cvcconfigid, cvcdescription, cvcbillsfield, cvcentrycode, cvcexectotal, cvcdownlinetotal, cvcinvoicetotal, cvcdownline, cvcratingid, cvcservicecode, cvcrateposition, cvcservposition, cvcsparen2, cvcsparec1, cvcsparec2, equinox_lrn, equinox_sec ` +
		`FROM equinox.cvcconf ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cvcconf{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cvcconfigid, &c.Cvcdescription, &c.Cvcbillsfield, &c.Cvcentrycode, &c.Cvcexectotal, &c.Cvcdownlinetotal, &c.Cvcinvoicetotal, &c.Cvcdownline, &c.Cvcratingid, &c.Cvcservicecode, &c.Cvcrateposition, &c.Cvcservposition, &c.Cvcsparen2, &c.Cvcsparec1, &c.Cvcsparec2, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
