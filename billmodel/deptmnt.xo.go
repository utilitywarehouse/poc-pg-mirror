// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Deptmnt represents a row from 'equinox.deptmnt'.
type Deptmnt struct {
	Deptno     sql.NullInt64  `json:"deptno"`      // deptno
	Deptname   sql.NullString `json:"deptname"`    // deptname
	Deptaccess sql.NullInt64  `json:"deptaccess"`  // deptaccess
	EquinoxLrn int64          `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec sql.NullInt64  `json:"equinox_sec"` // equinox_sec
}

func AllDeptmnt(db XODB, callback func(x Deptmnt) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`deptno, deptname, deptaccess, equinox_lrn, equinox_sec ` +
		`FROM equinox.deptmnt `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		d := Deptmnt{}

		// scan
		err = q.Scan(&d.Deptno, &d.Deptname, &d.Deptaccess, &d.EquinoxLrn, &d.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(d) {
			return nil
		}
	}

	return nil
}

// DeptmntByEquinoxLrn retrieves a row from 'equinox.deptmnt' as a Deptmnt.
//
// Generated from index 'deptmnt_pkey'.
func DeptmntByEquinoxLrn(db XODB, equinoxLrn int64) (*Deptmnt, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`deptno, deptname, deptaccess, equinox_lrn, equinox_sec ` +
		`FROM equinox.deptmnt ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	d := Deptmnt{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&d.Deptno, &d.Deptname, &d.Deptaccess, &d.EquinoxLrn, &d.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &d, nil
}
