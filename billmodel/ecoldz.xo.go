// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ecoldz represents a row from 'equinox.ecoldz'.
type Ecoldz struct {
	Ecoldzldz       sql.NullString  `json:"ecoldzldz"`       // ecoldzldz
	Ecoldzdate      pq.NullTime     `json:"ecoldzdate"`      // ecoldzdate
	Ecoldzcv        sql.NullFloat64 `json:"ecoldzcv"`        // ecoldzcv
	Ecoldzperaqused sql.NullFloat64 `json:"ecoldzperaqused"` // ecoldzperaqused
	Ecoldzperaccum  sql.NullFloat64 `json:"ecoldzperaccum"`  // ecoldzperaccum
	Ecoldzalp01     sql.NullFloat64 `json:"ecoldzalp01"`     // ecoldzalp01
	Ecoldzalp02     sql.NullFloat64 `json:"ecoldzalp02"`     // ecoldzalp02
	Ecoldzdaf01     sql.NullFloat64 `json:"ecoldzdaf01"`     // ecoldzdaf01
	Ecoldzdaf02     sql.NullFloat64 `json:"ecoldzdaf02"`     // ecoldzdaf02
	Ecoldzcwv       sql.NullFloat64 `json:"ecoldzcwv"`       // ecoldzcwv
	Ecoldzsncwv     sql.NullFloat64 `json:"ecoldzsncwv"`     // ecoldzsncwv
	Ecoldzwsens     sql.NullFloat64 `json:"ecoldzwsens"`     // ecoldzwsens
	Ecoldzsnd       sql.NullFloat64 `json:"ecoldzsnd"`       // ecoldzsnd
	Ecoldzwcf       sql.NullFloat64 `json:"ecoldzwcf"`       // ecoldzwcf
	Ecoldzsf        sql.NullFloat64 `json:"ecoldzsf"`        // ecoldzsf
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

func AllEcoldz(db XODB, callback func(x Ecoldz) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`ecoldzldz, ecoldzdate, ecoldzcv, ecoldzperaqused, ecoldzperaccum, ecoldzalp01, ecoldzalp02, ecoldzdaf01, ecoldzdaf02, ecoldzcwv, ecoldzsncwv, ecoldzwsens, ecoldzsnd, ecoldzwcf, ecoldzsf, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ecoldz `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		e := Ecoldz{}

		// scan
		err = q.Scan(&e.Ecoldzldz, &e.Ecoldzdate, &e.Ecoldzcv, &e.Ecoldzperaqused, &e.Ecoldzperaccum, &e.Ecoldzalp01, &e.Ecoldzalp02, &e.Ecoldzdaf01, &e.Ecoldzdaf02, &e.Ecoldzcwv, &e.Ecoldzsncwv, &e.Ecoldzwsens, &e.Ecoldzsnd, &e.Ecoldzwcf, &e.Ecoldzsf, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(e) {
			return nil
		}
	}

	return nil
}

// EcoldzByEquinoxLrn retrieves a row from 'equinox.ecoldz' as a Ecoldz.
//
// Generated from index 'ecoldz_pkey'.
func EcoldzByEquinoxLrn(db XODB, equinoxLrn int64) (*Ecoldz, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ecoldzldz, ecoldzdate, ecoldzcv, ecoldzperaqused, ecoldzperaccum, ecoldzalp01, ecoldzalp02, ecoldzdaf01, ecoldzdaf02, ecoldzcwv, ecoldzsncwv, ecoldzwsens, ecoldzsnd, ecoldzwcf, ecoldzsf, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ecoldz ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Ecoldz{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Ecoldzldz, &e.Ecoldzdate, &e.Ecoldzcv, &e.Ecoldzperaqused, &e.Ecoldzperaccum, &e.Ecoldzalp01, &e.Ecoldzalp02, &e.Ecoldzdaf01, &e.Ecoldzdaf02, &e.Ecoldzcwv, &e.Ecoldzsncwv, &e.Ecoldzwsens, &e.Ecoldzsnd, &e.Ecoldzwcf, &e.Ecoldzsf, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
