// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Extbbcus represents a row from 'equinox.extbbcus'.
type Extbbcus struct {
	Extbbcustaccount sql.NullString `json:"extbbcustaccount"` // extbbcustaccount
	EquinoxPrn       sql.NullInt64  `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

func AllExtbbcus(db XODB, callback func(x Extbbcus) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`extbbcustaccount, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.extbbcus `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		e := Extbbcus{}

		// scan
		err = q.Scan(&e.Extbbcustaccount, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(e) {
			return nil
		}
	}

	return nil
}

// ExtbbcusByEquinoxLrn retrieves a row from 'equinox.extbbcus' as a Extbbcus.
//
// Generated from index 'extbbcus_pkey'.
func ExtbbcusByEquinoxLrn(db XODB, equinoxLrn int64) (*Extbbcus, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`extbbcustaccount, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.extbbcus ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Extbbcus{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Extbbcustaccount, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
