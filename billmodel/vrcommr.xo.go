// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Vrcommr represents a row from 'equinox.vrcommr'.
type Vrcommr struct {
	Vrnumber       sql.NullInt64  `json:"vrnumber"`       // vrnumber
	Vrfrom         pq.NullTime    `json:"vrfrom"`         // vrfrom
	Vrto           pq.NullTime    `json:"vrto"`           // vrto
	Vrbillinggroup sql.NullInt64  `json:"vrbillinggroup"` // vrbillinggroup
	Vrstarted      pq.NullTime    `json:"vrstarted"`      // vrstarted
	Vrended        pq.NullTime    `json:"vrended"`        // vrended
	Vrcurrent      sql.NullInt64  `json:"vrcurrent"`      // vrcurrent
	Vrfiles        sql.NullString `json:"vrfiles"`        // vrfiles
	Vrstatements   sql.NullString `json:"vrstatements"`   // vrstatements
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

// VrcommrByEquinoxLrn retrieves a row from 'equinox.vrcommr' as a Vrcommr.
//
// Generated from index 'vrcommr_pkey'.
func VrcommrByEquinoxLrn(db XODB, equinoxLrn int64) (*Vrcommr, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`vrnumber, vrfrom, vrto, vrbillinggroup, vrstarted, vrended, vrcurrent, vrfiles, vrstatements, equinox_lrn, equinox_sec ` +
		`FROM equinox.vrcommr ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	v := Vrcommr{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&v.Vrnumber, &v.Vrfrom, &v.Vrto, &v.Vrbillinggroup, &v.Vrstarted, &v.Vrended, &v.Vrcurrent, &v.Vrfiles, &v.Vrstatements, &v.EquinoxLrn, &v.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &v, nil
}
