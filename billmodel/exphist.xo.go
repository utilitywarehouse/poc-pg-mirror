// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Exphist represents a row from 'equinox.exphist'.
type Exphist struct {
	EphPromoname   sql.NullString `json:"eph_promoname"`   // eph_promoname
	EphQualifying  sql.NullInt64  `json:"eph_qualifying"`  // eph_qualifying
	EphDate        pq.NullTime    `json:"eph_date"`        // eph_date
	EphNotes       sql.NullInt64  `json:"eph_notes"`       // eph_notes
	EphPeriodcount sql.NullInt64  `json:"eph_periodcount"` // eph_periodcount
	EphPeriodstart pq.NullTime    `json:"eph_periodstart"` // eph_periodstart
	EphPeriodend   pq.NullTime    `json:"eph_periodend"`   // eph_periodend
	EphStatus      sql.NullInt64  `json:"eph_status"`      // eph_status
	EphTime        pq.NullTime    `json:"eph_time"`        // eph_time
	EquinoxPrn     sql.NullInt64  `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn     int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllExphist(db XODB, callback func(x Exphist) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`eph_promoname, eph_qualifying, eph_date, eph_notes, eph_periodcount, eph_periodstart, eph_periodend, eph_status, eph_time, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.exphist `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		e := Exphist{}

		// scan
		err = q.Scan(&e.EphPromoname, &e.EphQualifying, &e.EphDate, &e.EphNotes, &e.EphPeriodcount, &e.EphPeriodstart, &e.EphPeriodend, &e.EphStatus, &e.EphTime, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(e) {
			return nil
		}
	}

	return nil
}

// ExphistByEquinoxLrn retrieves a row from 'equinox.exphist' as a Exphist.
//
// Generated from index 'exphist_pkey'.
func ExphistByEquinoxLrn(db XODB, equinoxLrn int64) (*Exphist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`eph_promoname, eph_qualifying, eph_date, eph_notes, eph_periodcount, eph_periodstart, eph_periodend, eph_status, eph_time, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.exphist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Exphist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.EphPromoname, &e.EphQualifying, &e.EphDate, &e.EphNotes, &e.EphPeriodcount, &e.EphPeriodstart, &e.EphPeriodend, &e.EphStatus, &e.EphTime, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
