// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Sp represents a row from 'equinox.sp'.
type Sp struct {
	Spname       sql.NullString `json:"spname"`       // spname
	Spref        sql.NullString `json:"spref"`        // spref
	Spenquirefax sql.NullString `json:"spenquirefax"` // spenquirefax
	Spenquire    sql.NullString `json:"spenquire"`    // spenquire
	Spesccontact sql.NullString `json:"spesccontact"` // spesccontact
	Spesctel     sql.NullString `json:"spesctel"`     // spesctel
	Spescfax     sql.NullString `json:"spescfax"`     // spescfax
	Spescemail   sql.NullString `json:"spescemail"`   // spescemail
	EquinoxLrn   int64          `json:"equinox_lrn"`  // equinox_lrn
	EquinoxSec   sql.NullInt64  `json:"equinox_sec"`  // equinox_sec
}

// SpByEquinoxLrn retrieves a row from 'equinox.sp' as a Sp.
//
// Generated from index 'sp_pkey'.
func SpByEquinoxLrn(db XODB, equinoxLrn int64) (*Sp, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`spname, spref, spenquirefax, spenquire, spesccontact, spesctel, spescfax, spescemail, equinox_lrn, equinox_sec ` +
		`FROM equinox.sp ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	s := Sp{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&s.Spname, &s.Spref, &s.Spenquirefax, &s.Spenquire, &s.Spesccontact, &s.Spesctel, &s.Spescfax, &s.Spescemail, &s.EquinoxLrn, &s.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &s, nil
}
