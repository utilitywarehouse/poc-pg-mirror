// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Equifax represents a row from 'equinox.equifax'.
type Equifax struct {
	Equiexecid       sql.NullString `json:"equiexecid"`       // equiexecid
	Equiappnumber    sql.NullString `json:"equiappnumber"`    // equiappnumber
	Equisurname      sql.NullString `json:"equisurname"`      // equisurname
	Equipostcode     sql.NullString `json:"equipostcode"`     // equipostcode
	Equienteredby    sql.NullString `json:"equienteredby"`    // equienteredby
	Equilasteditby   sql.NullString `json:"equilasteditby"`   // equilasteditby
	Equilastediton   pq.NullTime    `json:"equilastediton"`   // equilastediton
	Equidateentered  pq.NullTime    `json:"equidateentered"`  // equidateentered
	Equiscore        sql.NullInt64  `json:"equiscore"`        // equiscore
	Equiregataddress sql.NullInt64  `json:"equiregataddress"` // equiregataddress
	Equipassorfail   sql.NullInt64  `json:"equipassorfail"`   // equipassorfail
	Equiappprocessed pq.NullTime    `json:"equiappprocessed"` // equiappprocessed
	Equisource       sql.NullString `json:"equisource"`       // equisource
	Equisparec1      sql.NullString `json:"equisparec1"`      // equisparec1
	Equisparen1      sql.NullInt64  `json:"equisparen1"`      // equisparen1
	Equispared1      pq.NullTime    `json:"equispared1"`      // equispared1
	Equisparem1      sql.NullInt64  `json:"equisparem1"`      // equisparem1
	Equisparel1      sql.NullInt64  `json:"equisparel1"`      // equisparel1
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// EquifaxByEquinoxLrn retrieves a row from 'equinox.equifax' as a Equifax.
//
// Generated from index 'equifax_pkey'.
func EquifaxByEquinoxLrn(db XODB, equinoxLrn int64) (*Equifax, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`equiexecid, equiappnumber, equisurname, equipostcode, equienteredby, equilasteditby, equilastediton, equidateentered, equiscore, equiregataddress, equipassorfail, equiappprocessed, equisource, equisparec1, equisparen1, equispared1, equisparem1, equisparel1, equinox_lrn, equinox_sec ` +
		`FROM equinox.equifax ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Equifax{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Equiexecid, &e.Equiappnumber, &e.Equisurname, &e.Equipostcode, &e.Equienteredby, &e.Equilasteditby, &e.Equilastediton, &e.Equidateentered, &e.Equiscore, &e.Equiregataddress, &e.Equipassorfail, &e.Equiappprocessed, &e.Equisource, &e.Equisparec1, &e.Equisparen1, &e.Equispared1, &e.Equisparem1, &e.Equisparel1, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
