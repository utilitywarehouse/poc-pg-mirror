// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Probcode represents a row from 'equinox.probcode'.
type Probcode struct {
	Probcodecode     sql.NullString  `json:"probcodecode"`     // probcodecode
	Probdescrip      sql.NullString  `json:"probdescrip"`      // probdescrip
	Probintocomment  sql.NullString  `json:"probintocomment"`  // probintocomment
	Probadd1         sql.NullString  `json:"probadd1"`         // probadd1
	Probadddefault1  sql.NullInt64   `json:"probadddefault1"`  // probadddefault1
	Probaddtype1     sql.NullString  `json:"probaddtype1"`     // probaddtype1
	Probaddmand1     sql.NullString  `json:"probaddmand1"`     // probaddmand1
	Probaddvalid1    sql.NullInt64   `json:"probaddvalid1"`    // probaddvalid1
	Probadd2         sql.NullString  `json:"probadd2"`         // probadd2
	Probadddefault2  sql.NullInt64   `json:"probadddefault2"`  // probadddefault2
	Probaddtype2     sql.NullString  `json:"probaddtype2"`     // probaddtype2
	Probaddmand2     sql.NullString  `json:"probaddmand2"`     // probaddmand2
	Probaddvalid2    sql.NullInt64   `json:"probaddvalid2"`    // probaddvalid2
	Probadd3         sql.NullString  `json:"probadd3"`         // probadd3
	Probadddefault3  sql.NullInt64   `json:"probadddefault3"`  // probadddefault3
	Probaddtype3     sql.NullString  `json:"probaddtype3"`     // probaddtype3
	Probaddmand3     sql.NullString  `json:"probaddmand3"`     // probaddmand3
	Probaddvalid3    sql.NullInt64   `json:"probaddvalid3"`    // probaddvalid3
	Probadd4         sql.NullString  `json:"probadd4"`         // probadd4
	Probadddefault4  sql.NullInt64   `json:"probadddefault4"`  // probadddefault4
	Probaddtype4     sql.NullString  `json:"probaddtype4"`     // probaddtype4
	Probaddmand4     sql.NullString  `json:"probaddmand4"`     // probaddmand4
	Probaddvalid4    sql.NullInt64   `json:"probaddvalid4"`    // probaddvalid4
	Probadd5         sql.NullString  `json:"probadd5"`         // probadd5
	Probadddefault5  sql.NullInt64   `json:"probadddefault5"`  // probadddefault5
	Probaddtype5     sql.NullString  `json:"probaddtype5"`     // probaddtype5
	Probaddmand5     sql.NullString  `json:"probaddmand5"`     // probaddmand5
	Probaddvalid5    sql.NullInt64   `json:"probaddvalid5"`    // probaddvalid5
	Probadd6         sql.NullString  `json:"probadd6"`         // probadd6
	Probadddefault6  sql.NullInt64   `json:"probadddefault6"`  // probadddefault6
	Probaddtype6     sql.NullString  `json:"probaddtype6"`     // probaddtype6
	Probaddmand6     sql.NullString  `json:"probaddmand6"`     // probaddmand6
	Probaddvalid6    sql.NullInt64   `json:"probaddvalid6"`    // probaddvalid6
	Probadd7         sql.NullString  `json:"probadd7"`         // probadd7
	Probadddefault7  sql.NullInt64   `json:"probadddefault7"`  // probadddefault7
	Probaddtype7     sql.NullString  `json:"probaddtype7"`     // probaddtype7
	Probaddmand7     sql.NullString  `json:"probaddmand7"`     // probaddmand7
	Probaddvalid7    sql.NullInt64   `json:"probaddvalid7"`    // probaddvalid7
	Probadd8         sql.NullString  `json:"probadd8"`         // probadd8
	Probadddefault8  sql.NullInt64   `json:"probadddefault8"`  // probadddefault8
	Probaddtype8     sql.NullString  `json:"probaddtype8"`     // probaddtype8
	Probaddmand8     sql.NullString  `json:"probaddmand8"`     // probaddmand8
	Probaddvalid8    sql.NullInt64   `json:"probaddvalid8"`    // probaddvalid8
	Probadd9         sql.NullString  `json:"probadd9"`         // probadd9
	Probadddefault9  sql.NullInt64   `json:"probadddefault9"`  // probadddefault9
	Probaddtype9     sql.NullString  `json:"probaddtype9"`     // probaddtype9
	Probaddmand9     sql.NullString  `json:"probaddmand9"`     // probaddmand9
	Probaddvalid9    sql.NullInt64   `json:"probaddvalid9"`    // probaddvalid9
	Probadd10        sql.NullString  `json:"probadd10"`        // probadd10
	Probadddefault10 sql.NullInt64   `json:"probadddefault10"` // probadddefault10
	Probaddtype10    sql.NullString  `json:"probaddtype10"`    // probaddtype10
	Probaddmand10    sql.NullString  `json:"probaddmand10"`    // probaddmand10
	Probaddvalid10   sql.NullInt64   `json:"probaddvalid10"`   // probaddvalid10
	Probactday       sql.NullInt64   `json:"probactday"`       // probactday
	Probactfromnow   sql.NullInt64   `json:"probactfromnow"`   // probactfromnow
	Probacttime      pq.NullTime     `json:"probacttime"`      // probacttime
	Probdatatype     sql.NullString  `json:"probdatatype"`     // probdatatype
	Probupperlimit   sql.NullString  `json:"probupperlimit"`   // probupperlimit
	Problowerlimit   sql.NullString  `json:"problowerlimit"`   // problowerlimit
	Probtype         sql.NullInt64   `json:"probtype"`         // probtype
	Probletterdest   sql.NullInt64   `json:"probletterdest"`   // probletterdest
	Probsmstext      sql.NullInt64   `json:"probsmstext"`      // probsmstext
	Probdefstatus    sql.NullInt64   `json:"probdefstatus"`    // probdefstatus
	Probsuspend      sql.NullInt64   `json:"probsuspend"`      // probsuspend
	Probnoprocess    sql.NullInt64   `json:"probnoprocess"`    // probnoprocess
	Probprocessedby  sql.NullString  `json:"probprocessedby"`  // probprocessedby
	Probgeneratedby  sql.NullString  `json:"probgeneratedby"`  // probgeneratedby
	Probcreatedby    sql.NullString  `json:"probcreatedby"`    // probcreatedby
	Problastchangeby sql.NullString  `json:"problastchangeby"` // problastchangeby
	Probinformation  sql.NullInt64   `json:"probinformation"`  // probinformation
	Probjcl          sql.NullString  `json:"probjcl"`          // probjcl
	Probdatecreated  pq.NullTime     `json:"probdatecreated"`  // probdatecreated
	Problastchange   sql.NullString  `json:"problastchange"`   // problastchange
	Probrequires     sql.NullInt64   `json:"probrequires"`     // probrequires
	Probcreateslette sql.NullString  `json:"probcreateslette"` // probcreateslette
	Probchoice       sql.NullInt64   `json:"probchoice"`       // probchoice
	Probalertline1   sql.NullString  `json:"probalertline1"`   // probalertline1
	Probalertline2   sql.NullString  `json:"probalertline2"`   // probalertline2
	Probalertline3   sql.NullString  `json:"probalertline3"`   // probalertline3
	Probalertline4   sql.NullString  `json:"probalertline4"`   // probalertline4
	Probtaskto       sql.NullString  `json:"probtaskto"`       // probtaskto
	Probautoexpiry   sql.NullInt64   `json:"probautoexpiry"`   // probautoexpiry
	Probclistatus    sql.NullString  `json:"probclistatus"`    // probclistatus
	Probtaskablecode sql.NullInt64   `json:"probtaskablecode"` // probtaskablecode
	Probmacrobs      sql.NullInt64   `json:"probmacrobs"`      // probmacrobs
	Probmacroas      sql.NullInt64   `json:"probmacroas"`      // probmacroas
	Probmacronotes   sql.NullInt64   `json:"probmacronotes"`   // probmacronotes
	Probuniqueness   sql.NullInt64   `json:"probuniqueness"`   // probuniqueness
	Probcompletelock sql.NullInt64   `json:"probcompletelock"` // probcompletelock
	Probspared3      pq.NullTime     `json:"probspared3"`      // probspared3
	Probsparen1      sql.NullFloat64 `json:"probsparen1"`      // probsparen1
	Probsparen2      sql.NullFloat64 `json:"probsparen2"`      // probsparen2
	Probsparen3      sql.NullFloat64 `json:"probsparen3"`      // probsparen3
	Probokwith230s   sql.NullInt64   `json:"probokwith230s"`   // probokwith230s
	Probopencomsrep  sql.NullInt64   `json:"probopencomsrep"`  // probopencomsrep
	Probopencomsdays sql.NullInt64   `json:"probopencomsdays"` // probopencomsdays
	Probeditworkflow sql.NullInt64   `json:"probeditworkflow"` // probeditworkflow
	Probworkflowdept sql.NullInt64   `json:"probworkflowdept"` // probworkflowdept
	Probdeleteafter  sql.NullInt64   `json:"probdeleteafter"`  // probdeleteafter
	Probarchiveafter sql.NullInt64   `json:"probarchiveafter"` // probarchiveafter
	Probautocancel   sql.NullInt64   `json:"probautocancel"`   // probautocancel
	Probdelclidead   sql.NullInt64   `json:"probdelclidead"`   // probdelclidead
	Probflgnodebt    sql.NullInt64   `json:"probflgnodebt"`    // probflgnodebt
	Probflggoodcust  sql.NullInt64   `json:"probflggoodcust"`  // probflggoodcust
	Probvalidationd  sql.NullString  `json:"probvalidationd"`  // probvalidationd
	Probcomment      sql.NullInt64   `json:"probcomment"`      // probcomment
	Probremovedate   pq.NullTime     `json:"probremovedate"`   // probremovedate
	Probchangelog    sql.NullInt64   `json:"probchangelog"`    // probchangelog
	Probeditlock     sql.NullInt64   `json:"probeditlock"`     // probeditlock
	Probsendemail    sql.NullInt64   `json:"probsendemail"`    // probsendemail
	Probsendletter   sql.NullInt64   `json:"probsendletter"`   // probsendletter
	Probsysadded     sql.NullInt64   `json:"probsysadded"`     // probsysadded
	Probuseradded    sql.NullInt64   `json:"probuseradded"`    // probuseradded
	Probrobeditable  sql.NullInt64   `json:"probrobeditable"`  // probrobeditable
	Probeditcode     sql.NullString  `json:"probeditcode"`     // probeditcode
	Probqkdesc       sql.NullInt64   `json:"probqkdesc"`       // probqkdesc
	Probdescripold   sql.NullString  `json:"probdescripold"`   // probdescripold
	Probqkkeywords   sql.NullInt64   `json:"probqkkeywords"`   // probqkkeywords
	Probqkimportant  sql.NullInt64   `json:"probqkimportant"`  // probqkimportant
	Probaddqktip01   sql.NullInt64   `json:"probaddqktip01"`   // probaddqktip01
	Probaddqktip02   sql.NullInt64   `json:"probaddqktip02"`   // probaddqktip02
	Probaddqktip03   sql.NullInt64   `json:"probaddqktip03"`   // probaddqktip03
	Probaddqktip04   sql.NullInt64   `json:"probaddqktip04"`   // probaddqktip04
	Probaddqktip05   sql.NullInt64   `json:"probaddqktip05"`   // probaddqktip05
	Probaddqktip06   sql.NullInt64   `json:"probaddqktip06"`   // probaddqktip06
	Probaddqktip07   sql.NullInt64   `json:"probaddqktip07"`   // probaddqktip07
	Probaddqktip08   sql.NullInt64   `json:"probaddqktip08"`   // probaddqktip08
	Probaddqktip09   sql.NullInt64   `json:"probaddqktip09"`   // probaddqktip09
	Probaddqktip10   sql.NullInt64   `json:"probaddqktip10"`   // probaddqktip10
	Probqkcategory   sql.NullString  `json:"probqkcategory"`   // probqkcategory
	Probqkalbertnote pq.NullTime     `json:"probqkalbertnote"` // probqkalbertnote
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllProbcode(db XODB, callback func(x Probcode) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`probcodecode, probdescrip, probintocomment, probadd1, probadddefault1, probaddtype1, probaddmand1, probaddvalid1, probadd2, probadddefault2, probaddtype2, probaddmand2, probaddvalid2, probadd3, probadddefault3, probaddtype3, probaddmand3, probaddvalid3, probadd4, probadddefault4, probaddtype4, probaddmand4, probaddvalid4, probadd5, probadddefault5, probaddtype5, probaddmand5, probaddvalid5, probadd6, probadddefault6, probaddtype6, probaddmand6, probaddvalid6, probadd7, probadddefault7, probaddtype7, probaddmand7, probaddvalid7, probadd8, probadddefault8, probaddtype8, probaddmand8, probaddvalid8, probadd9, probadddefault9, probaddtype9, probaddmand9, probaddvalid9, probadd10, probadddefault10, probaddtype10, probaddmand10, probaddvalid10, probactday, probactfromnow, probacttime, probdatatype, probupperlimit, problowerlimit, probtype, probletterdest, probsmstext, probdefstatus, probsuspend, probnoprocess, probprocessedby, probgeneratedby, probcreatedby, problastchangeby, probinformation, probjcl, probdatecreated, problastchange, probrequires, probcreateslette, probchoice, probalertline1, probalertline2, probalertline3, probalertline4, probtaskto, probautoexpiry, probclistatus, probtaskablecode, probmacrobs, probmacroas, probmacronotes, probuniqueness, probcompletelock, probspared3, probsparen1, probsparen2, probsparen3, probokwith230s, probopencomsrep, probopencomsdays, probeditworkflow, probworkflowdept, probdeleteafter, probarchiveafter, probautocancel, probdelclidead, probflgnodebt, probflggoodcust, probvalidationd, probcomment, probremovedate, probchangelog, probeditlock, probsendemail, probsendletter, probsysadded, probuseradded, probrobeditable, probeditcode, probqkdesc, probdescripold, probqkkeywords, probqkimportant, probaddqktip01, probaddqktip02, probaddqktip03, probaddqktip04, probaddqktip05, probaddqktip06, probaddqktip07, probaddqktip08, probaddqktip09, probaddqktip10, probqkcategory, probqkalbertnote, equinox_lrn, equinox_sec ` +
		`FROM equinox.probcode `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		p := Probcode{}

		// scan
		err = q.Scan(&p.Probcodecode, &p.Probdescrip, &p.Probintocomment, &p.Probadd1, &p.Probadddefault1, &p.Probaddtype1, &p.Probaddmand1, &p.Probaddvalid1, &p.Probadd2, &p.Probadddefault2, &p.Probaddtype2, &p.Probaddmand2, &p.Probaddvalid2, &p.Probadd3, &p.Probadddefault3, &p.Probaddtype3, &p.Probaddmand3, &p.Probaddvalid3, &p.Probadd4, &p.Probadddefault4, &p.Probaddtype4, &p.Probaddmand4, &p.Probaddvalid4, &p.Probadd5, &p.Probadddefault5, &p.Probaddtype5, &p.Probaddmand5, &p.Probaddvalid5, &p.Probadd6, &p.Probadddefault6, &p.Probaddtype6, &p.Probaddmand6, &p.Probaddvalid6, &p.Probadd7, &p.Probadddefault7, &p.Probaddtype7, &p.Probaddmand7, &p.Probaddvalid7, &p.Probadd8, &p.Probadddefault8, &p.Probaddtype8, &p.Probaddmand8, &p.Probaddvalid8, &p.Probadd9, &p.Probadddefault9, &p.Probaddtype9, &p.Probaddmand9, &p.Probaddvalid9, &p.Probadd10, &p.Probadddefault10, &p.Probaddtype10, &p.Probaddmand10, &p.Probaddvalid10, &p.Probactday, &p.Probactfromnow, &p.Probacttime, &p.Probdatatype, &p.Probupperlimit, &p.Problowerlimit, &p.Probtype, &p.Probletterdest, &p.Probsmstext, &p.Probdefstatus, &p.Probsuspend, &p.Probnoprocess, &p.Probprocessedby, &p.Probgeneratedby, &p.Probcreatedby, &p.Problastchangeby, &p.Probinformation, &p.Probjcl, &p.Probdatecreated, &p.Problastchange, &p.Probrequires, &p.Probcreateslette, &p.Probchoice, &p.Probalertline1, &p.Probalertline2, &p.Probalertline3, &p.Probalertline4, &p.Probtaskto, &p.Probautoexpiry, &p.Probclistatus, &p.Probtaskablecode, &p.Probmacrobs, &p.Probmacroas, &p.Probmacronotes, &p.Probuniqueness, &p.Probcompletelock, &p.Probspared3, &p.Probsparen1, &p.Probsparen2, &p.Probsparen3, &p.Probokwith230s, &p.Probopencomsrep, &p.Probopencomsdays, &p.Probeditworkflow, &p.Probworkflowdept, &p.Probdeleteafter, &p.Probarchiveafter, &p.Probautocancel, &p.Probdelclidead, &p.Probflgnodebt, &p.Probflggoodcust, &p.Probvalidationd, &p.Probcomment, &p.Probremovedate, &p.Probchangelog, &p.Probeditlock, &p.Probsendemail, &p.Probsendletter, &p.Probsysadded, &p.Probuseradded, &p.Probrobeditable, &p.Probeditcode, &p.Probqkdesc, &p.Probdescripold, &p.Probqkkeywords, &p.Probqkimportant, &p.Probaddqktip01, &p.Probaddqktip02, &p.Probaddqktip03, &p.Probaddqktip04, &p.Probaddqktip05, &p.Probaddqktip06, &p.Probaddqktip07, &p.Probaddqktip08, &p.Probaddqktip09, &p.Probaddqktip10, &p.Probqkcategory, &p.Probqkalbertnote, &p.EquinoxLrn, &p.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(p) {
			return nil
		}
	}

	return nil
}

// ProbcodeByEquinoxLrn retrieves a row from 'equinox.probcode' as a Probcode.
//
// Generated from index 'probcode_pkey'.
func ProbcodeByEquinoxLrn(db XODB, equinoxLrn int64) (*Probcode, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`probcodecode, probdescrip, probintocomment, probadd1, probadddefault1, probaddtype1, probaddmand1, probaddvalid1, probadd2, probadddefault2, probaddtype2, probaddmand2, probaddvalid2, probadd3, probadddefault3, probaddtype3, probaddmand3, probaddvalid3, probadd4, probadddefault4, probaddtype4, probaddmand4, probaddvalid4, probadd5, probadddefault5, probaddtype5, probaddmand5, probaddvalid5, probadd6, probadddefault6, probaddtype6, probaddmand6, probaddvalid6, probadd7, probadddefault7, probaddtype7, probaddmand7, probaddvalid7, probadd8, probadddefault8, probaddtype8, probaddmand8, probaddvalid8, probadd9, probadddefault9, probaddtype9, probaddmand9, probaddvalid9, probadd10, probadddefault10, probaddtype10, probaddmand10, probaddvalid10, probactday, probactfromnow, probacttime, probdatatype, probupperlimit, problowerlimit, probtype, probletterdest, probsmstext, probdefstatus, probsuspend, probnoprocess, probprocessedby, probgeneratedby, probcreatedby, problastchangeby, probinformation, probjcl, probdatecreated, problastchange, probrequires, probcreateslette, probchoice, probalertline1, probalertline2, probalertline3, probalertline4, probtaskto, probautoexpiry, probclistatus, probtaskablecode, probmacrobs, probmacroas, probmacronotes, probuniqueness, probcompletelock, probspared3, probsparen1, probsparen2, probsparen3, probokwith230s, probopencomsrep, probopencomsdays, probeditworkflow, probworkflowdept, probdeleteafter, probarchiveafter, probautocancel, probdelclidead, probflgnodebt, probflggoodcust, probvalidationd, probcomment, probremovedate, probchangelog, probeditlock, probsendemail, probsendletter, probsysadded, probuseradded, probrobeditable, probeditcode, probqkdesc, probdescripold, probqkkeywords, probqkimportant, probaddqktip01, probaddqktip02, probaddqktip03, probaddqktip04, probaddqktip05, probaddqktip06, probaddqktip07, probaddqktip08, probaddqktip09, probaddqktip10, probqkcategory, probqkalbertnote, equinox_lrn, equinox_sec ` +
		`FROM equinox.probcode ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Probcode{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Probcodecode, &p.Probdescrip, &p.Probintocomment, &p.Probadd1, &p.Probadddefault1, &p.Probaddtype1, &p.Probaddmand1, &p.Probaddvalid1, &p.Probadd2, &p.Probadddefault2, &p.Probaddtype2, &p.Probaddmand2, &p.Probaddvalid2, &p.Probadd3, &p.Probadddefault3, &p.Probaddtype3, &p.Probaddmand3, &p.Probaddvalid3, &p.Probadd4, &p.Probadddefault4, &p.Probaddtype4, &p.Probaddmand4, &p.Probaddvalid4, &p.Probadd5, &p.Probadddefault5, &p.Probaddtype5, &p.Probaddmand5, &p.Probaddvalid5, &p.Probadd6, &p.Probadddefault6, &p.Probaddtype6, &p.Probaddmand6, &p.Probaddvalid6, &p.Probadd7, &p.Probadddefault7, &p.Probaddtype7, &p.Probaddmand7, &p.Probaddvalid7, &p.Probadd8, &p.Probadddefault8, &p.Probaddtype8, &p.Probaddmand8, &p.Probaddvalid8, &p.Probadd9, &p.Probadddefault9, &p.Probaddtype9, &p.Probaddmand9, &p.Probaddvalid9, &p.Probadd10, &p.Probadddefault10, &p.Probaddtype10, &p.Probaddmand10, &p.Probaddvalid10, &p.Probactday, &p.Probactfromnow, &p.Probacttime, &p.Probdatatype, &p.Probupperlimit, &p.Problowerlimit, &p.Probtype, &p.Probletterdest, &p.Probsmstext, &p.Probdefstatus, &p.Probsuspend, &p.Probnoprocess, &p.Probprocessedby, &p.Probgeneratedby, &p.Probcreatedby, &p.Problastchangeby, &p.Probinformation, &p.Probjcl, &p.Probdatecreated, &p.Problastchange, &p.Probrequires, &p.Probcreateslette, &p.Probchoice, &p.Probalertline1, &p.Probalertline2, &p.Probalertline3, &p.Probalertline4, &p.Probtaskto, &p.Probautoexpiry, &p.Probclistatus, &p.Probtaskablecode, &p.Probmacrobs, &p.Probmacroas, &p.Probmacronotes, &p.Probuniqueness, &p.Probcompletelock, &p.Probspared3, &p.Probsparen1, &p.Probsparen2, &p.Probsparen3, &p.Probokwith230s, &p.Probopencomsrep, &p.Probopencomsdays, &p.Probeditworkflow, &p.Probworkflowdept, &p.Probdeleteafter, &p.Probarchiveafter, &p.Probautocancel, &p.Probdelclidead, &p.Probflgnodebt, &p.Probflggoodcust, &p.Probvalidationd, &p.Probcomment, &p.Probremovedate, &p.Probchangelog, &p.Probeditlock, &p.Probsendemail, &p.Probsendletter, &p.Probsysadded, &p.Probuseradded, &p.Probrobeditable, &p.Probeditcode, &p.Probqkdesc, &p.Probdescripold, &p.Probqkkeywords, &p.Probqkimportant, &p.Probaddqktip01, &p.Probaddqktip02, &p.Probaddqktip03, &p.Probaddqktip04, &p.Probaddqktip05, &p.Probaddqktip06, &p.Probaddqktip07, &p.Probaddqktip08, &p.Probaddqktip09, &p.Probaddqktip10, &p.Probqkcategory, &p.Probqkalbertnote, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
