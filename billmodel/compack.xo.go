// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Compack represents a row from 'equinox.compack'.
type Compack struct {
	Cpnumber         sql.NullInt64   `json:"cpnumber"`         // cpnumber
	Cpdescription    sql.NullString  `json:"cpdescription"`    // cpdescription
	Cptype           sql.NullString  `json:"cptype"`           // cptype
	Cpbands          sql.NullInt64   `json:"cpbands"`          // cpbands
	Cpbillinggroup   sql.NullInt64   `json:"cpbillinggroup"`   // cpbillinggroup
	Cpratingtype     sql.NullInt64   `json:"cpratingtype"`     // cpratingtype
	Cpnondddiscount  sql.NullString  `json:"cpnondddiscount"`  // cpnondddiscount
	Cpaccelbonus     sql.NullString  `json:"cpaccelbonus"`     // cpaccelbonus
	Cpsubtariffband  sql.NullString  `json:"cpsubtariffband"`  // cpsubtariffband
	Cpzeroothercalls sql.NullString  `json:"cpzeroothercalls"` // cpzeroothercalls
	Cpsparenum2      sql.NullFloat64 `json:"cpsparenum2"`      // cpsparenum2
	Cpsparec1        sql.NullString  `json:"cpsparec1"`        // cpsparec1
	Cpsparec2        sql.NullString  `json:"cpsparec2"`        // cpsparec2
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllCompack(db XODB, callback func(x Compack) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cpnumber, cpdescription, cptype, cpbands, cpbillinggroup, cpratingtype, cpnondddiscount, cpaccelbonus, cpsubtariffband, cpzeroothercalls, cpsparenum2, cpsparec1, cpsparec2, equinox_lrn, equinox_sec ` +
		`FROM equinox.compack `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Compack{}

		// scan
		err = q.Scan(&c.Cpnumber, &c.Cpdescription, &c.Cptype, &c.Cpbands, &c.Cpbillinggroup, &c.Cpratingtype, &c.Cpnondddiscount, &c.Cpaccelbonus, &c.Cpsubtariffband, &c.Cpzeroothercalls, &c.Cpsparenum2, &c.Cpsparec1, &c.Cpsparec2, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CompackByEquinoxLrn retrieves a row from 'equinox.compack' as a Compack.
//
// Generated from index 'compack_pkey'.
func CompackByEquinoxLrn(db XODB, equinoxLrn int64) (*Compack, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cpnumber, cpdescription, cptype, cpbands, cpbillinggroup, cpratingtype, cpnondddiscount, cpaccelbonus, cpsubtariffband, cpzeroothercalls, cpsparenum2, cpsparec1, cpsparec2, equinox_lrn, equinox_sec ` +
		`FROM equinox.compack ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Compack{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cpnumber, &c.Cpdescription, &c.Cptype, &c.Cpbands, &c.Cpbillinggroup, &c.Cpratingtype, &c.Cpnondddiscount, &c.Cpaccelbonus, &c.Cpsubtariffband, &c.Cpzeroothercalls, &c.Cpsparenum2, &c.Cpsparec1, &c.Cpsparec2, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
