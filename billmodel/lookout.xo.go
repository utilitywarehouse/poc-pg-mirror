// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Lookout represents a row from 'equinox.lookout'.
type Lookout struct {
	LookoutPostcode sql.NullString `json:"lookout_postcode"` // lookout_postcode
	LookoutName     sql.NullString `json:"lookout_name"`     // lookout_name
	LookoutDate     pq.NullTime    `json:"lookout_date"`     // lookout_date
	LookoutNotes    sql.NullString `json:"lookout_notes"`    // lookout_notes
	LookoutReqBy    sql.NullString `json:"lookout_req_by"`   // lookout_req_by
	LookoutAppNo    sql.NullString `json:"lookout_app_no"`   // lookout_app_no
	EquinoxLrn      int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// LookoutByEquinoxLrn retrieves a row from 'equinox.lookout' as a Lookout.
//
// Generated from index 'lookout_pkey'.
func LookoutByEquinoxLrn(db XODB, equinoxLrn int64) (*Lookout, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`lookout_postcode, lookout_name, lookout_date, lookout_notes, lookout_req_by, lookout_app_no, equinox_lrn, equinox_sec ` +
		`FROM equinox.lookout ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	l := Lookout{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&l.LookoutPostcode, &l.LookoutName, &l.LookoutDate, &l.LookoutNotes, &l.LookoutReqBy, &l.LookoutAppNo, &l.EquinoxLrn, &l.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &l, nil
}
