// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Whldcomm represents a row from 'equinox.whldcomm'.
type Whldcomm struct {
	Wcpartnerid      sql.NullString  `json:"wcpartnerid"`      // wcpartnerid
	Wcperiodwithheld sql.NullString  `json:"wcperiodwithheld"` // wcperiodwithheld
	Wcperiodpaid     sql.NullString  `json:"wcperiodpaid"`     // wcperiodpaid
	Wctype           sql.NullString  `json:"wctype"`           // wctype
	Wcstatus         sql.NullString  `json:"wcstatus"`         // wcstatus
	Wcamount         sql.NullFloat64 `json:"wcamount"`         // wcamount
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

// WhldcommByEquinoxLrn retrieves a row from 'equinox.whldcomm' as a Whldcomm.
//
// Generated from index 'whldcomm_pkey'.
func WhldcommByEquinoxLrn(db XODB, equinoxLrn int64) (*Whldcomm, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`wcpartnerid, wcperiodwithheld, wcperiodpaid, wctype, wcstatus, wcamount, equinox_lrn, equinox_sec ` +
		`FROM equinox.whldcomm ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	w := Whldcomm{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&w.Wcpartnerid, &w.Wcperiodwithheld, &w.Wcperiodpaid, &w.Wctype, &w.Wcstatus, &w.Wcamount, &w.EquinoxLrn, &w.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &w, nil
}
