// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Minibn represents a row from 'equinox.minibns'.
type Minibn struct {
	Minischeme      sql.NullFloat64 `json:"minischeme"`      // minischeme
	Miniidbonus     sql.NullFloat64 `json:"miniidbonus"`     // miniidbonus
	Minicustbonus   sql.NullFloat64 `json:"minicustbonus"`   // minicustbonus
	Minibonuscap    sql.NullFloat64 `json:"minibonuscap"`    // minibonuscap
	Miniglbonus     sql.NullFloat64 `json:"miniglbonus"`     // miniglbonus
	Minisglbonus    sql.NullFloat64 `json:"minisglbonus"`    // minisglbonus
	Minidescription sql.NullString  `json:"minidescription"` // minidescription
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

// MinibnByEquinoxLrn retrieves a row from 'equinox.minibns' as a Minibn.
//
// Generated from index 'minibns_pkey'.
func MinibnByEquinoxLrn(db XODB, equinoxLrn int64) (*Minibn, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`minischeme, miniidbonus, minicustbonus, minibonuscap, miniglbonus, minisglbonus, minidescription, equinox_lrn, equinox_sec ` +
		`FROM equinox.minibns ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := Minibn{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.Minischeme, &m.Miniidbonus, &m.Minicustbonus, &m.Minibonuscap, &m.Miniglbonus, &m.Minisglbonus, &m.Minidescription, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
