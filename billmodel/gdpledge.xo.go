// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gdpledge represents a row from 'equinox.gdpledge'.
type Gdpledge struct {
	Gdpldate      pq.NullTime     `json:"gdpldate"`      // gdpldate
	Gdpldatefrom  pq.NullTime     `json:"gdpldatefrom"`  // gdpldatefrom
	Gdpldateto    pq.NullTime     `json:"gdpldateto"`    // gdpldateto
	Gdpldays      sql.NullFloat64 `json:"gdpldays"`      // gdpldays
	Gdplremprovid sql.NullString  `json:"gdplremprovid"` // gdplremprovid
	Gdplrate      sql.NullFloat64 `json:"gdplrate"`      // gdplrate
	Gdpltotal     sql.NullFloat64 `json:"gdpltotal"`     // gdpltotal
	Gdplbillno    sql.NullFloat64 `json:"gdplbillno"`    // gdplbillno
	EquinoxPrn    sql.NullInt64   `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64           `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64   `json:"equinox_sec"`   // equinox_sec
}

// GdpledgeByEquinoxLrn retrieves a row from 'equinox.gdpledge' as a Gdpledge.
//
// Generated from index 'gdpledge_pkey'.
func GdpledgeByEquinoxLrn(db XODB, equinoxLrn int64) (*Gdpledge, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gdpldate, gdpldatefrom, gdpldateto, gdpldays, gdplremprovid, gdplrate, gdpltotal, gdplbillno, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gdpledge ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gdpledge{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gdpldate, &g.Gdpldatefrom, &g.Gdpldateto, &g.Gdpldays, &g.Gdplremprovid, &g.Gdplrate, &g.Gdpltotal, &g.Gdplbillno, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
