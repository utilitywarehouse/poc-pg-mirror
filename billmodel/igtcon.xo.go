// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Igtcon represents a row from 'equinox.igtcon'.
type Igtcon struct {
	Igtconsuffix   sql.NullString `json:"igtconsuffix"`   // igtconsuffix
	Igtconemail    sql.NullString `json:"igtconemail"`    // igtconemail
	Igtconpassword sql.NullString `json:"igtconpassword"` // igtconpassword
	Igtcontypeid   sql.NullString `json:"igtcontypeid"`   // igtcontypeid
	EquinoxPrn     sql.NullInt64  `json:"equinox_prn"`    // equinox_prn
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

// IgtconByEquinoxLrn retrieves a row from 'equinox.igtcon' as a Igtcon.
//
// Generated from index 'igtcon_pkey'.
func IgtconByEquinoxLrn(db XODB, equinoxLrn int64) (*Igtcon, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`igtconsuffix, igtconemail, igtconpassword, igtcontypeid, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.igtcon ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	i := Igtcon{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&i.Igtconsuffix, &i.Igtconemail, &i.Igtconpassword, &i.Igtcontypeid, &i.EquinoxPrn, &i.EquinoxLrn, &i.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &i, nil
}
