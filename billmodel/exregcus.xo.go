// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Exregcus represents a row from 'equinox.exregcus'.
type Exregcus struct {
	ErcExid      sql.NullString `json:"erc_exid"`      // erc_exid
	ErcCustaccno sql.NullString `json:"erc_custaccno"` // erc_custaccno
	ErcRegdate   pq.NullTime    `json:"erc_regdate"`   // erc_regdate
	ErcLivedate  pq.NullTime    `json:"erc_livedate"`  // erc_livedate
	EquinoxLrn   int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec   sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

// ExregcusByEquinoxLrn retrieves a row from 'equinox.exregcus' as a Exregcus.
//
// Generated from index 'exregcus_pkey'.
func ExregcusByEquinoxLrn(db XODB, equinoxLrn int64) (*Exregcus, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`erc_exid, erc_custaccno, erc_regdate, erc_livedate, equinox_lrn, equinox_sec ` +
		`FROM equinox.exregcus ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Exregcus{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.ErcExid, &e.ErcCustaccno, &e.ErcRegdate, &e.ErcLivedate, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
