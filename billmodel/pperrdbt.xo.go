// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Pperrdbt represents a row from 'equinox.pperrdbt'.
type Pperrdbt struct {
	Pperrdbtdate     pq.NullTime     `json:"pperrdbtdate"`     // pperrdbtdate
	Pperrdbtdebt     sql.NullFloat64 `json:"pperrdbtdebt"`     // pperrdbtdebt
	Pperrdbtwkmax    sql.NullFloat64 `json:"pperrdbtwkmax"`    // pperrdbtwkmax
	Pperrdbtwkmin    sql.NullFloat64 `json:"pperrdbtwkmin"`    // pperrdbtwkmin
	Pperrdbtperc     sql.NullInt64   `json:"pperrdbtperc"`     // pperrdbtperc
	Pperrdbtngdbt    sql.NullFloat64 `json:"pperrdbtngdbt"`    // pperrdbtngdbt
	Pperrdbtemgcrdlm sql.NullFloat64 `json:"pperrdbtemgcrdlm"` // pperrdbtemgcrdlm
	Pperrdbtemhcrddb sql.NullFloat64 `json:"pperrdbtemhcrddb"` // pperrdbtemhcrddb
	Pperrdbtlog1     sql.NullInt64   `json:"pperrdbtlog1"`     // pperrdbtlog1
	Pperrdbtlog2     sql.NullInt64   `json:"pperrdbtlog2"`     // pperrdbtlog2
	Pperrdbtlog3     sql.NullInt64   `json:"pperrdbtlog3"`     // pperrdbtlog3
	Pperrdbtlog4     sql.NullInt64   `json:"pperrdbtlog4"`     // pperrdbtlog4
	Pperrdbtadded    pq.NullTime     `json:"pperrdbtadded"`    // pperrdbtadded
	Pperrdbtalloc    pq.NullTime     `json:"pperrdbtalloc"`    // pperrdbtalloc
	Pperrdbtallocto  sql.NullString  `json:"pperrdbtallocto"`  // pperrdbtallocto
	Pperrdbtsrc      sql.NullString  `json:"pperrdbtsrc"`      // pperrdbtsrc
	Pperrdbtorigref  sql.NullString  `json:"pperrdbtorigref"`  // pperrdbtorigref
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllPperrdbt(db XODB, callback func(x Pperrdbt) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`pperrdbtdate, pperrdbtdebt, pperrdbtwkmax, pperrdbtwkmin, pperrdbtperc, pperrdbtngdbt, pperrdbtemgcrdlm, pperrdbtemhcrddb, pperrdbtlog1, pperrdbtlog2, pperrdbtlog3, pperrdbtlog4, pperrdbtadded, pperrdbtalloc, pperrdbtallocto, pperrdbtsrc, pperrdbtorigref, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.pperrdbt `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		p := Pperrdbt{}

		// scan
		err = q.Scan(&p.Pperrdbtdate, &p.Pperrdbtdebt, &p.Pperrdbtwkmax, &p.Pperrdbtwkmin, &p.Pperrdbtperc, &p.Pperrdbtngdbt, &p.Pperrdbtemgcrdlm, &p.Pperrdbtemhcrddb, &p.Pperrdbtlog1, &p.Pperrdbtlog2, &p.Pperrdbtlog3, &p.Pperrdbtlog4, &p.Pperrdbtadded, &p.Pperrdbtalloc, &p.Pperrdbtallocto, &p.Pperrdbtsrc, &p.Pperrdbtorigref, &p.EquinoxPrn, &p.EquinoxLrn, &p.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(p) {
			return nil
		}
	}

	return nil
}

// PperrdbtByEquinoxLrn retrieves a row from 'equinox.pperrdbt' as a Pperrdbt.
//
// Generated from index 'pperrdbt_pkey'.
func PperrdbtByEquinoxLrn(db XODB, equinoxLrn int64) (*Pperrdbt, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pperrdbtdate, pperrdbtdebt, pperrdbtwkmax, pperrdbtwkmin, pperrdbtperc, pperrdbtngdbt, pperrdbtemgcrdlm, pperrdbtemhcrddb, pperrdbtlog1, pperrdbtlog2, pperrdbtlog3, pperrdbtlog4, pperrdbtadded, pperrdbtalloc, pperrdbtallocto, pperrdbtsrc, pperrdbtorigref, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.pperrdbt ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Pperrdbt{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pperrdbtdate, &p.Pperrdbtdebt, &p.Pperrdbtwkmax, &p.Pperrdbtwkmin, &p.Pperrdbtperc, &p.Pperrdbtngdbt, &p.Pperrdbtemgcrdlm, &p.Pperrdbtemhcrddb, &p.Pperrdbtlog1, &p.Pperrdbtlog2, &p.Pperrdbtlog3, &p.Pperrdbtlog4, &p.Pperrdbtadded, &p.Pperrdbtalloc, &p.Pperrdbtallocto, &p.Pperrdbtsrc, &p.Pperrdbtorigref, &p.EquinoxPrn, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
