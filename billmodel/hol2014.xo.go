// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Hol2014 represents a row from 'equinox.hol2014'.
type Hol2014 struct {
	Hol14month       sql.NullString `json:"hol14month"`       // hol14month
	Hol14recruitedby sql.NullString `json:"hol14recruitedby"` // hol14recruitedby
	Hol14partnerid   sql.NullString `json:"hol14partnerid"`   // hol14partnerid
	Hol14custaccno   sql.NullString `json:"hol14custaccno"`   // hol14custaccno
	Hol14dateentered pq.NullTime    `json:"hol14dateentered"` // hol14dateentered
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

func AllHol2014(db XODB, callback func(x Hol2014) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`hol14month, hol14recruitedby, hol14partnerid, hol14custaccno, hol14dateentered, equinox_lrn, equinox_sec ` +
		`FROM equinox.hol2014 `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		h := Hol2014{}

		// scan
		err = q.Scan(&h.Hol14month, &h.Hol14recruitedby, &h.Hol14partnerid, &h.Hol14custaccno, &h.Hol14dateentered, &h.EquinoxLrn, &h.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(h) {
			return nil
		}
	}

	return nil
}

// Hol2014ByEquinoxLrn retrieves a row from 'equinox.hol2014' as a Hol2014.
//
// Generated from index 'hol2014_pkey'.
func Hol2014ByEquinoxLrn(db XODB, equinoxLrn int64) (*Hol2014, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`hol14month, hol14recruitedby, hol14partnerid, hol14custaccno, hol14dateentered, equinox_lrn, equinox_sec ` +
		`FROM equinox.hol2014 ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	h := Hol2014{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&h.Hol14month, &h.Hol14recruitedby, &h.Hol14partnerid, &h.Hol14custaccno, &h.Hol14dateentered, &h.EquinoxLrn, &h.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &h, nil
}
