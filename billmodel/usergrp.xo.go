// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Usergrp represents a row from 'equinox.usergrp'.
type Usergrp struct {
	Usergroupid   sql.NullString `json:"usergroupid"`   // usergroupid
	Ugname        sql.NullString `json:"ugname"`        // ugname
	Ugdescription sql.NullInt64  `json:"ugdescription"` // ugdescription
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllUsergrp(db XODB, callback func(x Usergrp) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`usergroupid, ugname, ugdescription, equinox_lrn, equinox_sec ` +
		`FROM equinox.usergrp `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		u := Usergrp{}

		// scan
		err = q.Scan(&u.Usergroupid, &u.Ugname, &u.Ugdescription, &u.EquinoxLrn, &u.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(u) {
			return nil
		}
	}

	return nil
}

// UsergrpByEquinoxLrn retrieves a row from 'equinox.usergrp' as a Usergrp.
//
// Generated from index 'usergrp_pkey'.
func UsergrpByEquinoxLrn(db XODB, equinoxLrn int64) (*Usergrp, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`usergroupid, ugname, ugdescription, equinox_lrn, equinox_sec ` +
		`FROM equinox.usergrp ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	u := Usergrp{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&u.Usergroupid, &u.Ugname, &u.Ugdescription, &u.EquinoxLrn, &u.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &u, nil
}
