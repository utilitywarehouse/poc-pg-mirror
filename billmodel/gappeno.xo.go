// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gappeno represents a row from 'equinox.gappeno'.
type Gappeno struct {
	Gappeucdate pq.NullTime    `json:"gappeucdate"` // gappeucdate
	Gappeuccat  sql.NullString `json:"gappeuccat"`  // gappeuccat
	EquinoxPrn  sql.NullInt64  `json:"equinox_prn"` // equinox_prn
	EquinoxLrn  int64          `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec  sql.NullInt64  `json:"equinox_sec"` // equinox_sec
}

// GappenoByEquinoxLrn retrieves a row from 'equinox.gappeno' as a Gappeno.
//
// Generated from index 'gappeno_pkey'.
func GappenoByEquinoxLrn(db XODB, equinoxLrn int64) (*Gappeno, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gappeucdate, gappeuccat, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gappeno ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gappeno{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gappeucdate, &g.Gappeuccat, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
