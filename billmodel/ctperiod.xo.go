// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ctperiod represents a row from 'equinox.ctperiod'.
type Ctperiod struct {
	Ctdate        pq.NullTime   `json:"ctdate"`        // ctdate
	Ctlgasofgem   sql.NullInt64 `json:"ctlgasofgem"`   // ctlgasofgem
	Ctsgasofgem   sql.NullInt64 `json:"ctsgasofgem"`   // ctsgasofgem
	Cthgasofgem   sql.NullInt64 `json:"cthgasofgem"`   // cthgasofgem
	Ctlelecofgem  sql.NullInt64 `json:"ctlelecofgem"`  // ctlelecofgem
	Ctselecofgem  sql.NullInt64 `json:"ctselecofgem"`  // ctselecofgem
	Cthelecofgem  sql.NullInt64 `json:"cthelecofgem"`  // cthelecofgem
	Ctle7ofgem    sql.NullInt64 `json:"ctle7ofgem"`    // ctle7ofgem
	Ctse7ofgem    sql.NullInt64 `json:"ctse7ofgem"`    // ctse7ofgem
	Cthe7ofgem    sql.NullInt64 `json:"cthe7ofgem"`    // cthe7ofgem
	Ctuwgofftake  sql.NullInt64 `json:"ctuwgofftake"`  // ctuwgofftake
	Ctuweofftake  sql.NullInt64 `json:"ctuweofftake"`  // ctuweofftake
	Ctuwe7offtake sql.NullInt64 `json:"ctuwe7offtake"` // ctuwe7offtake
	EquinoxLrn    int64         `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64 `json:"equinox_sec"`   // equinox_sec
}

// CtperiodByEquinoxLrn retrieves a row from 'equinox.ctperiod' as a Ctperiod.
//
// Generated from index 'ctperiod_pkey'.
func CtperiodByEquinoxLrn(db XODB, equinoxLrn int64) (*Ctperiod, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ctdate, ctlgasofgem, ctsgasofgem, cthgasofgem, ctlelecofgem, ctselecofgem, cthelecofgem, ctle7ofgem, ctse7ofgem, cthe7ofgem, ctuwgofftake, ctuweofftake, ctuwe7offtake, equinox_lrn, equinox_sec ` +
		`FROM equinox.ctperiod ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Ctperiod{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Ctdate, &c.Ctlgasofgem, &c.Ctsgasofgem, &c.Cthgasofgem, &c.Ctlelecofgem, &c.Ctselecofgem, &c.Cthelecofgem, &c.Ctle7ofgem, &c.Ctse7ofgem, &c.Cthe7ofgem, &c.Ctuwgofftake, &c.Ctuweofftake, &c.Ctuwe7offtake, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
