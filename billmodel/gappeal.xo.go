// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gappeal represents a row from 'equinox.gappeals'.
type Gappeal struct {
	Gappconfirmation sql.NullString  `json:"gappconfirmation"` // gappconfirmation
	Gappmpr          sql.NullString  `json:"gappmpr"`          // gappmpr
	Gappmprdate      sql.NullString  `json:"gappmprdate"`      // gappmprdate
	Gappoutcode      sql.NullString  `json:"gappoutcode"`      // gappoutcode
	Gappincode       sql.NullString  `json:"gappincode"`       // gappincode
	Gapprequestaq    sql.NullInt64   `json:"gapprequestaq"`    // gapprequestaq
	Gappmsn          sql.NullString  `json:"gappmsn"`          // gappmsn
	Gappcf           sql.NullFloat64 `json:"gappcf"`           // gappcf
	Gappimporm       sql.NullString  `json:"gappimporm"`       // gappimporm
	Gappreadingf     sql.NullFloat64 `json:"gappreadingf"`     // gappreadingf
	Gappreadingunits sql.NullInt64   `json:"gappreadingunits"` // gappreadingunits
	Gappdials        sql.NullInt64   `json:"gappdials"`        // gappdials
	Gappstartdate    pq.NullTime     `json:"gappstartdate"`    // gappstartdate
	Gappstartreading sql.NullInt64   `json:"gappstartreading"` // gappstartreading
	Gappenddate      pq.NullTime     `json:"gappenddate"`      // gappenddate
	Gappendreading   sql.NullInt64   `json:"gappendreading"`   // gappendreading
	Gappttzcount     sql.NullInt64   `json:"gappttzcount"`     // gappttzcount
	Gappemsn         sql.NullString  `json:"gappemsn"`         // gappemsn
	Gappecf          sql.NullFloat64 `json:"gappecf"`          // gappecf
	Gappeimp         sql.NullString  `json:"gappeimp"`         // gappeimp
	Gapperf          sql.NullFloat64 `json:"gapperf"`          // gapperf
	Gapperu          sql.NullInt64   `json:"gapperu"`          // gapperu
	Gappedials       sql.NullInt64   `json:"gappedials"`       // gappedials
	Gappestartdate   pq.NullTime     `json:"gappestartdate"`   // gappestartdate
	Gappestartreadin sql.NullInt64   `json:"gappestartreadin"` // gappestartreadin
	Gappeenddate     pq.NullTime     `json:"gappeenddate"`     // gappeenddate
	Gappeeendreading sql.NullInt64   `json:"gappeeendreading"` // gappeeendreading
	Gappettzcount    sql.NullInt64   `json:"gappettzcount"`    // gappettzcount
	Gappmanualcheck  sql.NullString  `json:"gappmanualcheck"`  // gappmanualcheck
	Gappsupp         sql.NullInt64   `json:"gappsupp"`         // gappsupp
	Gappappealref    sql.NullString  `json:"gappappealref"`    // gappappealref
	Gappourref       sql.NullString  `json:"gappourref"`       // gappourref
	Gapptourref      sql.NullString  `json:"gapptourref"`      // gapptourref
	Gapptcurrentaq   sql.NullInt64   `json:"gapptcurrentaq"`   // gapptcurrentaq
	Gapptheiraq      sql.NullInt64   `json:"gapptheiraq"`      // gapptheiraq
	Gappstatus       sql.NullString  `json:"gappstatus"`       // gappstatus
	Gappc1           sql.NullString  `json:"gappc1"`           // gappc1
	Gappc2           sql.NullString  `json:"gappc2"`           // gappc2
	Gappn1           sql.NullInt64   `json:"gappn1"`           // gappn1
	Gappn2           sql.NullInt64   `json:"gappn2"`           // gappn2
	Gappn3           sql.NullInt64   `json:"gappn3"`           // gappn3
	Gapptheirsread   sql.NullInt64   `json:"gapptheirsread"`   // gapptheirsread
	Gapptheirsdate   pq.NullTime     `json:"gapptheirsdate"`   // gapptheirsdate
	Gapptheireread   sql.NullInt64   `json:"gapptheireread"`   // gapptheireread
	Gapptheiredate   pq.NullTime     `json:"gapptheiredate"`   // gapptheiredate
	Gapptheirttz     sql.NullInt64   `json:"gapptheirttz"`     // gapptheirttz
	Gappstatusn      sql.NullInt64   `json:"gappstatusn"`      // gappstatusn
	Gapptranscoser   sql.NullString  `json:"gapptranscoser"`   // gapptranscoser
	Gappcurrentcalaq sql.NullInt64   `json:"gappcurrentcalaq"` // gappcurrentcalaq
	Gappnextaction   pq.NullTime     `json:"gappnextaction"`   // gappnextaction
	Gappasorej       sql.NullString  `json:"gappasorej"`       // gappasorej
	Gappaaorej       sql.NullString  `json:"gappaaorej"`       // gappaaorej
	Gappaporaaperiod sql.NullString  `json:"gappaporaaperiod"` // gappaporaaperiod
	Gappasisent      pq.NullTime     `json:"gappasisent"`      // gappasisent
	Gappasoresp      pq.NullTime     `json:"gappasoresp"`      // gappasoresp
	Gappaaisent      pq.NullTime     `json:"gappaaisent"`      // gappaaisent
	Gappaaoresp      pq.NullTime     `json:"gappaaoresp"`      // gappaaoresp
	Gappapisent      pq.NullTime     `json:"gappapisent"`      // gappapisent
	Gappaporesp      pq.NullTime     `json:"gappaporesp"`      // gappaporesp
	Gappaporej       sql.NullString  `json:"gappaporej"`       // gappaporej
	Gappnomination   pq.NullTime     `json:"gappnomination"`   // gappnomination
	Gapprecon        pq.NullTime     `json:"gapprecon"`        // gapprecon
	Gappreconstart   pq.NullTime     `json:"gappreconstart"`   // gappreconstart
	Gapps91aq        sql.NullInt64   `json:"gapps91aq"`        // gapps91aq
	Gapps91msn       sql.NullString  `json:"gapps91msn"`       // gapps91msn
	Gappourmsn       sql.NullString  `json:"gappourmsn"`       // gappourmsn
	Gappsubbuilding  sql.NullString  `json:"gappsubbuilding"`  // gappsubbuilding
	Gappbuilding     sql.NullString  `json:"gappbuilding"`     // gappbuilding
	Gappthroughfare  sql.NullString  `json:"gappthroughfare"`  // gappthroughfare
	Gappdependlocal  sql.NullString  `json:"gappdependlocal"`  // gappdependlocal
	Gappposttown     sql.NullString  `json:"gappposttown"`     // gappposttown
	Gapppostcode     sql.NullString  `json:"gapppostcode"`     // gapppostcode
	Gappmamtransref  sql.NullString  `json:"gappmamtransref"`  // gappmamtransref
	Gappmamdtransref sql.NullString  `json:"gappmamdtransref"` // gappmamdtransref
	Gappnrqdate      pq.NullTime     `json:"gappnrqdate"`      // gappnrqdate
	Gapplastread     pq.NullTime     `json:"gapplastread"`     // gapplastread
	Gappreadaqcalc   pq.NullTime     `json:"gappreadaqcalc"`   // gappreadaqcalc
	Gappaqcalc       sql.NullInt64   `json:"gappaqcalc"`       // gappaqcalc
	Gappaqcalcsdate  pq.NullTime     `json:"gappaqcalcsdate"`  // gappaqcalcsdate
	Gappaqcalcedate  pq.NullTime     `json:"gappaqcalcedate"`  // gappaqcalcedate
	Gappaqcalc1      sql.NullInt64   `json:"gappaqcalc1"`      // gappaqcalc1
	Gappaqcalc1sdate pq.NullTime     `json:"gappaqcalc1sdate"` // gappaqcalc1sdate
	Gappaqcalc2      sql.NullInt64   `json:"gappaqcalc2"`      // gappaqcalc2
	Gappaqcalc2sdate pq.NullTime     `json:"gappaqcalc2sdate"` // gappaqcalc2sdate
	Gappaqcalc6      sql.NullInt64   `json:"gappaqcalc6"`      // gappaqcalc6
	Gappaqcalc6date  pq.NullTime     `json:"gappaqcalc6date"`  // gappaqcalc6date
	Gapp4aqcalcdate  pq.NullTime     `json:"gapp4aqcalcdate"`  // gapp4aqcalcdate
	Gappaqcalc24     sql.NullInt64   `json:"gappaqcalc24"`     // gappaqcalc24
	Gappaqcalc24date pq.NullTime     `json:"gappaqcalc24date"` // gappaqcalc24date
	Gappasifile      sql.NullString  `json:"gappasifile"`      // gappasifile
	Gappaaifile      sql.NullString  `json:"gappaaifile"`      // gappaaifile
	Gappaqupdate     pq.NullTime     `json:"gappaqupdate"`     // gappaqupdate
	Gappconnection   pq.NullTime     `json:"gappconnection"`   // gappconnection
	Gappaqerror      sql.NullInt64   `json:"gappaqerror"`      // gappaqerror
	Gappedit         sql.NullString  `json:"gappedit"`         // gappedit
	Gappconfirmstart pq.NullTime     `json:"gappconfirmstart"` // gappconfirmstart
	Gappconfirmdead  pq.NullTime     `json:"gappconfirmdead"`  // gappconfirmdead
	Gapplastact      pq.NullTime     `json:"gapplastact"`      // gapplastact
	Gappeditdate     pq.NullTime     `json:"gappeditdate"`     // gappeditdate
	Gasichecked      sql.NullInt64   `json:"gasichecked"`      // gasichecked
	Gappnrlrec       pq.NullTime     `json:"gappnrlrec"`       // gappnrlrec
	Gappnrorec       pq.NullTime     `json:"gappnrorec"`       // gappnrorec
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllGappeal(db XODB, callback func(x Gappeal) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gappconfirmation, gappmpr, gappmprdate, gappoutcode, gappincode, gapprequestaq, gappmsn, gappcf, gappimporm, gappreadingf, gappreadingunits, gappdials, gappstartdate, gappstartreading, gappenddate, gappendreading, gappttzcount, gappemsn, gappecf, gappeimp, gapperf, gapperu, gappedials, gappestartdate, gappestartreadin, gappeenddate, gappeeendreading, gappettzcount, gappmanualcheck, gappsupp, gappappealref, gappourref, gapptourref, gapptcurrentaq, gapptheiraq, gappstatus, gappc1, gappc2, gappn1, gappn2, gappn3, gapptheirsread, gapptheirsdate, gapptheireread, gapptheiredate, gapptheirttz, gappstatusn, gapptranscoser, gappcurrentcalaq, gappnextaction, gappasorej, gappaaorej, gappaporaaperiod, gappasisent, gappasoresp, gappaaisent, gappaaoresp, gappapisent, gappaporesp, gappaporej, gappnomination, gapprecon, gappreconstart, gapps91aq, gapps91msn, gappourmsn, gappsubbuilding, gappbuilding, gappthroughfare, gappdependlocal, gappposttown, gapppostcode, gappmamtransref, gappmamdtransref, gappnrqdate, gapplastread, gappreadaqcalc, gappaqcalc, gappaqcalcsdate, gappaqcalcedate, gappaqcalc1, gappaqcalc1sdate, gappaqcalc2, gappaqcalc2sdate, gappaqcalc6, gappaqcalc6date, gapp4aqcalcdate, gappaqcalc24, gappaqcalc24date, gappasifile, gappaaifile, gappaqupdate, gappconnection, gappaqerror, gappedit, gappconfirmstart, gappconfirmdead, gapplastact, gappeditdate, gasichecked, gappnrlrec, gappnrorec, equinox_lrn, equinox_sec ` +
		`FROM equinox.gappeals `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Gappeal{}

		// scan
		err = q.Scan(&g.Gappconfirmation, &g.Gappmpr, &g.Gappmprdate, &g.Gappoutcode, &g.Gappincode, &g.Gapprequestaq, &g.Gappmsn, &g.Gappcf, &g.Gappimporm, &g.Gappreadingf, &g.Gappreadingunits, &g.Gappdials, &g.Gappstartdate, &g.Gappstartreading, &g.Gappenddate, &g.Gappendreading, &g.Gappttzcount, &g.Gappemsn, &g.Gappecf, &g.Gappeimp, &g.Gapperf, &g.Gapperu, &g.Gappedials, &g.Gappestartdate, &g.Gappestartreadin, &g.Gappeenddate, &g.Gappeeendreading, &g.Gappettzcount, &g.Gappmanualcheck, &g.Gappsupp, &g.Gappappealref, &g.Gappourref, &g.Gapptourref, &g.Gapptcurrentaq, &g.Gapptheiraq, &g.Gappstatus, &g.Gappc1, &g.Gappc2, &g.Gappn1, &g.Gappn2, &g.Gappn3, &g.Gapptheirsread, &g.Gapptheirsdate, &g.Gapptheireread, &g.Gapptheiredate, &g.Gapptheirttz, &g.Gappstatusn, &g.Gapptranscoser, &g.Gappcurrentcalaq, &g.Gappnextaction, &g.Gappasorej, &g.Gappaaorej, &g.Gappaporaaperiod, &g.Gappasisent, &g.Gappasoresp, &g.Gappaaisent, &g.Gappaaoresp, &g.Gappapisent, &g.Gappaporesp, &g.Gappaporej, &g.Gappnomination, &g.Gapprecon, &g.Gappreconstart, &g.Gapps91aq, &g.Gapps91msn, &g.Gappourmsn, &g.Gappsubbuilding, &g.Gappbuilding, &g.Gappthroughfare, &g.Gappdependlocal, &g.Gappposttown, &g.Gapppostcode, &g.Gappmamtransref, &g.Gappmamdtransref, &g.Gappnrqdate, &g.Gapplastread, &g.Gappreadaqcalc, &g.Gappaqcalc, &g.Gappaqcalcsdate, &g.Gappaqcalcedate, &g.Gappaqcalc1, &g.Gappaqcalc1sdate, &g.Gappaqcalc2, &g.Gappaqcalc2sdate, &g.Gappaqcalc6, &g.Gappaqcalc6date, &g.Gapp4aqcalcdate, &g.Gappaqcalc24, &g.Gappaqcalc24date, &g.Gappasifile, &g.Gappaaifile, &g.Gappaqupdate, &g.Gappconnection, &g.Gappaqerror, &g.Gappedit, &g.Gappconfirmstart, &g.Gappconfirmdead, &g.Gapplastact, &g.Gappeditdate, &g.Gasichecked, &g.Gappnrlrec, &g.Gappnrorec, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GappealByEquinoxLrn retrieves a row from 'equinox.gappeals' as a Gappeal.
//
// Generated from index 'gappeals_pkey'.
func GappealByEquinoxLrn(db XODB, equinoxLrn int64) (*Gappeal, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gappconfirmation, gappmpr, gappmprdate, gappoutcode, gappincode, gapprequestaq, gappmsn, gappcf, gappimporm, gappreadingf, gappreadingunits, gappdials, gappstartdate, gappstartreading, gappenddate, gappendreading, gappttzcount, gappemsn, gappecf, gappeimp, gapperf, gapperu, gappedials, gappestartdate, gappestartreadin, gappeenddate, gappeeendreading, gappettzcount, gappmanualcheck, gappsupp, gappappealref, gappourref, gapptourref, gapptcurrentaq, gapptheiraq, gappstatus, gappc1, gappc2, gappn1, gappn2, gappn3, gapptheirsread, gapptheirsdate, gapptheireread, gapptheiredate, gapptheirttz, gappstatusn, gapptranscoser, gappcurrentcalaq, gappnextaction, gappasorej, gappaaorej, gappaporaaperiod, gappasisent, gappasoresp, gappaaisent, gappaaoresp, gappapisent, gappaporesp, gappaporej, gappnomination, gapprecon, gappreconstart, gapps91aq, gapps91msn, gappourmsn, gappsubbuilding, gappbuilding, gappthroughfare, gappdependlocal, gappposttown, gapppostcode, gappmamtransref, gappmamdtransref, gappnrqdate, gapplastread, gappreadaqcalc, gappaqcalc, gappaqcalcsdate, gappaqcalcedate, gappaqcalc1, gappaqcalc1sdate, gappaqcalc2, gappaqcalc2sdate, gappaqcalc6, gappaqcalc6date, gapp4aqcalcdate, gappaqcalc24, gappaqcalc24date, gappasifile, gappaaifile, gappaqupdate, gappconnection, gappaqerror, gappedit, gappconfirmstart, gappconfirmdead, gapplastact, gappeditdate, gasichecked, gappnrlrec, gappnrorec, equinox_lrn, equinox_sec ` +
		`FROM equinox.gappeals ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gappeal{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gappconfirmation, &g.Gappmpr, &g.Gappmprdate, &g.Gappoutcode, &g.Gappincode, &g.Gapprequestaq, &g.Gappmsn, &g.Gappcf, &g.Gappimporm, &g.Gappreadingf, &g.Gappreadingunits, &g.Gappdials, &g.Gappstartdate, &g.Gappstartreading, &g.Gappenddate, &g.Gappendreading, &g.Gappttzcount, &g.Gappemsn, &g.Gappecf, &g.Gappeimp, &g.Gapperf, &g.Gapperu, &g.Gappedials, &g.Gappestartdate, &g.Gappestartreadin, &g.Gappeenddate, &g.Gappeeendreading, &g.Gappettzcount, &g.Gappmanualcheck, &g.Gappsupp, &g.Gappappealref, &g.Gappourref, &g.Gapptourref, &g.Gapptcurrentaq, &g.Gapptheiraq, &g.Gappstatus, &g.Gappc1, &g.Gappc2, &g.Gappn1, &g.Gappn2, &g.Gappn3, &g.Gapptheirsread, &g.Gapptheirsdate, &g.Gapptheireread, &g.Gapptheiredate, &g.Gapptheirttz, &g.Gappstatusn, &g.Gapptranscoser, &g.Gappcurrentcalaq, &g.Gappnextaction, &g.Gappasorej, &g.Gappaaorej, &g.Gappaporaaperiod, &g.Gappasisent, &g.Gappasoresp, &g.Gappaaisent, &g.Gappaaoresp, &g.Gappapisent, &g.Gappaporesp, &g.Gappaporej, &g.Gappnomination, &g.Gapprecon, &g.Gappreconstart, &g.Gapps91aq, &g.Gapps91msn, &g.Gappourmsn, &g.Gappsubbuilding, &g.Gappbuilding, &g.Gappthroughfare, &g.Gappdependlocal, &g.Gappposttown, &g.Gapppostcode, &g.Gappmamtransref, &g.Gappmamdtransref, &g.Gappnrqdate, &g.Gapplastread, &g.Gappreadaqcalc, &g.Gappaqcalc, &g.Gappaqcalcsdate, &g.Gappaqcalcedate, &g.Gappaqcalc1, &g.Gappaqcalc1sdate, &g.Gappaqcalc2, &g.Gappaqcalc2sdate, &g.Gappaqcalc6, &g.Gappaqcalc6date, &g.Gapp4aqcalcdate, &g.Gappaqcalc24, &g.Gappaqcalc24date, &g.Gappasifile, &g.Gappaaifile, &g.Gappaqupdate, &g.Gappconnection, &g.Gappaqerror, &g.Gappedit, &g.Gappconfirmstart, &g.Gappconfirmdead, &g.Gapplastact, &g.Gappeditdate, &g.Gasichecked, &g.Gappnrlrec, &g.Gappnrorec, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
