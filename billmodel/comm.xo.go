// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Comm represents a row from 'equinox.comms'.
type Comm struct {
	Comuniquesys    sql.NullFloat64 `json:"comuniquesys"`    // comuniquesys
	Comdate         pq.NullTime     `json:"comdate"`         // comdate
	Comtime         pq.NullTime     `json:"comtime"`         // comtime
	Comprobcode     sql.NullString  `json:"comprobcode"`     // comprobcode
	Comdetails      sql.NullInt64   `json:"comdetails"`      // comdetails
	Comenteredby    sql.NullString  `json:"comenteredby"`    // comenteredby
	Comcliservice   sql.NullString  `json:"comcliservice"`   // comcliservice
	Comadditional1  sql.NullInt64   `json:"comadditional1"`  // comadditional1
	Comadditional2  sql.NullInt64   `json:"comadditional2"`  // comadditional2
	Comadditional3  sql.NullInt64   `json:"comadditional3"`  // comadditional3
	Comadditional4  sql.NullInt64   `json:"comadditional4"`  // comadditional4
	Comadditional5  sql.NullInt64   `json:"comadditional5"`  // comadditional5
	Comadditional6  sql.NullInt64   `json:"comadditional6"`  // comadditional6
	Comadditional7  sql.NullInt64   `json:"comadditional7"`  // comadditional7
	Comadditional8  sql.NullInt64   `json:"comadditional8"`  // comadditional8
	Comadditional9  sql.NullInt64   `json:"comadditional9"`  // comadditional9
	Comadditional10 sql.NullInt64   `json:"comadditional10"` // comadditional10
	Compriority     sql.NullString  `json:"compriority"`     // compriority
	Comstatus       sql.NullInt64   `json:"comstatus"`       // comstatus
	Comtaskto       sql.NullString  `json:"comtaskto"`       // comtaskto
	Comcompletedate pq.NullTime     `json:"comcompletedate"` // comcompletedate
	Comcompleteby   sql.NullString  `json:"comcompleteby"`   // comcompleteby
	Comhistoric     sql.NullInt64   `json:"comhistoric"`     // comhistoric
	Comactiondate   pq.NullTime     `json:"comactiondate"`   // comactiondate
	Comactiontime   pq.NullTime     `json:"comactiontime"`   // comactiontime
	Comdip          sql.NullString  `json:"comdip"`          // comdip
	Comdeptid       sql.NullString  `json:"comdeptid"`       // comdeptid
	Comlastchange   sql.NullString  `json:"comlastchange"`   // comlastchange
	Comletterpath   sql.NullInt64   `json:"comletterpath"`   // comletterpath
	Comadddata      sql.NullInt64   `json:"comadddata"`      // comadddata
	Comcliuniquesys sql.NullFloat64 `json:"comcliuniquesys"` // comcliuniquesys
	Comcompletetime pq.NullTime     `json:"comcompletetime"` // comcompletetime
	Comadduniqueid  sql.NullFloat64 `json:"comadduniqueid"`  // comadduniqueid
	Comarchcounter  sql.NullInt64   `json:"comarchcounter"`  // comarchcounter
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

func AllComm(db XODB, callback func(x Comm) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`comuniquesys, comdate, comtime, comprobcode, comdetails, comenteredby, comcliservice, comadditional1, comadditional2, comadditional3, comadditional4, comadditional5, comadditional6, comadditional7, comadditional8, comadditional9, comadditional10, compriority, comstatus, comtaskto, comcompletedate, comcompleteby, comhistoric, comactiondate, comactiontime, comdip, comdeptid, comlastchange, comletterpath, comadddata, comcliuniquesys, comcompletetime, comadduniqueid, comarchcounter, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.comms `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Comm{}

		// scan
		err = q.Scan(&c.Comuniquesys, &c.Comdate, &c.Comtime, &c.Comprobcode, &c.Comdetails, &c.Comenteredby, &c.Comcliservice, &c.Comadditional1, &c.Comadditional2, &c.Comadditional3, &c.Comadditional4, &c.Comadditional5, &c.Comadditional6, &c.Comadditional7, &c.Comadditional8, &c.Comadditional9, &c.Comadditional10, &c.Compriority, &c.Comstatus, &c.Comtaskto, &c.Comcompletedate, &c.Comcompleteby, &c.Comhistoric, &c.Comactiondate, &c.Comactiontime, &c.Comdip, &c.Comdeptid, &c.Comlastchange, &c.Comletterpath, &c.Comadddata, &c.Comcliuniquesys, &c.Comcompletetime, &c.Comadduniqueid, &c.Comarchcounter, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CommByEquinoxLrn retrieves a row from 'equinox.comms' as a Comm.
//
// Generated from index 'comms_pkey'.
func CommByEquinoxLrn(db XODB, equinoxLrn int64) (*Comm, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`comuniquesys, comdate, comtime, comprobcode, comdetails, comenteredby, comcliservice, comadditional1, comadditional2, comadditional3, comadditional4, comadditional5, comadditional6, comadditional7, comadditional8, comadditional9, comadditional10, compriority, comstatus, comtaskto, comcompletedate, comcompleteby, comhistoric, comactiondate, comactiontime, comdip, comdeptid, comlastchange, comletterpath, comadddata, comcliuniquesys, comcompletetime, comadduniqueid, comarchcounter, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.comms ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Comm{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Comuniquesys, &c.Comdate, &c.Comtime, &c.Comprobcode, &c.Comdetails, &c.Comenteredby, &c.Comcliservice, &c.Comadditional1, &c.Comadditional2, &c.Comadditional3, &c.Comadditional4, &c.Comadditional5, &c.Comadditional6, &c.Comadditional7, &c.Comadditional8, &c.Comadditional9, &c.Comadditional10, &c.Compriority, &c.Comstatus, &c.Comtaskto, &c.Comcompletedate, &c.Comcompleteby, &c.Comhistoric, &c.Comactiondate, &c.Comactiontime, &c.Comdip, &c.Comdeptid, &c.Comlastchange, &c.Comletterpath, &c.Comadddata, &c.Comcliuniquesys, &c.Comcompletetime, &c.Comadduniqueid, &c.Comarchcounter, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
