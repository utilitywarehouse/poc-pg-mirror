// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Udcclaim represents a row from 'equinox.udcclaim'.
type Udcclaim struct {
	Udccissuedate   pq.NullTime     `json:"udccissuedate"`   // udccissuedate
	Udccclaimno     sql.NullString  `json:"udccclaimno"`     // udccclaimno
	Udccrequestdate pq.NullTime     `json:"udccrequestdate"` // udccrequestdate
	Udcccomment     sql.NullInt64   `json:"udcccomment"`     // udcccomment
	Udccuniquesys   sql.NullInt64   `json:"udccuniquesys"`   // udccuniquesys
	Udcchearingdate pq.NullTime     `json:"udcchearingdate"` // udcchearingdate
	Udcchearingtype sql.NullString  `json:"udcchearingtype"` // udcchearingtype
	Udccclaimperiod sql.NullString  `json:"udccclaimperiod"` // udccclaimperiod
	Udccclaimamount sql.NullFloat64 `json:"udccclaimamount"` // udccclaimamount
	Udcccourtfee    sql.NullFloat64 `json:"udcccourtfee"`    // udcccourtfee
	EquinoxPrn      sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

// UdcclaimByEquinoxLrn retrieves a row from 'equinox.udcclaim' as a Udcclaim.
//
// Generated from index 'udcclaim_pkey'.
func UdcclaimByEquinoxLrn(db XODB, equinoxLrn int64) (*Udcclaim, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`udccissuedate, udccclaimno, udccrequestdate, udcccomment, udccuniquesys, udcchearingdate, udcchearingtype, udccclaimperiod, udccclaimamount, udcccourtfee, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.udcclaim ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	u := Udcclaim{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&u.Udccissuedate, &u.Udccclaimno, &u.Udccrequestdate, &u.Udcccomment, &u.Udccuniquesys, &u.Udcchearingdate, &u.Udcchearingtype, &u.Udccclaimperiod, &u.Udccclaimamount, &u.Udcccourtfee, &u.EquinoxPrn, &u.EquinoxLrn, &u.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &u, nil
}
