// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Psrcust represents a row from 'equinox.psrcust'.
type Psrcust struct {
	Psrcustref       sql.NullString `json:"psrcustref"`       // psrcustref
	Psrdigits        sql.NullString `json:"psrdigits"`        // psrdigits
	Psrnums          sql.NullString `json:"psrnums"`          // psrnums
	Psrlifesupequip  sql.NullString `json:"psrlifesupequip"`  // psrlifesupequip
	Psrcomments      sql.NullInt64  `json:"psrcomments"`      // psrcomments
	Psrpassword      sql.NullString `json:"psrpassword"`      // psrpassword
	Psrdatetotransco pq.NullTime    `json:"psrdatetotransco"` // psrdatetotransco
	Psrdatetoess     pq.NullTime    `json:"psrdatetoess"`     // psrdatetoess
	Psrsuccessdate   pq.NullTime    `json:"psrsuccessdate"`   // psrsuccessdate
	Psrtransconfirm  pq.NullTime    `json:"psrtransconfirm"`  // psrtransconfirm
	Psrapplication   sql.NullInt64  `json:"psrapplication"`   // psrapplication
	Psrgref          sql.NullString `json:"psrgref"`          // psrgref
	Psreref          sql.NullString `json:"psreref"`          // psreref
	Psrgascheckmeter pq.NullTime    `json:"psrgascheckmeter"` // psrgascheckmeter
	Psrdatecreated   pq.NullTime    `json:"psrdatecreated"`   // psrdatecreated
	Psrelecdigits    sql.NullString `json:"psrelecdigits"`    // psrelecdigits
	Psrsparec2       sql.NullString `json:"psrsparec2"`       // psrsparec2
	Psrspared1       pq.NullTime    `json:"psrspared1"`       // psrspared1
	Psrsparen1       sql.NullInt64  `json:"psrsparen1"`       // psrsparen1
	Psrsparec3       sql.NullString `json:"psrsparec3"`       // psrsparec3
	Psrelecnums      sql.NullString `json:"psrelecnums"`      // psrelecnums
	Psrappname       sql.NullString `json:"psrappname"`       // psrappname
	Psrconname       sql.NullString `json:"psrconname"`       // psrconname
	Psrconphone      sql.NullString `json:"psrconphone"`      // psrconphone
	Psrconadd1       sql.NullString `json:"psrconadd1"`       // psrconadd1
	Psrconadd2       sql.NullString `json:"psrconadd2"`       // psrconadd2
	Psrconadd3       sql.NullString `json:"psrconadd3"`       // psrconadd3
	Psrconadd4       sql.NullString `json:"psrconadd4"`       // psrconadd4
	Psrconcounty     sql.NullString `json:"psrconcounty"`     // psrconcounty
	Psrconpostcode   sql.NullString `json:"psrconpostcode"`   // psrconpostcode
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

func AllPsrcust(db XODB, callback func(x Psrcust) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`psrcustref, psrdigits, psrnums, psrlifesupequip, psrcomments, psrpassword, psrdatetotransco, psrdatetoess, psrsuccessdate, psrtransconfirm, psrapplication, psrgref, psreref, psrgascheckmeter, psrdatecreated, psrelecdigits, psrsparec2, psrspared1, psrsparen1, psrsparec3, psrelecnums, psrappname, psrconname, psrconphone, psrconadd1, psrconadd2, psrconadd3, psrconadd4, psrconcounty, psrconpostcode, equinox_lrn, equinox_sec ` +
		`FROM equinox.psrcust `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		p := Psrcust{}

		// scan
		err = q.Scan(&p.Psrcustref, &p.Psrdigits, &p.Psrnums, &p.Psrlifesupequip, &p.Psrcomments, &p.Psrpassword, &p.Psrdatetotransco, &p.Psrdatetoess, &p.Psrsuccessdate, &p.Psrtransconfirm, &p.Psrapplication, &p.Psrgref, &p.Psreref, &p.Psrgascheckmeter, &p.Psrdatecreated, &p.Psrelecdigits, &p.Psrsparec2, &p.Psrspared1, &p.Psrsparen1, &p.Psrsparec3, &p.Psrelecnums, &p.Psrappname, &p.Psrconname, &p.Psrconphone, &p.Psrconadd1, &p.Psrconadd2, &p.Psrconadd3, &p.Psrconadd4, &p.Psrconcounty, &p.Psrconpostcode, &p.EquinoxLrn, &p.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(p) {
			return nil
		}
	}

	return nil
}

// PsrcustByEquinoxLrn retrieves a row from 'equinox.psrcust' as a Psrcust.
//
// Generated from index 'psrcust_pkey'.
func PsrcustByEquinoxLrn(db XODB, equinoxLrn int64) (*Psrcust, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`psrcustref, psrdigits, psrnums, psrlifesupequip, psrcomments, psrpassword, psrdatetotransco, psrdatetoess, psrsuccessdate, psrtransconfirm, psrapplication, psrgref, psreref, psrgascheckmeter, psrdatecreated, psrelecdigits, psrsparec2, psrspared1, psrsparen1, psrsparec3, psrelecnums, psrappname, psrconname, psrconphone, psrconadd1, psrconadd2, psrconadd3, psrconadd4, psrconcounty, psrconpostcode, equinox_lrn, equinox_sec ` +
		`FROM equinox.psrcust ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Psrcust{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Psrcustref, &p.Psrdigits, &p.Psrnums, &p.Psrlifesupequip, &p.Psrcomments, &p.Psrpassword, &p.Psrdatetotransco, &p.Psrdatetoess, &p.Psrsuccessdate, &p.Psrtransconfirm, &p.Psrapplication, &p.Psrgref, &p.Psreref, &p.Psrgascheckmeter, &p.Psrdatecreated, &p.Psrelecdigits, &p.Psrsparec2, &p.Psrspared1, &p.Psrsparen1, &p.Psrsparec3, &p.Psrelecnums, &p.Psrappname, &p.Psrconname, &p.Psrconphone, &p.Psrconadd1, &p.Psrconadd2, &p.Psrconadd3, &p.Psrconadd4, &p.Psrconcounty, &p.Psrconpostcode, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
