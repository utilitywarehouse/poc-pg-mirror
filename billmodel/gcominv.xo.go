// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gcominv represents a row from 'equinox.gcominv'.
type Gcominv struct {
	Gcominvid     sql.NullFloat64 `json:"gcominvid"`     // gcominvid
	Gcominvdate   pq.NullTime     `json:"gcominvdate"`   // gcominvdate
	Gcominvtotal  sql.NullFloat64 `json:"gcominvtotal"`  // gcominvtotal
	Gcominvnet    sql.NullFloat64 `json:"gcominvnet"`    // gcominvnet
	Gcominvvat    sql.NullFloat64 `json:"gcominvvat"`    // gcominvvat
	Gcominvbilled sql.NullInt64   `json:"gcominvbilled"` // gcominvbilled
	EquinoxPrn    sql.NullInt64   `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64           `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64   `json:"equinox_sec"`   // equinox_sec
}

func AllGcominv(db XODB, callback func(x Gcominv) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gcominvid, gcominvdate, gcominvtotal, gcominvnet, gcominvvat, gcominvbilled, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gcominv `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Gcominv{}

		// scan
		err = q.Scan(&g.Gcominvid, &g.Gcominvdate, &g.Gcominvtotal, &g.Gcominvnet, &g.Gcominvvat, &g.Gcominvbilled, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GcominvByEquinoxLrn retrieves a row from 'equinox.gcominv' as a Gcominv.
//
// Generated from index 'gcominv_pkey'.
func GcominvByEquinoxLrn(db XODB, equinoxLrn int64) (*Gcominv, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gcominvid, gcominvdate, gcominvtotal, gcominvnet, gcominvvat, gcominvbilled, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gcominv ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gcominv{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gcominvid, &g.Gcominvdate, &g.Gcominvtotal, &g.Gcominvnet, &g.Gcominvvat, &g.Gcominvbilled, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
