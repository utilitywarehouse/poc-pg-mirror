// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Balloon represents a row from 'equinox.balloon'.
type Balloon struct {
	Bllneligible  sql.NullInt64  `json:"bllneligible"`  // bllneligible
	Bllntype      sql.NullInt64  `json:"bllntype"`      // bllntype
	Blln1903title sql.NullString `json:"blln1903title"` // blln1903title
	Blln1903group sql.NullInt64  `json:"blln1903group"` // blln1903group
	Bllndaffigold sql.NullInt64  `json:"bllndaffigold"` // bllndaffigold
	Bllngroup     sql.NullInt64  `json:"bllngroup"`     // bllngroup
	Bllnids       sql.NullInt64  `json:"bllnids"`       // bllnids
	Bllnqualified sql.NullString `json:"bllnqualified"` // bllnqualified
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllBalloon(db XODB, callback func(x Balloon) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`bllneligible, bllntype, blln1903title, blln1903group, bllndaffigold, bllngroup, bllnids, bllnqualified, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.balloon `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		b := Balloon{}

		// scan
		err = q.Scan(&b.Bllneligible, &b.Bllntype, &b.Blln1903title, &b.Blln1903group, &b.Bllndaffigold, &b.Bllngroup, &b.Bllnids, &b.Bllnqualified, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(b) {
			return nil
		}
	}

	return nil
}

// BalloonByEquinoxLrn retrieves a row from 'equinox.balloon' as a Balloon.
//
// Generated from index 'balloon_pkey'.
func BalloonByEquinoxLrn(db XODB, equinoxLrn int64) (*Balloon, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`bllneligible, bllntype, blln1903title, blln1903group, bllndaffigold, bllngroup, bllnids, bllnqualified, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.balloon ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Balloon{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.Bllneligible, &b.Bllntype, &b.Blln1903title, &b.Blln1903group, &b.Bllndaffigold, &b.Bllngroup, &b.Bllnids, &b.Bllnqualified, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
