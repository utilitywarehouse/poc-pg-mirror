// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Benhist represents a row from 'equinox.benhist'.
type Benhist struct {
	BenhistDate    pq.NullTime     `json:"benhist_date"`    // benhist_date
	BenhistAction  sql.NullString  `json:"benhist_action"`  // benhist_action
	BenhistNotes   sql.NullInt64   `json:"benhist_notes"`   // benhist_notes
	BenhistSparec1 sql.NullString  `json:"benhist_sparec1"` // benhist_sparec1
	BenhistSparen1 sql.NullFloat64 `json:"benhist_sparen1"` // benhist_sparen1
	BenhistSpared1 pq.NullTime     `json:"benhist_spared1"` // benhist_spared1
	EquinoxPrn     sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn     int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

// BenhistByEquinoxLrn retrieves a row from 'equinox.benhist' as a Benhist.
//
// Generated from index 'benhist_pkey'.
func BenhistByEquinoxLrn(db XODB, equinoxLrn int64) (*Benhist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`benhist_date, benhist_action, benhist_notes, benhist_sparec1, benhist_sparen1, benhist_spared1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.benhist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Benhist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.BenhistDate, &b.BenhistAction, &b.BenhistNotes, &b.BenhistSparec1, &b.BenhistSparen1, &b.BenhistSpared1, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
