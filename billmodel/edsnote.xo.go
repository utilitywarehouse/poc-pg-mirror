// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Edsnote represents a row from 'equinox.edsnotes'.
type Edsnote struct {
	Edsnnotes        sql.NullInt64  `json:"edsnnotes"`        // edsnnotes
	Edsnentereddate  pq.NullTime    `json:"edsnentereddate"`  // edsnentereddate
	Edsnenteredtime  pq.NullTime    `json:"edsnenteredtime"`  // edsnenteredtime
	Edsnenteredby    sql.NullString `json:"edsnenteredby"`    // edsnenteredby
	Edsndatereminder pq.NullTime    `json:"edsndatereminder"` // edsndatereminder
	Edsndiarise      sql.NullInt64  `json:"edsndiarise"`      // edsndiarise
	EquinoxPrn       sql.NullInt64  `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

func AllEdsnote(db XODB, callback func(x Edsnote) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`edsnnotes, edsnentereddate, edsnenteredtime, edsnenteredby, edsndatereminder, edsndiarise, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.edsnotes `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		e := Edsnote{}

		// scan
		err = q.Scan(&e.Edsnnotes, &e.Edsnentereddate, &e.Edsnenteredtime, &e.Edsnenteredby, &e.Edsndatereminder, &e.Edsndiarise, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(e) {
			return nil
		}
	}

	return nil
}

// EdsnoteByEquinoxLrn retrieves a row from 'equinox.edsnotes' as a Edsnote.
//
// Generated from index 'edsnotes_pkey'.
func EdsnoteByEquinoxLrn(db XODB, equinoxLrn int64) (*Edsnote, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`edsnnotes, edsnentereddate, edsnenteredtime, edsnenteredby, edsndatereminder, edsndiarise, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.edsnotes ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	e := Edsnote{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&e.Edsnnotes, &e.Edsnentereddate, &e.Edsnenteredtime, &e.Edsnenteredby, &e.Edsndatereminder, &e.Edsndiarise, &e.EquinoxPrn, &e.EquinoxLrn, &e.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &e, nil
}
