// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Mobhist represents a row from 'equinox.mobhist'.
type Mobhist struct {
	MobhistCode    sql.NullString  `json:"mobhist_code"`    // mobhist_code
	MobhistDate    pq.NullTime     `json:"mobhist_date"`    // mobhist_date
	MobhistAccount sql.NullString  `json:"mobhist_account"` // mobhist_account
	MobhistSparec1 sql.NullString  `json:"mobhist_sparec1"` // mobhist_sparec1
	MobhistSparen1 sql.NullFloat64 `json:"mobhist_sparen1"` // mobhist_sparen1
	MobhistSpared1 pq.NullTime     `json:"mobhist_spared1"` // mobhist_spared1
	EquinoxPrn     sql.NullInt64   `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn     int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

func AllMobhist(db XODB, callback func(x Mobhist) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`mobhist_code, mobhist_date, mobhist_account, mobhist_sparec1, mobhist_sparen1, mobhist_spared1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.mobhist `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		m := Mobhist{}

		// scan
		err = q.Scan(&m.MobhistCode, &m.MobhistDate, &m.MobhistAccount, &m.MobhistSparec1, &m.MobhistSparen1, &m.MobhistSpared1, &m.EquinoxPrn, &m.EquinoxLrn, &m.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(m) {
			return nil
		}
	}

	return nil
}

// MobhistByEquinoxLrn retrieves a row from 'equinox.mobhist' as a Mobhist.
//
// Generated from index 'mobhist_pkey'.
func MobhistByEquinoxLrn(db XODB, equinoxLrn int64) (*Mobhist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`mobhist_code, mobhist_date, mobhist_account, mobhist_sparec1, mobhist_sparen1, mobhist_spared1, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.mobhist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := Mobhist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.MobhistCode, &m.MobhistDate, &m.MobhistAccount, &m.MobhistSparec1, &m.MobhistSparen1, &m.MobhistSpared1, &m.EquinoxPrn, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
