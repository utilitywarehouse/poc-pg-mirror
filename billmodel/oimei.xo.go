// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Oimei represents a row from 'equinox.oimei'.
type Oimei struct {
	Oimeikey         sql.NullString `json:"oimeikey"`         // oimeikey
	Oimeimake        sql.NullString `json:"oimeimake"`        // oimeimake
	Oimeimodel       sql.NullString `json:"oimeimodel"`       // oimeimodel
	Oimeiother       sql.NullString `json:"oimeiother"`       // oimeiother
	Oimeidateentered pq.NullTime    `json:"oimeidateentered"` // oimeidateentered
	Oimeistocklevel  sql.NullInt64  `json:"oimeistocklevel"`  // oimeistocklevel
	Oimeicriticallev sql.NullInt64  `json:"oimeicriticallev"` // oimeicriticallev
	Oimeiorder       sql.NullString `json:"oimeiorder"`       // oimeiorder
	EquinoxPrn       sql.NullInt64  `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// OimeiByEquinoxLrn retrieves a row from 'equinox.oimei' as a Oimei.
//
// Generated from index 'oimei_pkey'.
func OimeiByEquinoxLrn(db XODB, equinoxLrn int64) (*Oimei, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`oimeikey, oimeimake, oimeimodel, oimeiother, oimeidateentered, oimeistocklevel, oimeicriticallev, oimeiorder, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.oimei ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	o := Oimei{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&o.Oimeikey, &o.Oimeimake, &o.Oimeimodel, &o.Oimeiother, &o.Oimeidateentered, &o.Oimeistocklevel, &o.Oimeicriticallev, &o.Oimeiorder, &o.EquinoxPrn, &o.EquinoxLrn, &o.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &o, nil
}
