// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ledgerp represents a row from 'equinox.ledgerp'.
type Ledgerp struct {
	Plguniquesys sql.NullFloat64 `json:"plguniquesys"` // plguniquesys
	Plgdate      pq.NullTime     `json:"plgdate"`      // plgdate
	Plgtime      pq.NullTime     `json:"plgtime"`      // plgtime
	Plgourref    sql.NullString  `json:"plgourref"`    // plgourref
	Plgreason    sql.NullString  `json:"plgreason"`    // plgreason
	Plgvattotal  sql.NullFloat64 `json:"plgvattotal"`  // plgvattotal
	Plgnettotal  sql.NullFloat64 `json:"plgnettotal"`  // plgnettotal
	Plgtotal     sql.NullFloat64 `json:"plgtotal"`     // plgtotal
	Plgflag      pq.NullTime     `json:"plgflag"`      // plgflag
	Plgtype      sql.NullString  `json:"plgtype"`      // plgtype
	EquinoxPrn   sql.NullInt64   `json:"equinox_prn"`  // equinox_prn
	EquinoxLrn   int64           `json:"equinox_lrn"`  // equinox_lrn
	EquinoxSec   sql.NullInt64   `json:"equinox_sec"`  // equinox_sec
}

func AllLedgerp(db XODB, callback func(x Ledgerp) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`plguniquesys, plgdate, plgtime, plgourref, plgreason, plgvattotal, plgnettotal, plgtotal, plgflag, plgtype, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ledgerp `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		l := Ledgerp{}

		// scan
		err = q.Scan(&l.Plguniquesys, &l.Plgdate, &l.Plgtime, &l.Plgourref, &l.Plgreason, &l.Plgvattotal, &l.Plgnettotal, &l.Plgtotal, &l.Plgflag, &l.Plgtype, &l.EquinoxPrn, &l.EquinoxLrn, &l.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(l) {
			return nil
		}
	}

	return nil
}

// LedgerpByEquinoxLrn retrieves a row from 'equinox.ledgerp' as a Ledgerp.
//
// Generated from index 'ledgerp_pkey'.
func LedgerpByEquinoxLrn(db XODB, equinoxLrn int64) (*Ledgerp, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`plguniquesys, plgdate, plgtime, plgourref, plgreason, plgvattotal, plgnettotal, plgtotal, plgflag, plgtype, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ledgerp ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	l := Ledgerp{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&l.Plguniquesys, &l.Plgdate, &l.Plgtime, &l.Plgourref, &l.Plgreason, &l.Plgvattotal, &l.Plgnettotal, &l.Plgtotal, &l.Plgflag, &l.Plgtype, &l.EquinoxPrn, &l.EquinoxLrn, &l.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &l, nil
}
