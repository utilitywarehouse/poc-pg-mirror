// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Guest represents a row from 'equinox.guest'.
type Guest struct {
	GuestExpID   sql.NullString `json:"guest_exp_id"`  // guest_exp_id
	GuestName    sql.NullString `json:"guest_name"`    // guest_name
	GuestRegd    sql.NullInt64  `json:"guest_regd"`    // guest_regd
	GuestMemo    sql.NullInt64  `json:"guest_memo"`    // guest_memo
	GuestExecid  sql.NullString `json:"guest_execid"`  // guest_execid
	GuestGroup   sql.NullString `json:"guest_group"`   // guest_group
	GuestSeminar sql.NullString `json:"guest_seminar"` // guest_seminar
	EquinoxPrn   sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn   int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec   sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllGuest(db XODB, callback func(x Guest) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`guest_exp_id, guest_name, guest_regd, guest_memo, guest_execid, guest_group, guest_seminar, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.guest `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Guest{}

		// scan
		err = q.Scan(&g.GuestExpID, &g.GuestName, &g.GuestRegd, &g.GuestMemo, &g.GuestExecid, &g.GuestGroup, &g.GuestSeminar, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GuestByEquinoxLrn retrieves a row from 'equinox.guest' as a Guest.
//
// Generated from index 'guest_pkey'.
func GuestByEquinoxLrn(db XODB, equinoxLrn int64) (*Guest, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`guest_exp_id, guest_name, guest_regd, guest_memo, guest_execid, guest_group, guest_seminar, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.guest ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Guest{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.GuestExpID, &g.GuestName, &g.GuestRegd, &g.GuestMemo, &g.GuestExecid, &g.GuestGroup, &g.GuestSeminar, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
