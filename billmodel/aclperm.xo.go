// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Aclperm represents a row from 'equinox.aclperms'.
type Aclperm struct {
	Aclpuserid  sql.NullString  `json:"aclpuserid"`  // aclpuserid
	Acloptions  sql.NullString  `json:"acloptions"`  // acloptions
	Aclpsparec1 sql.NullString  `json:"aclpsparec1"` // aclpsparec1
	Aclpsparec2 sql.NullString  `json:"aclpsparec2"` // aclpsparec2
	Aclpsparen1 sql.NullFloat64 `json:"aclpsparen1"` // aclpsparen1
	Aclpsparen2 sql.NullInt64   `json:"aclpsparen2"` // aclpsparen2
	EquinoxPrn  sql.NullInt64   `json:"equinox_prn"` // equinox_prn
	EquinoxLrn  int64           `json:"equinox_lrn"` // equinox_lrn
	EquinoxSec  sql.NullInt64   `json:"equinox_sec"` // equinox_sec
}

// AclpermByEquinoxLrn retrieves a row from 'equinox.aclperms' as a Aclperm.
//
// Generated from index 'aclperms_pkey'.
func AclpermByEquinoxLrn(db XODB, equinoxLrn int64) (*Aclperm, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`aclpuserid, acloptions, aclpsparec1, aclpsparec2, aclpsparen1, aclpsparen2, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.aclperms ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	a := Aclperm{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&a.Aclpuserid, &a.Acloptions, &a.Aclpsparec1, &a.Aclpsparec2, &a.Aclpsparen1, &a.Aclpsparen2, &a.EquinoxPrn, &a.EquinoxLrn, &a.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &a, nil
}
