// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Mobpart represents a row from 'equinox.mobpart'.
type Mobpart struct {
	Mobpartupc   sql.NullString `json:"mobpartupc"`   // mobpartupc
	Mobpartmake  sql.NullString `json:"mobpartmake"`  // mobpartmake
	Mobpartmodel sql.NullString `json:"mobpartmodel"` // mobpartmodel
	EquinoxPrn   sql.NullInt64  `json:"equinox_prn"`  // equinox_prn
	EquinoxLrn   int64          `json:"equinox_lrn"`  // equinox_lrn
	EquinoxSec   sql.NullInt64  `json:"equinox_sec"`  // equinox_sec
}

// MobpartByEquinoxLrn retrieves a row from 'equinox.mobpart' as a Mobpart.
//
// Generated from index 'mobpart_pkey'.
func MobpartByEquinoxLrn(db XODB, equinoxLrn int64) (*Mobpart, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`mobpartupc, mobpartmake, mobpartmodel, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.mobpart ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := Mobpart{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.Mobpartupc, &m.Mobpartmake, &m.Mobpartmodel, &m.EquinoxPrn, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
