// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ostock represents a row from 'equinox.ostock'.
type Ostock struct {
	Ostockimei      sql.NullString `json:"ostockimei"`      // ostockimei
	Ostockmaccode   sql.NullString `json:"ostockmaccode"`   // ostockmaccode
	Ostockdatein    pq.NullTime    `json:"ostockdatein"`    // ostockdatein
	Ostocktimein    pq.NullTime    `json:"ostocktimein"`    // ostocktimein
	Ostockpackageno sql.NullString `json:"ostockpackageno"` // ostockpackageno
	Ostockstatus    sql.NullString `json:"ostockstatus"`    // ostockstatus
	Ostocklocation  sql.NullString `json:"ostocklocation"`  // ostocklocation
	Ostockdateout   pq.NullTime    `json:"ostockdateout"`   // ostockdateout
	Ostocktimeout   pq.NullTime    `json:"ostocktimeout"`   // ostocktimeout
	Ostockaccountno sql.NullString `json:"ostockaccountno"` // ostockaccountno
	EquinoxPrn      sql.NullInt64  `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

// OstockByEquinoxLrn retrieves a row from 'equinox.ostock' as a Ostock.
//
// Generated from index 'ostock_pkey'.
func OstockByEquinoxLrn(db XODB, equinoxLrn int64) (*Ostock, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ostockimei, ostockmaccode, ostockdatein, ostocktimein, ostockpackageno, ostockstatus, ostocklocation, ostockdateout, ostocktimeout, ostockaccountno, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ostock ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	o := Ostock{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&o.Ostockimei, &o.Ostockmaccode, &o.Ostockdatein, &o.Ostocktimein, &o.Ostockpackageno, &o.Ostockstatus, &o.Ostocklocation, &o.Ostockdateout, &o.Ostocktimeout, &o.Ostockaccountno, &o.EquinoxPrn, &o.EquinoxLrn, &o.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &o, nil
}
