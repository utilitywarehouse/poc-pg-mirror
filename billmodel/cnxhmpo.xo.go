// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cnxhmpo represents a row from 'equinox.cnxhmpo'.
type Cnxhmpo struct {
	Cnxhmpoforename sql.NullString `json:"cnxhmpoforename"` // cnxhmpoforename
	Cnxhmposurname  sql.NullString `json:"cnxhmposurname"`  // cnxhmposurname
	Cnxhmpocontname sql.NullString `json:"cnxhmpocontname"` // cnxhmpocontname
	Cnxhmpoconame   sql.NullString `json:"cnxhmpoconame"`   // cnxhmpoconame
	Cnxhmpollpcode  sql.NullString `json:"cnxhmpollpcode"`  // cnxhmpollpcode
	Cnxhmpolladdr1  sql.NullString `json:"cnxhmpolladdr1"`  // cnxhmpolladdr1
	Cnxhmpolladdr2  sql.NullString `json:"cnxhmpolladdr2"`  // cnxhmpolladdr2
	Cnxhmpolladdr3  sql.NullString `json:"cnxhmpolladdr3"`  // cnxhmpolladdr3
	Cnxhmpolladdr4  sql.NullString `json:"cnxhmpolladdr4"`  // cnxhmpolladdr4
	Cnxhmpollcounty sql.NullString `json:"cnxhmpollcounty"` // cnxhmpollcounty
	Cnxhmpolapcode  sql.NullString `json:"cnxhmpolapcode"`  // cnxhmpolapcode
	Cnxhmpolaaddr1  sql.NullString `json:"cnxhmpolaaddr1"`  // cnxhmpolaaddr1
	Cnxhmpolaaddr2  sql.NullString `json:"cnxhmpolaaddr2"`  // cnxhmpolaaddr2
	Cnxhmpolaaddr3  sql.NullString `json:"cnxhmpolaaddr3"`  // cnxhmpolaaddr3
	Cnxhmpolaaddr4  sql.NullString `json:"cnxhmpolaaddr4"`  // cnxhmpolaaddr4
	Cnxhmpolacounty sql.NullString `json:"cnxhmpolacounty"` // cnxhmpolacounty
	Cnxhmpollmobile sql.NullString `json:"cnxhmpollmobile"` // cnxhmpollmobile
	Cnxhmpollemail  sql.NullString `json:"cnxhmpollemail"`  // cnxhmpollemail
	Cnxhmpolltel    sql.NullString `json:"cnxhmpolltel"`    // cnxhmpolltel
	Cnxhmpolamobile sql.NullString `json:"cnxhmpolamobile"` // cnxhmpolamobile
	Cnxhmpolaemail  sql.NullString `json:"cnxhmpolaemail"`  // cnxhmpolaemail
	Cnxhmpolatel    sql.NullString `json:"cnxhmpolatel"`    // cnxhmpolatel
	Cnxhmpounique   sql.NullInt64  `json:"cnxhmpounique"`   // cnxhmpounique
	EquinoxPrn      sql.NullInt64  `json:"equinox_prn"`     // equinox_prn
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllCnxhmpo(db XODB, callback func(x Cnxhmpo) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cnxhmpoforename, cnxhmposurname, cnxhmpocontname, cnxhmpoconame, cnxhmpollpcode, cnxhmpolladdr1, cnxhmpolladdr2, cnxhmpolladdr3, cnxhmpolladdr4, cnxhmpollcounty, cnxhmpolapcode, cnxhmpolaaddr1, cnxhmpolaaddr2, cnxhmpolaaddr3, cnxhmpolaaddr4, cnxhmpolacounty, cnxhmpollmobile, cnxhmpollemail, cnxhmpolltel, cnxhmpolamobile, cnxhmpolaemail, cnxhmpolatel, cnxhmpounique, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cnxhmpo `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cnxhmpo{}

		// scan
		err = q.Scan(&c.Cnxhmpoforename, &c.Cnxhmposurname, &c.Cnxhmpocontname, &c.Cnxhmpoconame, &c.Cnxhmpollpcode, &c.Cnxhmpolladdr1, &c.Cnxhmpolladdr2, &c.Cnxhmpolladdr3, &c.Cnxhmpolladdr4, &c.Cnxhmpollcounty, &c.Cnxhmpolapcode, &c.Cnxhmpolaaddr1, &c.Cnxhmpolaaddr2, &c.Cnxhmpolaaddr3, &c.Cnxhmpolaaddr4, &c.Cnxhmpolacounty, &c.Cnxhmpollmobile, &c.Cnxhmpollemail, &c.Cnxhmpolltel, &c.Cnxhmpolamobile, &c.Cnxhmpolaemail, &c.Cnxhmpolatel, &c.Cnxhmpounique, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CnxhmpoByEquinoxLrn retrieves a row from 'equinox.cnxhmpo' as a Cnxhmpo.
//
// Generated from index 'cnxhmpo_pkey'.
func CnxhmpoByEquinoxLrn(db XODB, equinoxLrn int64) (*Cnxhmpo, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cnxhmpoforename, cnxhmposurname, cnxhmpocontname, cnxhmpoconame, cnxhmpollpcode, cnxhmpolladdr1, cnxhmpolladdr2, cnxhmpolladdr3, cnxhmpolladdr4, cnxhmpollcounty, cnxhmpolapcode, cnxhmpolaaddr1, cnxhmpolaaddr2, cnxhmpolaaddr3, cnxhmpolaaddr4, cnxhmpolacounty, cnxhmpollmobile, cnxhmpollemail, cnxhmpolltel, cnxhmpolamobile, cnxhmpolaemail, cnxhmpolatel, cnxhmpounique, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.cnxhmpo ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cnxhmpo{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cnxhmpoforename, &c.Cnxhmposurname, &c.Cnxhmpocontname, &c.Cnxhmpoconame, &c.Cnxhmpollpcode, &c.Cnxhmpolladdr1, &c.Cnxhmpolladdr2, &c.Cnxhmpolladdr3, &c.Cnxhmpolladdr4, &c.Cnxhmpollcounty, &c.Cnxhmpolapcode, &c.Cnxhmpolaaddr1, &c.Cnxhmpolaaddr2, &c.Cnxhmpolaaddr3, &c.Cnxhmpolaaddr4, &c.Cnxhmpolacounty, &c.Cnxhmpollmobile, &c.Cnxhmpollemail, &c.Cnxhmpolltel, &c.Cnxhmpolamobile, &c.Cnxhmpolaemail, &c.Cnxhmpolatel, &c.Cnxhmpounique, &c.EquinoxPrn, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
