// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Ledger represents a row from 'equinox.ledger'.
type Ledger struct {
	Leduniquesys     sql.NullFloat64 `json:"leduniquesys"`     // leduniquesys
	Leddate          pq.NullTime     `json:"leddate"`          // leddate
	Ledtime          pq.NullTime     `json:"ledtime"`          // ledtime
	Ledposteddate    pq.NullTime     `json:"ledposteddate"`    // ledposteddate
	Ledtype          sql.NullString  `json:"ledtype"`          // ledtype
	Ledprobcode      sql.NullString  `json:"ledprobcode"`      // ledprobcode
	Lednettp         sql.NullFloat64 `json:"lednettp"`         // lednettp
	Ledvattp         sql.NullFloat64 `json:"ledvattp"`         // ledvattp
	Lednetgp         sql.NullFloat64 `json:"lednetgp"`         // lednetgp
	Ledvatgp         sql.NullFloat64 `json:"ledvatgp"`         // ledvatgp
	Lednetep         sql.NullFloat64 `json:"lednetep"`         // lednetep
	Ledvatep         sql.NullFloat64 `json:"ledvatep"`         // ledvatep
	Ledvattotal      sql.NullFloat64 `json:"ledvattotal"`      // ledvattotal
	Lednettotal      sql.NullFloat64 `json:"lednettotal"`      // lednettotal
	Ledtotal         sql.NullFloat64 `json:"ledtotal"`         // ledtotal
	Leduserid        sql.NullString  `json:"leduserid"`        // leduserid
	Ledourref        sql.NullString  `json:"ledourref"`        // ledourref
	Ledcustref       sql.NullString  `json:"ledcustref"`       // ledcustref
	Ledbillno        sql.NullFloat64 `json:"ledbillno"`        // ledbillno
	Ledcomuniquesys  sql.NullFloat64 `json:"ledcomuniquesys"`  // ledcomuniquesys
	Ledcomment       sql.NullInt64   `json:"ledcomment"`       // ledcomment
	Ledwriteoffdate  pq.NullTime     `json:"ledwriteoffdate"`  // ledwriteoffdate
	Ledwriteoffnettp sql.NullFloat64 `json:"ledwriteoffnettp"` // ledwriteoffnettp
	Ledwriteoffvattp sql.NullFloat64 `json:"ledwriteoffvattp"` // ledwriteoffvattp
	Ledwriteoffnetgp sql.NullFloat64 `json:"ledwriteoffnetgp"` // ledwriteoffnetgp
	Ledwriteoffvatgp sql.NullFloat64 `json:"ledwriteoffvatgp"` // ledwriteoffvatgp
	Ledwriteoffnetep sql.NullFloat64 `json:"ledwriteoffnetep"` // ledwriteoffnetep
	Ledwriteoffvatep sql.NullFloat64 `json:"ledwriteoffvatep"` // ledwriteoffvatep
	Ledflag          pq.NullTime     `json:"ledflag"`          // ledflag
	Ledtoos          sql.NullString  `json:"ledtoos"`          // ledtoos
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllLedger(db XODB, callback func(x Ledger) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`leduniquesys, leddate, ledtime, ledposteddate, ledtype, ledprobcode, lednettp, ledvattp, lednetgp, ledvatgp, lednetep, ledvatep, ledvattotal, lednettotal, ledtotal, leduserid, ledourref, ledcustref, ledbillno, ledcomuniquesys, ledcomment, ledwriteoffdate, ledwriteoffnettp, ledwriteoffvattp, ledwriteoffnetgp, ledwriteoffvatgp, ledwriteoffnetep, ledwriteoffvatep, ledflag, ledtoos, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ledger `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		l := Ledger{}

		// scan
		err = q.Scan(&l.Leduniquesys, &l.Leddate, &l.Ledtime, &l.Ledposteddate, &l.Ledtype, &l.Ledprobcode, &l.Lednettp, &l.Ledvattp, &l.Lednetgp, &l.Ledvatgp, &l.Lednetep, &l.Ledvatep, &l.Ledvattotal, &l.Lednettotal, &l.Ledtotal, &l.Leduserid, &l.Ledourref, &l.Ledcustref, &l.Ledbillno, &l.Ledcomuniquesys, &l.Ledcomment, &l.Ledwriteoffdate, &l.Ledwriteoffnettp, &l.Ledwriteoffvattp, &l.Ledwriteoffnetgp, &l.Ledwriteoffvatgp, &l.Ledwriteoffnetep, &l.Ledwriteoffvatep, &l.Ledflag, &l.Ledtoos, &l.EquinoxPrn, &l.EquinoxLrn, &l.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(l) {
			return nil
		}
	}

	return nil
}

// LedgerByEquinoxLrn retrieves a row from 'equinox.ledger' as a Ledger.
//
// Generated from index 'ledger_pkey'.
func LedgerByEquinoxLrn(db XODB, equinoxLrn int64) (*Ledger, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`leduniquesys, leddate, ledtime, ledposteddate, ledtype, ledprobcode, lednettp, ledvattp, lednetgp, ledvatgp, lednetep, ledvatep, ledvattotal, lednettotal, ledtotal, leduserid, ledourref, ledcustref, ledbillno, ledcomuniquesys, ledcomment, ledwriteoffdate, ledwriteoffnettp, ledwriteoffvattp, ledwriteoffnetgp, ledwriteoffvatgp, ledwriteoffnetep, ledwriteoffvatep, ledflag, ledtoos, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ledger ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	l := Ledger{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&l.Leduniquesys, &l.Leddate, &l.Ledtime, &l.Ledposteddate, &l.Ledtype, &l.Ledprobcode, &l.Lednettp, &l.Ledvattp, &l.Lednetgp, &l.Ledvatgp, &l.Lednetep, &l.Ledvatep, &l.Ledvattotal, &l.Lednettotal, &l.Ledtotal, &l.Leduserid, &l.Ledourref, &l.Ledcustref, &l.Ledbillno, &l.Ledcomuniquesys, &l.Ledcomment, &l.Ledwriteoffdate, &l.Ledwriteoffnettp, &l.Ledwriteoffvattp, &l.Ledwriteoffnetgp, &l.Ledwriteoffvatgp, &l.Ledwriteoffnetep, &l.Ledwriteoffvatep, &l.Ledflag, &l.Ledtoos, &l.EquinoxPrn, &l.EquinoxLrn, &l.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &l, nil
}
