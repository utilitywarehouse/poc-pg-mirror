// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cgbpcust represents a row from 'equinox.cgbpcust'.
type Cgbpcust struct {
	Cgbpcustaccno  sql.NullString  `json:"cgbpcustaccno"`  // cgbpcustaccno
	Cgbpexid       sql.NullString  `json:"cgbpexid"`       // cgbpexid
	Cgbcashbackamt sql.NullFloat64 `json:"cgbcashbackamt"` // cgbcashbackamt
	Cgbpclawback   sql.NullFloat64 `json:"cgbpclawback"`   // cgbpclawback
	EquinoxLrn     int64           `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`    // equinox_sec
}

func AllCgbpcust(db XODB, callback func(x Cgbpcust) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cgbpcustaccno, cgbpexid, cgbcashbackamt, cgbpclawback, equinox_lrn, equinox_sec ` +
		`FROM equinox.cgbpcust `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cgbpcust{}

		// scan
		err = q.Scan(&c.Cgbpcustaccno, &c.Cgbpexid, &c.Cgbcashbackamt, &c.Cgbpclawback, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CgbpcustByEquinoxLrn retrieves a row from 'equinox.cgbpcust' as a Cgbpcust.
//
// Generated from index 'cgbpcust_pkey'.
func CgbpcustByEquinoxLrn(db XODB, equinoxLrn int64) (*Cgbpcust, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cgbpcustaccno, cgbpexid, cgbcashbackamt, cgbpclawback, equinox_lrn, equinox_sec ` +
		`FROM equinox.cgbpcust ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cgbpcust{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Cgbpcustaccno, &c.Cgbpexid, &c.Cgbcashbackamt, &c.Cgbpclawback, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
