// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Udcnote represents a row from 'equinox.udcnotes'.
type Udcnote struct {
	Udcnotes         sql.NullInt64  `json:"udcnotes"`         // udcnotes
	Udcentereddate   pq.NullTime    `json:"udcentereddate"`   // udcentereddate
	Udcenteredtime   pq.NullTime    `json:"udcenteredtime"`   // udcenteredtime
	Udcenteredby     sql.NullString `json:"udcenteredby"`     // udcenteredby
	Uddateofreminder pq.NullTime    `json:"uddateofreminder"` // uddateofreminder
	Udcdiarise       sql.NullInt64  `json:"udcdiarise"`       // udcdiarise
	Udcncategory     sql.NullString `json:"udcncategory"`     // udcncategory
	EquinoxPrn       sql.NullInt64  `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

// UdcnoteByEquinoxLrn retrieves a row from 'equinox.udcnotes' as a Udcnote.
//
// Generated from index 'udcnotes_pkey'.
func UdcnoteByEquinoxLrn(db XODB, equinoxLrn int64) (*Udcnote, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`udcnotes, udcentereddate, udcenteredtime, udcenteredby, uddateofreminder, udcdiarise, udcncategory, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.udcnotes ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	u := Udcnote{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&u.Udcnotes, &u.Udcentereddate, &u.Udcenteredtime, &u.Udcenteredby, &u.Uddateofreminder, &u.Udcdiarise, &u.Udcncategory, &u.EquinoxPrn, &u.EquinoxLrn, &u.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &u, nil
}
