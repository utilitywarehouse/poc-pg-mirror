// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Mobile represents a row from 'equinox.mobiles'.
type Mobile struct {
	Mobtype          sql.NullString  `json:"mobtype"`          // mobtype
	Mobiemi          sql.NullString  `json:"mobiemi"`          // mobiemi
	Mobaccountnumber sql.NullString  `json:"mobaccountnumber"` // mobaccountnumber
	Mobsim           sql.NullString  `json:"mobsim"`           // mobsim
	Mobpackageno     sql.NullString  `json:"mobpackageno"`     // mobpackageno
	Mobstatus        sql.NullString  `json:"mobstatus"`        // mobstatus
	Mobsaleprice     sql.NullFloat64 `json:"mobsaleprice"`     // mobsaleprice
	Moblocation      sql.NullString  `json:"moblocation"`      // moblocation
	Mobreason        sql.NullString  `json:"mobreason"`        // mobreason
	Mobcli           sql.NullString  `json:"mobcli"`           // mobcli
	Mobdateinstock   pq.NullTime     `json:"mobdateinstock"`   // mobdateinstock
	Mobsupplier      sql.NullString  `json:"mobsupplier"`      // mobsupplier
	Mobsparen1       sql.NullFloat64 `json:"mobsparen1"`       // mobsparen1
	Mobdateentered   pq.NullTime     `json:"mobdateentered"`   // mobdateentered
	Mobexorder       sql.NullString  `json:"mobexorder"`       // mobexorder
	Mobexdate        pq.NullTime     `json:"mobexdate"`        // mobexdate
	Mobexitemcode    sql.NullString  `json:"mobexitemcode"`    // mobexitemcode
	Mobexpicked      sql.NullInt64   `json:"mobexpicked"`      // mobexpicked
	Mobequipment     sql.NullString  `json:"mobequipment"`     // mobequipment
	Mobstockstatus   sql.NullString  `json:"mobstockstatus"`   // mobstockstatus
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

// MobileByEquinoxLrn retrieves a row from 'equinox.mobiles' as a Mobile.
//
// Generated from index 'mobiles_pkey'.
func MobileByEquinoxLrn(db XODB, equinoxLrn int64) (*Mobile, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`mobtype, mobiemi, mobaccountnumber, mobsim, mobpackageno, mobstatus, mobsaleprice, moblocation, mobreason, mobcli, mobdateinstock, mobsupplier, mobsparen1, mobdateentered, mobexorder, mobexdate, mobexitemcode, mobexpicked, mobequipment, mobstockstatus, equinox_lrn, equinox_sec ` +
		`FROM equinox.mobiles ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := Mobile{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.Mobtype, &m.Mobiemi, &m.Mobaccountnumber, &m.Mobsim, &m.Mobpackageno, &m.Mobstatus, &m.Mobsaleprice, &m.Moblocation, &m.Mobreason, &m.Mobcli, &m.Mobdateinstock, &m.Mobsupplier, &m.Mobsparen1, &m.Mobdateentered, &m.Mobexorder, &m.Mobexdate, &m.Mobexitemcode, &m.Mobexpicked, &m.Mobequipment, &m.Mobstockstatus, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
