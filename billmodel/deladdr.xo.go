// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Deladdr represents a row from 'equinox.deladdr'.
type Deladdr struct {
	DelRef       sql.NullInt64  `json:"del_ref"`       // del_ref
	DelRecipient sql.NullString `json:"del_recipient"` // del_recipient
	DelAdd1      sql.NullString `json:"del_add1"`      // del_add1
	DelAdd2      sql.NullString `json:"del_add2"`      // del_add2
	DelAdd3      sql.NullString `json:"del_add3"`      // del_add3
	DelAdd4      sql.NullString `json:"del_add4"`      // del_add4
	DelCounty    sql.NullString `json:"del_county"`    // del_county
	DelPcode     sql.NullString `json:"del_pcode"`     // del_pcode
	EquinoxLrn   int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec   sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllDeladdr(db XODB, callback func(x Deladdr) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`del_ref, del_recipient, del_add1, del_add2, del_add3, del_add4, del_county, del_pcode, equinox_lrn, equinox_sec ` +
		`FROM equinox.deladdr `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		d := Deladdr{}

		// scan
		err = q.Scan(&d.DelRef, &d.DelRecipient, &d.DelAdd1, &d.DelAdd2, &d.DelAdd3, &d.DelAdd4, &d.DelCounty, &d.DelPcode, &d.EquinoxLrn, &d.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(d) {
			return nil
		}
	}

	return nil
}

// DeladdrByEquinoxLrn retrieves a row from 'equinox.deladdr' as a Deladdr.
//
// Generated from index 'deladdr_pkey'.
func DeladdrByEquinoxLrn(db XODB, equinoxLrn int64) (*Deladdr, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`del_ref, del_recipient, del_add1, del_add2, del_add3, del_add4, del_county, del_pcode, equinox_lrn, equinox_sec ` +
		`FROM equinox.deladdr ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	d := Deladdr{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&d.DelRef, &d.DelRecipient, &d.DelAdd1, &d.DelAdd2, &d.DelAdd3, &d.DelAdd4, &d.DelCounty, &d.DelPcode, &d.EquinoxLrn, &d.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &d, nil
}
