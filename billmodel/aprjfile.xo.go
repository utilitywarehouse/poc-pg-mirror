// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Aprjfile represents a row from 'equinox.aprjfile'.
type Aprjfile struct {
	Gaprjtranstype sql.NullString `json:"gaprjtranstype"` // gaprjtranstype
	Gaprjrejreason sql.NullString `json:"gaprjrejreason"` // gaprjrejreason
	Gaprjfileread  sql.NullString `json:"gaprjfileread"`  // gaprjfileread
	Gaprjdateread  pq.NullTime    `json:"gaprjdateread"`  // gaprjdateread
	Gaprjtimeread  pq.NullTime    `json:"gaprjtimeread"`  // gaprjtimeread
	EquinoxPrn     sql.NullInt64  `json:"equinox_prn"`    // equinox_prn
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

func AllAprjfile(db XODB, callback func(x Aprjfile) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gaprjtranstype, gaprjrejreason, gaprjfileread, gaprjdateread, gaprjtimeread, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.aprjfile `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		a := Aprjfile{}

		// scan
		err = q.Scan(&a.Gaprjtranstype, &a.Gaprjrejreason, &a.Gaprjfileread, &a.Gaprjdateread, &a.Gaprjtimeread, &a.EquinoxPrn, &a.EquinoxLrn, &a.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(a) {
			return nil
		}
	}

	return nil
}

// AprjfileByEquinoxLrn retrieves a row from 'equinox.aprjfile' as a Aprjfile.
//
// Generated from index 'aprjfile_pkey'.
func AprjfileByEquinoxLrn(db XODB, equinoxLrn int64) (*Aprjfile, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gaprjtranstype, gaprjrejreason, gaprjfileread, gaprjdateread, gaprjtimeread, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.aprjfile ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	a := Aprjfile{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&a.Gaprjtranstype, &a.Gaprjrejreason, &a.Gaprjfileread, &a.Gaprjdateread, &a.Gaprjtimeread, &a.EquinoxPrn, &a.EquinoxLrn, &a.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &a, nil
}
