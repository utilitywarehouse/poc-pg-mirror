// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Credcard represents a row from 'equinox.credcard'.
type Credcard struct {
	Carduniquesys   sql.NullFloat64 `json:"carduniquesys"`   // carduniquesys
	Cardaccounttype sql.NullString  `json:"cardaccounttype"` // cardaccounttype
	Cardelementid   sql.NullString  `json:"cardelementid"`   // cardelementid
	Cardnumber      sql.NullString  `json:"cardnumber"`      // cardnumber
	Cardstartdate   sql.NullString  `json:"cardstartdate"`   // cardstartdate
	Cardexpirydate  sql.NullString  `json:"cardexpirydate"`  // cardexpirydate
	Cardissuenumber sql.NullString  `json:"cardissuenumber"` // cardissuenumber
	Cardtypecord    sql.NullString  `json:"cardtypecord"`    // cardtypecord
	Cardpostcode    sql.NullString  `json:"cardpostcode"`    // cardpostcode
	Cardverified    sql.NullInt64   `json:"cardverified"`    // cardverified
	Cardsource      sql.NullString  `json:"cardsource"`      // cardsource
	Cardvalid       sql.NullInt64   `json:"cardvalid"`       // cardvalid
	Cardusedebt     sql.NullInt64   `json:"cardusedebt"`     // cardusedebt
	Cardholder      sql.NullInt64   `json:"cardholder"`      // cardholder
	Carddateentered pq.NullTime     `json:"carddateentered"` // carddateentered
	Cardenteredby   sql.NullString  `json:"cardenteredby"`   // cardenteredby
	Cardnotes       sql.NullInt64   `json:"cardnotes"`       // cardnotes
	Cardcv2         sql.NullString  `json:"cardcv2"`         // cardcv2
	Cardholdername  sql.NullString  `json:"cardholdername"`  // cardholdername
	Cardsparen1     sql.NullInt64   `json:"cardsparen1"`     // cardsparen1
	Cardsparen2     sql.NullInt64   `json:"cardsparen2"`     // cardsparen2
	Cardspared1     pq.NullTime     `json:"cardspared1"`     // cardspared1
	Cardspared2     pq.NullTime     `json:"cardspared2"`     // cardspared2
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

// CredcardByEquinoxLrn retrieves a row from 'equinox.credcard' as a Credcard.
//
// Generated from index 'credcard_pkey'.
func CredcardByEquinoxLrn(db XODB, equinoxLrn int64) (*Credcard, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`carduniquesys, cardaccounttype, cardelementid, cardnumber, cardstartdate, cardexpirydate, cardissuenumber, cardtypecord, cardpostcode, cardverified, cardsource, cardvalid, cardusedebt, cardholder, carddateentered, cardenteredby, cardnotes, cardcv2, cardholdername, cardsparen1, cardsparen2, cardspared1, cardspared2, equinox_lrn, equinox_sec ` +
		`FROM equinox.credcard ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Credcard{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Carduniquesys, &c.Cardaccounttype, &c.Cardelementid, &c.Cardnumber, &c.Cardstartdate, &c.Cardexpirydate, &c.Cardissuenumber, &c.Cardtypecord, &c.Cardpostcode, &c.Cardverified, &c.Cardsource, &c.Cardvalid, &c.Cardusedebt, &c.Cardholder, &c.Carddateentered, &c.Cardenteredby, &c.Cardnotes, &c.Cardcv2, &c.Cardholdername, &c.Cardsparen1, &c.Cardsparen2, &c.Cardspared1, &c.Cardspared2, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
