// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Biscont represents a row from 'equinox.biscont'.
type Biscont struct {
	Biscontcompany sql.NullString `json:"biscontcompany"` // biscontcompany
	Biscontid      sql.NullString `json:"biscontid"`      // biscontid
	Biscontdeptid  sql.NullString `json:"biscontdeptid"`  // biscontdeptid
	Biscontname    sql.NullString `json:"biscontname"`    // biscontname
	Biscontphone   sql.NullString `json:"biscontphone"`   // biscontphone
	Biscontfax     sql.NullString `json:"biscontfax"`     // biscontfax
	Biscontemail   sql.NullString `json:"biscontemail"`   // biscontemail
	Biscontprocess sql.NullString `json:"biscontprocess"` // biscontprocess
	EquinoxLrn     int64          `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`    // equinox_sec
}

func AllBiscont(db XODB, callback func(x Biscont) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`biscontcompany, biscontid, biscontdeptid, biscontname, biscontphone, biscontfax, biscontemail, biscontprocess, equinox_lrn, equinox_sec ` +
		`FROM equinox.biscont `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		b := Biscont{}

		// scan
		err = q.Scan(&b.Biscontcompany, &b.Biscontid, &b.Biscontdeptid, &b.Biscontname, &b.Biscontphone, &b.Biscontfax, &b.Biscontemail, &b.Biscontprocess, &b.EquinoxLrn, &b.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(b) {
			return nil
		}
	}

	return nil
}

// BiscontByEquinoxLrn retrieves a row from 'equinox.biscont' as a Biscont.
//
// Generated from index 'biscont_pkey'.
func BiscontByEquinoxLrn(db XODB, equinoxLrn int64) (*Biscont, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`biscontcompany, biscontid, biscontdeptid, biscontname, biscontphone, biscontfax, biscontemail, biscontprocess, equinox_lrn, equinox_sec ` +
		`FROM equinox.biscont ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Biscont{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.Biscontcompany, &b.Biscontid, &b.Biscontdeptid, &b.Biscontname, &b.Biscontphone, &b.Biscontfax, &b.Biscontemail, &b.Biscontprocess, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
