// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Comcode represents a row from 'equinox.comcodes'.
type Comcode struct {
	Comcodeid       sql.NullInt64   `json:"comcodeid"`       // comcodeid
	Cccode          sql.NullString  `json:"cccode"`          // cccode
	Ccpart1         sql.NullString  `json:"ccpart1"`         // ccpart1
	Ccpart2         sql.NullString  `json:"ccpart2"`         // ccpart2
	Ccdescription   sql.NullString  `json:"ccdescription"`   // ccdescription
	Ccdisplaytext   sql.NullString  `json:"ccdisplaytext"`   // ccdisplaytext
	Cccommistype    sql.NullString  `json:"cccommistype"`    // cccommistype
	Cctotalingtype  sql.NullString  `json:"cctotalingtype"`  // cctotalingtype
	Cctotalto       sql.NullInt64   `json:"cctotalto"`       // cctotalto
	Cccomheadfield  sql.NullString  `json:"cccomheadfield"`  // cccomheadfield
	Ccdisplayorder  sql.NullInt64   `json:"ccdisplayorder"`  // ccdisplayorder
	Ccsubtariffband sql.NullInt64   `json:"ccsubtariffband"` // ccsubtariffband
	Ccunique        sql.NullString  `json:"ccunique"`        // ccunique
	Ccuniquefield   sql.NullString  `json:"ccuniquefield"`   // ccuniquefield
	Ccactive        sql.NullInt64   `json:"ccactive"`        // ccactive
	Ccusage         sql.NullString  `json:"ccusage"`         // ccusage
	Ccapplyvat      sql.NullInt64   `json:"ccapplyvat"`      // ccapplyvat
	Ccdowns         sql.NullInt64   `json:"ccdowns"`         // ccdowns
	Ccdowne         sql.NullInt64   `json:"ccdowne"`         // ccdowne
	Cclevel         sql.NullInt64   `json:"cclevel"`         // cclevel
	Ccrootentry     sql.NullString  `json:"ccrootentry"`     // ccrootentry
	Ccsparechar1    sql.NullString  `json:"ccsparechar1"`    // ccsparechar1
	Ccsparechar2    sql.NullString  `json:"ccsparechar2"`    // ccsparechar2
	Ccsparechar3    sql.NullString  `json:"ccsparechar3"`    // ccsparechar3
	Ccsparenum1     sql.NullFloat64 `json:"ccsparenum1"`     // ccsparenum1
	Ccsparenum2     sql.NullFloat64 `json:"ccsparenum2"`     // ccsparenum2
	Ccsparenum3     sql.NullFloat64 `json:"ccsparenum3"`     // ccsparenum3
	Ccsparedate1    pq.NullTime     `json:"ccsparedate1"`    // ccsparedate1
	EquinoxLrn      int64           `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64   `json:"equinox_sec"`     // equinox_sec
}

// ComcodeByEquinoxLrn retrieves a row from 'equinox.comcodes' as a Comcode.
//
// Generated from index 'comcodes_pkey'.
func ComcodeByEquinoxLrn(db XODB, equinoxLrn int64) (*Comcode, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`comcodeid, cccode, ccpart1, ccpart2, ccdescription, ccdisplaytext, cccommistype, cctotalingtype, cctotalto, cccomheadfield, ccdisplayorder, ccsubtariffband, ccunique, ccuniquefield, ccactive, ccusage, ccapplyvat, ccdowns, ccdowne, cclevel, ccrootentry, ccsparechar1, ccsparechar2, ccsparechar3, ccsparenum1, ccsparenum2, ccsparenum3, ccsparedate1, equinox_lrn, equinox_sec ` +
		`FROM equinox.comcodes ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Comcode{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Comcodeid, &c.Cccode, &c.Ccpart1, &c.Ccpart2, &c.Ccdescription, &c.Ccdisplaytext, &c.Cccommistype, &c.Cctotalingtype, &c.Cctotalto, &c.Cccomheadfield, &c.Ccdisplayorder, &c.Ccsubtariffband, &c.Ccunique, &c.Ccuniquefield, &c.Ccactive, &c.Ccusage, &c.Ccapplyvat, &c.Ccdowns, &c.Ccdowne, &c.Cclevel, &c.Ccrootentry, &c.Ccsparechar1, &c.Ccsparechar2, &c.Ccsparechar3, &c.Ccsparenum1, &c.Ccsparenum2, &c.Ccsparenum3, &c.Ccsparedate1, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
