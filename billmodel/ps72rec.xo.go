// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Ps72rec represents a row from 'equinox.ps72recs'.
type Ps72rec struct {
	Ps72rejreason sql.NullString `json:"ps72rejreason"` // ps72rejreason
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

func AllPs72rec(db XODB, callback func(x Ps72rec) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`ps72rejreason, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ps72recs `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		p := Ps72rec{}

		// scan
		err = q.Scan(&p.Ps72rejreason, &p.EquinoxPrn, &p.EquinoxLrn, &p.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(p) {
			return nil
		}
	}

	return nil
}

// Ps72recByEquinoxLrn retrieves a row from 'equinox.ps72recs' as a Ps72rec.
//
// Generated from index 'ps72recs_pkey'.
func Ps72recByEquinoxLrn(db XODB, equinoxLrn int64) (*Ps72rec, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ps72rejreason, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.ps72recs ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Ps72rec{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Ps72rejreason, &p.EquinoxPrn, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
