// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
	"errors"

	"github.com/lib/pq"
)

// Newenq represents a row from 'equinox.newenq'.
type Newenq struct {
	Enqaccountno     sql.NullString `json:"enqaccountno"`     // enqaccountno
	Enqpostcode      sql.NullString `json:"enqpostcode"`      // enqpostcode
	Enqadd1          sql.NullString `json:"enqadd1"`          // enqadd1
	Enqadd2          sql.NullString `json:"enqadd2"`          // enqadd2
	Enqadd3          sql.NullString `json:"enqadd3"`          // enqadd3
	Enqadd4          sql.NullString `json:"enqadd4"`          // enqadd4
	Enqcounty        sql.NullString `json:"enqcounty"`        // enqcounty
	Enqconttitle     sql.NullString `json:"enqconttitle"`     // enqconttitle
	Enqcontsurname   sql.NullString `json:"enqcontsurname"`   // enqcontsurname
	Enqcontfirstnam  sql.NullString `json:"enqcontfirstnam"`  // enqcontfirstnam
	Enqname          sql.NullString `json:"enqname"`          // enqname
	Enqaddverified   sql.NullInt64  `json:"enqaddverified"`   // enqaddverified
	Enqoldaccount    sql.NullInt64  `json:"enqoldaccount"`    // enqoldaccount
	Enqdayphone      sql.NullString `json:"enqdayphone"`      // enqdayphone
	Enqhomephone     sql.NullString `json:"enqhomephone"`     // enqhomephone
	Enqmobilephone   sql.NullString `json:"enqmobilephone"`   // enqmobilephone
	Enqemail         sql.NullString `json:"enqemail"`         // enqemail
	Enqservsp        sql.NullInt64  `json:"enqservsp"`        // enqservsp
	Enqservfree      sql.NullInt64  `json:"enqservfree"`      // enqservfree
	Enqservmob       sql.NullInt64  `json:"enqservmob"`       // enqservmob
	Enqservelec      sql.NullInt64  `json:"enqservelec"`      // enqservelec
	Enqservgas       sql.NullInt64  `json:"enqservgas"`       // enqservgas
	Enqservgoplus    sql.NullInt64  `json:"enqservgoplus"`    // enqservgoplus
	Enqservbroadcall sql.NullInt64  `json:"enqservbroadcall"` // enqservbroadcall
	Enqinterestfrom  sql.NullInt64  `json:"enqinterestfrom"`  // enqinterestfrom
	Enqexistphone    sql.NullString `json:"enqexistphone"`    // enqexistphone
	Enqexistmobile   sql.NullString `json:"enqexistmobile"`   // enqexistmobile
	Enqexistelectric sql.NullString `json:"enqexistelectric"` // enqexistelectric
	Enqexistgas      sql.NullString `json:"enqexistgas"`      // enqexistgas
	Enqexistinternet sql.NullString `json:"enqexistinternet"` // enqexistinternet
	Enqexecid        sql.NullString `json:"enqexecid"`        // enqexecid
	Enqexname        sql.NullString `json:"enqexname"`        // enqexname
	Enqdateentered   pq.NullTime    `json:"enqdateentered"`   // enqdateentered
	Enqdatetolive    pq.NullTime    `json:"enqdatetolive"`    // enqdatetolive
	Enquirystatus    sql.NullString `json:"enquirystatus"`    // enquirystatus
	Enqnumquote      sql.NullInt64  `json:"enqnumquote"`      // enqnumquote
	Enqoldaccountnum sql.NullString `json:"enqoldaccountnum"` // enqoldaccountnum
	Enqbillaccountno sql.NullString `json:"enqbillaccountno"` // enqbillaccountno
	Enqbanksort      sql.NullString `json:"enqbanksort"`      // enqbanksort
	Enqbankaccno     sql.NullString `json:"enqbankaccno"`     // enqbankaccno
	Enqbankaccname   sql.NullString `json:"enqbankaccname"`   // enqbankaccname
	Enqdob           pq.NullTime    `json:"enqdob"`           // enqdob
	Enqcompletebank  sql.NullString `json:"enqcompletebank"`  // enqcompletebank
	Enqemailbill     sql.NullInt64  `json:"enqemailbill"`     // enqemailbill
	Enqnomarketing   sql.NullInt64  `json:"enqnomarketing"`   // enqnomarketing
	Enqenteredby     sql.NullString `json:"enqenteredby"`     // enqenteredby
	Enqpiggybondflag sql.NullString `json:"enqpiggybondflag"` // enqpiggybondflag
	Enqsparechar1    sql.NullString `json:"enqsparechar1"`    // enqsparechar1
	Enqsparechar2    sql.NullString `json:"enqsparechar2"`    // enqsparechar2
	Enqsparenum1     sql.NullInt64  `json:"enqsparenum1"`     // enqsparenum1
	Enqsparenum2     sql.NullInt64  `json:"enqsparenum2"`     // enqsparenum2
	Enqbillinggroup  sql.NullString `json:"enqbillinggroup"`  // enqbillinggroup
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the Newenq exists in the database.
func (n *Newenq) Exists() bool {
	return n._exists
}

// Deleted provides information if the Newenq has been deleted from the database.
func (n *Newenq) Deleted() bool {
	return n._deleted
}

// Insert inserts the Newenq to the database.
func (n *Newenq) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if n._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.newenq (` +
		`enqaccountno, enqpostcode, enqadd1, enqadd2, enqadd3, enqadd4, enqcounty, enqconttitle, enqcontsurname, enqcontfirstnam, enqname, enqaddverified, enqoldaccount, enqdayphone, enqhomephone, enqmobilephone, enqemail, enqservsp, enqservfree, enqservmob, enqservelec, enqservgas, enqservgoplus, enqservbroadcall, enqinterestfrom, enqexistphone, enqexistmobile, enqexistelectric, enqexistgas, enqexistinternet, enqexecid, enqexname, enqdateentered, enqdatetolive, enquirystatus, enqnumquote, enqoldaccountnum, enqbillaccountno, enqbanksort, enqbankaccno, enqbankaccname, enqdob, enqcompletebank, enqemailbill, enqnomarketing, enqenteredby, enqpiggybondflag, enqsparechar1, enqsparechar2, enqsparenum1, enqsparenum2, enqbillinggroup, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53` +
		`) RETURNING equinox_lrn`

	// run query
	XOLog(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxSec)
	err = db.QueryRow(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxSec).Scan(&n.EquinoxLrn)
	if err != nil {
		return err
	}

	// set existence
	n._exists = true

	return nil
}

// Update updates the Newenq in the database.
func (n *Newenq) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !n._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if n._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE equinox.newenq SET (` +
		`enqaccountno, enqpostcode, enqadd1, enqadd2, enqadd3, enqadd4, enqcounty, enqconttitle, enqcontsurname, enqcontfirstnam, enqname, enqaddverified, enqoldaccount, enqdayphone, enqhomephone, enqmobilephone, enqemail, enqservsp, enqservfree, enqservmob, enqservelec, enqservgas, enqservgoplus, enqservbroadcall, enqinterestfrom, enqexistphone, enqexistmobile, enqexistelectric, enqexistgas, enqexistinternet, enqexecid, enqexname, enqdateentered, enqdatetolive, enquirystatus, enqnumquote, enqoldaccountnum, enqbillaccountno, enqbanksort, enqbankaccno, enqbankaccname, enqdob, enqcompletebank, enqemailbill, enqnomarketing, enqenteredby, enqpiggybondflag, enqsparechar1, enqsparechar2, enqsparenum1, enqsparenum2, enqbillinggroup, equinox_sec` +
		`) = ( ` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53` +
		`) WHERE equinox_lrn = $54`

	// run query
	XOLog(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxSec, n.EquinoxLrn)
	_, err = db.Exec(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxSec, n.EquinoxLrn)
	return err
}

// Save saves the Newenq to the database.
func (n *Newenq) Save(db XODB) error {
	if n.Exists() {
		return n.Update(db)
	}

	return n.Insert(db)
}

// Upsert performs an upsert for Newenq.
//
// NOTE: PostgreSQL 9.5+ only
func (n *Newenq) Upsert(db XODB) error {
	var err error

	// if already exist, bail
	if n._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.newenq (` +
		`enqaccountno, enqpostcode, enqadd1, enqadd2, enqadd3, enqadd4, enqcounty, enqconttitle, enqcontsurname, enqcontfirstnam, enqname, enqaddverified, enqoldaccount, enqdayphone, enqhomephone, enqmobilephone, enqemail, enqservsp, enqservfree, enqservmob, enqservelec, enqservgas, enqservgoplus, enqservbroadcall, enqinterestfrom, enqexistphone, enqexistmobile, enqexistelectric, enqexistgas, enqexistinternet, enqexecid, enqexname, enqdateentered, enqdatetolive, enquirystatus, enqnumquote, enqoldaccountnum, enqbillaccountno, enqbanksort, enqbankaccno, enqbankaccname, enqdob, enqcompletebank, enqemailbill, enqnomarketing, enqenteredby, enqpiggybondflag, enqsparechar1, enqsparechar2, enqsparenum1, enqsparenum2, enqbillinggroup, equinox_lrn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54` +
		`) ON CONFLICT (equinox_lrn) DO UPDATE SET (` +
		`enqaccountno, enqpostcode, enqadd1, enqadd2, enqadd3, enqadd4, enqcounty, enqconttitle, enqcontsurname, enqcontfirstnam, enqname, enqaddverified, enqoldaccount, enqdayphone, enqhomephone, enqmobilephone, enqemail, enqservsp, enqservfree, enqservmob, enqservelec, enqservgas, enqservgoplus, enqservbroadcall, enqinterestfrom, enqexistphone, enqexistmobile, enqexistelectric, enqexistgas, enqexistinternet, enqexecid, enqexname, enqdateentered, enqdatetolive, enquirystatus, enqnumquote, enqoldaccountnum, enqbillaccountno, enqbanksort, enqbankaccno, enqbankaccname, enqdob, enqcompletebank, enqemailbill, enqnomarketing, enqenteredby, enqpiggybondflag, enqsparechar1, enqsparechar2, enqsparenum1, enqsparenum2, enqbillinggroup, equinox_lrn, equinox_sec` +
		`) = (` +
		`EXCLUDED.enqaccountno, EXCLUDED.enqpostcode, EXCLUDED.enqadd1, EXCLUDED.enqadd2, EXCLUDED.enqadd3, EXCLUDED.enqadd4, EXCLUDED.enqcounty, EXCLUDED.enqconttitle, EXCLUDED.enqcontsurname, EXCLUDED.enqcontfirstnam, EXCLUDED.enqname, EXCLUDED.enqaddverified, EXCLUDED.enqoldaccount, EXCLUDED.enqdayphone, EXCLUDED.enqhomephone, EXCLUDED.enqmobilephone, EXCLUDED.enqemail, EXCLUDED.enqservsp, EXCLUDED.enqservfree, EXCLUDED.enqservmob, EXCLUDED.enqservelec, EXCLUDED.enqservgas, EXCLUDED.enqservgoplus, EXCLUDED.enqservbroadcall, EXCLUDED.enqinterestfrom, EXCLUDED.enqexistphone, EXCLUDED.enqexistmobile, EXCLUDED.enqexistelectric, EXCLUDED.enqexistgas, EXCLUDED.enqexistinternet, EXCLUDED.enqexecid, EXCLUDED.enqexname, EXCLUDED.enqdateentered, EXCLUDED.enqdatetolive, EXCLUDED.enquirystatus, EXCLUDED.enqnumquote, EXCLUDED.enqoldaccountnum, EXCLUDED.enqbillaccountno, EXCLUDED.enqbanksort, EXCLUDED.enqbankaccno, EXCLUDED.enqbankaccname, EXCLUDED.enqdob, EXCLUDED.enqcompletebank, EXCLUDED.enqemailbill, EXCLUDED.enqnomarketing, EXCLUDED.enqenteredby, EXCLUDED.enqpiggybondflag, EXCLUDED.enqsparechar1, EXCLUDED.enqsparechar2, EXCLUDED.enqsparenum1, EXCLUDED.enqsparenum2, EXCLUDED.enqbillinggroup, EXCLUDED.equinox_lrn, EXCLUDED.equinox_sec` +
		`)`

	// run query
	XOLog(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxLrn, n.EquinoxSec)
	_, err = db.Exec(sqlstr, n.Enqaccountno, n.Enqpostcode, n.Enqadd1, n.Enqadd2, n.Enqadd3, n.Enqadd4, n.Enqcounty, n.Enqconttitle, n.Enqcontsurname, n.Enqcontfirstnam, n.Enqname, n.Enqaddverified, n.Enqoldaccount, n.Enqdayphone, n.Enqhomephone, n.Enqmobilephone, n.Enqemail, n.Enqservsp, n.Enqservfree, n.Enqservmob, n.Enqservelec, n.Enqservgas, n.Enqservgoplus, n.Enqservbroadcall, n.Enqinterestfrom, n.Enqexistphone, n.Enqexistmobile, n.Enqexistelectric, n.Enqexistgas, n.Enqexistinternet, n.Enqexecid, n.Enqexname, n.Enqdateentered, n.Enqdatetolive, n.Enquirystatus, n.Enqnumquote, n.Enqoldaccountnum, n.Enqbillaccountno, n.Enqbanksort, n.Enqbankaccno, n.Enqbankaccname, n.Enqdob, n.Enqcompletebank, n.Enqemailbill, n.Enqnomarketing, n.Enqenteredby, n.Enqpiggybondflag, n.Enqsparechar1, n.Enqsparechar2, n.Enqsparenum1, n.Enqsparenum2, n.Enqbillinggroup, n.EquinoxLrn, n.EquinoxSec)
	if err != nil {
		return err
	}

	// set existence
	n._exists = true

	return nil
}

// Delete deletes the Newenq from the database.
func (n *Newenq) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !n._exists {
		return nil
	}

	// if deleted, bail
	if n._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM equinox.newenq WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, n.EquinoxLrn)
	_, err = db.Exec(sqlstr, n.EquinoxLrn)
	if err != nil {
		return err
	}

	// set deleted
	n._deleted = true

	return nil
}

// NewenqByEquinoxLrn retrieves a row from 'equinox.newenq' as a Newenq.
//
// Generated from index 'newenq_pkey'.
func NewenqByEquinoxLrn(db XODB, equinoxLrn int64) (*Newenq, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`enqaccountno, enqpostcode, enqadd1, enqadd2, enqadd3, enqadd4, enqcounty, enqconttitle, enqcontsurname, enqcontfirstnam, enqname, enqaddverified, enqoldaccount, enqdayphone, enqhomephone, enqmobilephone, enqemail, enqservsp, enqservfree, enqservmob, enqservelec, enqservgas, enqservgoplus, enqservbroadcall, enqinterestfrom, enqexistphone, enqexistmobile, enqexistelectric, enqexistgas, enqexistinternet, enqexecid, enqexname, enqdateentered, enqdatetolive, enquirystatus, enqnumquote, enqoldaccountnum, enqbillaccountno, enqbanksort, enqbankaccno, enqbankaccname, enqdob, enqcompletebank, enqemailbill, enqnomarketing, enqenteredby, enqpiggybondflag, enqsparechar1, enqsparechar2, enqsparenum1, enqsparenum2, enqbillinggroup, equinox_lrn, equinox_sec ` +
		`FROM equinox.newenq ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	n := Newenq{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&n.Enqaccountno, &n.Enqpostcode, &n.Enqadd1, &n.Enqadd2, &n.Enqadd3, &n.Enqadd4, &n.Enqcounty, &n.Enqconttitle, &n.Enqcontsurname, &n.Enqcontfirstnam, &n.Enqname, &n.Enqaddverified, &n.Enqoldaccount, &n.Enqdayphone, &n.Enqhomephone, &n.Enqmobilephone, &n.Enqemail, &n.Enqservsp, &n.Enqservfree, &n.Enqservmob, &n.Enqservelec, &n.Enqservgas, &n.Enqservgoplus, &n.Enqservbroadcall, &n.Enqinterestfrom, &n.Enqexistphone, &n.Enqexistmobile, &n.Enqexistelectric, &n.Enqexistgas, &n.Enqexistinternet, &n.Enqexecid, &n.Enqexname, &n.Enqdateentered, &n.Enqdatetolive, &n.Enquirystatus, &n.Enqnumquote, &n.Enqoldaccountnum, &n.Enqbillaccountno, &n.Enqbanksort, &n.Enqbankaccno, &n.Enqbankaccname, &n.Enqdob, &n.Enqcompletebank, &n.Enqemailbill, &n.Enqnomarketing, &n.Enqenteredby, &n.Enqpiggybondflag, &n.Enqsparechar1, &n.Enqsparechar2, &n.Enqsparenum1, &n.Enqsparenum2, &n.Enqbillinggroup, &n.EquinoxLrn, &n.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &n, nil
}
