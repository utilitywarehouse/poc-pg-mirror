// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Smartrec represents a row from 'equinox.smartrec'.
type Smartrec struct {
	Smaccno          sql.NullString `json:"smaccno"`          // smaccno
	Smmpan           sql.NullString `json:"smmpan"`           // smmpan
	Smmprn           sql.NullString `json:"smmprn"`           // smmprn
	Smemsn           sql.NullString `json:"smemsn"`           // smemsn
	Smgmsn           sql.NullString `json:"smgmsn"`           // smgmsn
	Smtype           sql.NullInt64  `json:"smtype"`           // smtype
	Smgtype          sql.NullInt64  `json:"smgtype"`          // smgtype
	Sminststatus     sql.NullString `json:"sminststatus"`     // sminststatus
	Sminststatusdate pq.NullTime    `json:"sminststatusdate"` // sminststatusdate
	Smmopref         sql.NullString `json:"smmopref"`         // smmopref
	Smmop            sql.NullString `json:"smmop"`            // smmop
	Sminstalldate    pq.NullTime    `json:"sminstalldate"`    // sminstalldate
	Smwithdrawaldate pq.NullTime    `json:"smwithdrawaldate"` // smwithdrawaldate
	Smselectedinstal pq.NullTime    `json:"smselectedinstal"` // smselectedinstal
	Smihd            sql.NullString `json:"smihd"`            // smihd
	Smhanlive        sql.NullInt64  `json:"smhanlive"`        // smhanlive
	Smwanlive        sql.NullInt64  `json:"smwanlive"`        // smwanlive
	Smdataconsent    sql.NullInt64  `json:"smdataconsent"`    // smdataconsent
	Smsmicop         sql.NullString `json:"smsmicop"`         // smsmicop
	EquinoxLrn       int64          `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64  `json:"equinox_sec"`      // equinox_sec
}

func AllSmartrec(db XODB, callback func(x Smartrec) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`smaccno, smmpan, smmprn, smemsn, smgmsn, smtype, smgtype, sminststatus, sminststatusdate, smmopref, smmop, sminstalldate, smwithdrawaldate, smselectedinstal, smihd, smhanlive, smwanlive, smdataconsent, smsmicop, equinox_lrn, equinox_sec ` +
		`FROM equinox.smartrec `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		s := Smartrec{}

		// scan
		err = q.Scan(&s.Smaccno, &s.Smmpan, &s.Smmprn, &s.Smemsn, &s.Smgmsn, &s.Smtype, &s.Smgtype, &s.Sminststatus, &s.Sminststatusdate, &s.Smmopref, &s.Smmop, &s.Sminstalldate, &s.Smwithdrawaldate, &s.Smselectedinstal, &s.Smihd, &s.Smhanlive, &s.Smwanlive, &s.Smdataconsent, &s.Smsmicop, &s.EquinoxLrn, &s.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(s) {
			return nil
		}
	}

	return nil
}

// SmartrecByEquinoxLrn retrieves a row from 'equinox.smartrec' as a Smartrec.
//
// Generated from index 'smartrec_pkey'.
func SmartrecByEquinoxLrn(db XODB, equinoxLrn int64) (*Smartrec, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`smaccno, smmpan, smmprn, smemsn, smgmsn, smtype, smgtype, sminststatus, sminststatusdate, smmopref, smmop, sminstalldate, smwithdrawaldate, smselectedinstal, smihd, smhanlive, smwanlive, smdataconsent, smsmicop, equinox_lrn, equinox_sec ` +
		`FROM equinox.smartrec ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	s := Smartrec{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&s.Smaccno, &s.Smmpan, &s.Smmprn, &s.Smemsn, &s.Smgmsn, &s.Smtype, &s.Smgtype, &s.Sminststatus, &s.Sminststatusdate, &s.Smmopref, &s.Smmop, &s.Sminstalldate, &s.Smwithdrawaldate, &s.Smselectedinstal, &s.Smihd, &s.Smhanlive, &s.Smwanlive, &s.Smdataconsent, &s.Smsmicop, &s.EquinoxLrn, &s.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &s, nil
}
