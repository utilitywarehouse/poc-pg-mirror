// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// My800 represents a row from 'equinox.my800'.
type My800 struct {
	My800cli         sql.NullString  `json:"my800cli"`         // my800cli
	My8termcli       sql.NullString  `json:"my8termcli"`       // my8termcli
	My8dateassigned  pq.NullTime     `json:"my8dateassigned"`  // my8dateassigned
	My8customerid    sql.NullString  `json:"my8customerid"`    // my8customerid
	My8cwreservation sql.NullString  `json:"my8cwreservation"` // my8cwreservation
	My8sparec1       sql.NullString  `json:"my8sparec1"`       // my8sparec1
	My8sparec2       sql.NullString  `json:"my8sparec2"`       // my8sparec2
	My8sparec3       sql.NullString  `json:"my8sparec3"`       // my8sparec3
	My8spared1       pq.NullTime     `json:"my8spared1"`       // my8spared1
	My8spared2       pq.NullTime     `json:"my8spared2"`       // my8spared2
	My8spared3       pq.NullTime     `json:"my8spared3"`       // my8spared3
	My8sparen1       sql.NullFloat64 `json:"my8sparen1"`       // my8sparen1
	My8sparen2       sql.NullFloat64 `json:"my8sparen2"`       // my8sparen2
	My8sparen3       sql.NullFloat64 `json:"my8sparen3"`       // my8sparen3
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllMy800(db XODB, callback func(x My800) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`my800cli, my8termcli, my8dateassigned, my8customerid, my8cwreservation, my8sparec1, my8sparec2, my8sparec3, my8spared1, my8spared2, my8spared3, my8sparen1, my8sparen2, my8sparen3, equinox_lrn, equinox_sec ` +
		`FROM equinox.my800 `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		m := My800{}

		// scan
		err = q.Scan(&m.My800cli, &m.My8termcli, &m.My8dateassigned, &m.My8customerid, &m.My8cwreservation, &m.My8sparec1, &m.My8sparec2, &m.My8sparec3, &m.My8spared1, &m.My8spared2, &m.My8spared3, &m.My8sparen1, &m.My8sparen2, &m.My8sparen3, &m.EquinoxLrn, &m.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(m) {
			return nil
		}
	}

	return nil
}

// My800ByEquinoxLrn retrieves a row from 'equinox.my800' as a My800.
//
// Generated from index 'my800_pkey'.
func My800ByEquinoxLrn(db XODB, equinoxLrn int64) (*My800, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`my800cli, my8termcli, my8dateassigned, my8customerid, my8cwreservation, my8sparec1, my8sparec2, my8sparec3, my8spared1, my8spared2, my8spared3, my8sparen1, my8sparen2, my8sparen3, equinox_lrn, equinox_sec ` +
		`FROM equinox.my800 ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := My800{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.My800cli, &m.My8termcli, &m.My8dateassigned, &m.My8customerid, &m.My8cwreservation, &m.My8sparec1, &m.My8sparec2, &m.My8sparec3, &m.My8spared1, &m.My8spared2, &m.My8spared3, &m.My8sparen1, &m.My8sparen2, &m.My8sparen3, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
