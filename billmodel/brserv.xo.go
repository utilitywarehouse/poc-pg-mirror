// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Brserv represents a row from 'equinox.brserv'.
type Brserv struct {
	Brstype      sql.NullString  `json:"brstype"`      // brstype
	Brscallcnt   sql.NullFloat64 `json:"brscallcnt"`   // brscallcnt
	Brscallsecs  sql.NullFloat64 `json:"brscallsecs"`  // brscallsecs
	Brsretail    sql.NullFloat64 `json:"brsretail"`    // brsretail
	Brsmonnet    sql.NullFloat64 `json:"brsmonnet"`    // brsmonnet
	Brsmontot    sql.NullFloat64 `json:"brsmontot"`    // brsmontot
	Brsmonvatstd sql.NullFloat64 `json:"brsmonvatstd"` // brsmonvatstd
	Brsmonvatnrg sql.NullFloat64 `json:"brsmonvatnrg"` // brsmonvatnrg
	Brswhole     sql.NullFloat64 `json:"brswhole"`     // brswhole
	Brsvatstd    sql.NullFloat64 `json:"brsvatstd"`    // brsvatstd
	Brsvatnrg    sql.NullFloat64 `json:"brsvatnrg"`    // brsvatnrg
	EquinoxPrn   sql.NullInt64   `json:"equinox_prn"`  // equinox_prn
	EquinoxLrn   int64           `json:"equinox_lrn"`  // equinox_lrn
	EquinoxSec   sql.NullInt64   `json:"equinox_sec"`  // equinox_sec
}

func AllBrserv(db XODB, callback func(x Brserv) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`brstype, brscallcnt, brscallsecs, brsretail, brsmonnet, brsmontot, brsmonvatstd, brsmonvatnrg, brswhole, brsvatstd, brsvatnrg, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.brserv `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		b := Brserv{}

		// scan
		err = q.Scan(&b.Brstype, &b.Brscallcnt, &b.Brscallsecs, &b.Brsretail, &b.Brsmonnet, &b.Brsmontot, &b.Brsmonvatstd, &b.Brsmonvatnrg, &b.Brswhole, &b.Brsvatstd, &b.Brsvatnrg, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(b) {
			return nil
		}
	}

	return nil
}

// BrservByEquinoxLrn retrieves a row from 'equinox.brserv' as a Brserv.
//
// Generated from index 'brserv_pkey'.
func BrservByEquinoxLrn(db XODB, equinoxLrn int64) (*Brserv, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`brstype, brscallcnt, brscallsecs, brsretail, brsmonnet, brsmontot, brsmonvatstd, brsmonvatnrg, brswhole, brsvatstd, brsvatnrg, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.brserv ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Brserv{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.Brstype, &b.Brscallcnt, &b.Brscallsecs, &b.Brsretail, &b.Brsmonnet, &b.Brsmontot, &b.Brsmonvatstd, &b.Brsmonvatnrg, &b.Brswhole, &b.Brsvatstd, &b.Brsvatnrg, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
