// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Order represents a row from 'equinox.orders'.
type Order struct {
	Ordertype      sql.NullString  `json:"ordertype"`      // ordertype
	Oproductname   sql.NullString  `json:"oproductname"`   // oproductname
	Omake          sql.NullString  `json:"omake"`          // omake
	Omodel         sql.NullString  `json:"omodel"`         // omodel
	Odateordered   pq.NullTime     `json:"odateordered"`   // odateordered
	Odatearrived   pq.NullTime     `json:"odatearrived"`   // odatearrived
	Oqtyordered    sql.NullInt64   `json:"oqtyordered"`    // oqtyordered
	Oqtyreceived   sql.NullInt64   `json:"oqtyreceived"`   // oqtyreceived
	Ounitprice     sql.NullFloat64 `json:"ounitprice"`     // ounitprice
	Ovatrate       sql.NullFloat64 `json:"ovatrate"`       // ovatrate
	Osupplier      sql.NullString  `json:"osupplier"`      // osupplier
	Opurchaseorder sql.NullString  `json:"opurchaseorder"` // opurchaseorder
	Onotes         sql.NullInt64   `json:"onotes"`         // onotes
	Ocompleteddate pq.NullTime     `json:"ocompleteddate"` // ocompleteddate
	Ostockduedate  pq.NullTime     `json:"ostockduedate"`  // ostockduedate
	Oinvoiceno     sql.NullString  `json:"oinvoiceno"`     // oinvoiceno
	EquinoxLrn     int64           `json:"equinox_lrn"`    // equinox_lrn
	EquinoxSec     sql.NullInt64   `json:"equinox_sec"`    // equinox_sec
}

// OrderByEquinoxLrn retrieves a row from 'equinox.orders' as a Order.
//
// Generated from index 'orders_pkey'.
func OrderByEquinoxLrn(db XODB, equinoxLrn int64) (*Order, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`ordertype, oproductname, omake, omodel, odateordered, odatearrived, oqtyordered, oqtyreceived, ounitprice, ovatrate, osupplier, opurchaseorder, onotes, ocompleteddate, ostockduedate, oinvoiceno, equinox_lrn, equinox_sec ` +
		`FROM equinox.orders ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	o := Order{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&o.Ordertype, &o.Oproductname, &o.Omake, &o.Omodel, &o.Odateordered, &o.Odatearrived, &o.Oqtyordered, &o.Oqtyreceived, &o.Ounitprice, &o.Ovatrate, &o.Osupplier, &o.Opurchaseorder, &o.Onotes, &o.Ocompleteddate, &o.Ostockduedate, &o.Oinvoiceno, &o.EquinoxLrn, &o.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &o, nil
}
