// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Cnxreasn represents a row from 'equinox.cnxreasn'.
type Cnxreasn struct {
	CnxreasonID    sql.NullString `json:"cnxreason_id"`    // cnxreason_id
	CnxreasonDescr sql.NullString `json:"cnxreason_descr"` // cnxreason_descr
	CnxreasonSusp  sql.NullInt64  `json:"cnxreason_susp"`  // cnxreason_susp
	EquinoxLrn     int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec     sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllCnxreasn(db XODB, callback func(x Cnxreasn) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`cnxreason_id, cnxreason_descr, cnxreason_susp, equinox_lrn, equinox_sec ` +
		`FROM equinox.cnxreasn `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		c := Cnxreasn{}

		// scan
		err = q.Scan(&c.CnxreasonID, &c.CnxreasonDescr, &c.CnxreasonSusp, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(c) {
			return nil
		}
	}

	return nil
}

// CnxreasnByEquinoxLrn retrieves a row from 'equinox.cnxreasn' as a Cnxreasn.
//
// Generated from index 'cnxreasn_pkey'.
func CnxreasnByEquinoxLrn(db XODB, equinoxLrn int64) (*Cnxreasn, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`cnxreason_id, cnxreason_descr, cnxreason_susp, equinox_lrn, equinox_sec ` +
		`FROM equinox.cnxreasn ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Cnxreasn{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.CnxreasonID, &c.CnxreasonDescr, &c.CnxreasonSusp, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}
