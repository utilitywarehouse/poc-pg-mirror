// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
	"errors"

	"github.com/lib/pq"
)

// Customer represents a row from 'equinox.customer'.
type Customer struct {
	Custaccountno    sql.NullString  `json:"custaccountno"`    // custaccountno
	Custname         sql.NullString  `json:"custname"`         // custname
	Custconttitle    sql.NullString  `json:"custconttitle"`    // custconttitle
	Custcontinitials sql.NullString  `json:"custcontinitials"` // custcontinitials
	Custcontfirstnam sql.NullString  `json:"custcontfirstnam"` // custcontfirstnam
	Custcontsurname  sql.NullString  `json:"custcontsurname"`  // custcontsurname
	Custcampaign     sql.NullString  `json:"custcampaign"`     // custcampaign
	Custdob          pq.NullTime     `json:"custdob"`          // custdob
	Custadd1         sql.NullString  `json:"custadd1"`         // custadd1
	Custadd2         sql.NullString  `json:"custadd2"`         // custadd2
	Custadd3         sql.NullString  `json:"custadd3"`         // custadd3
	Custadd4         sql.NullString  `json:"custadd4"`         // custadd4
	Custcounty       sql.NullString  `json:"custcounty"`       // custcounty
	Custpostcode     sql.NullString  `json:"custpostcode"`     // custpostcode
	Custphone        sql.NullString  `json:"custphone"`        // custphone
	Custfax          sql.NullString  `json:"custfax"`          // custfax
	Custmobile       sql.NullString  `json:"custmobile"`       // custmobile
	Custemail        sql.NullString  `json:"custemail"`        // custemail
	Custinvtitle     sql.NullString  `json:"custinvtitle"`     // custinvtitle
	Custinvinitials  sql.NullString  `json:"custinvinitials"`  // custinvinitials
	Custinvfirstname sql.NullString  `json:"custinvfirstname"` // custinvfirstname
	Custinvsurname   sql.NullString  `json:"custinvsurname"`   // custinvsurname
	Custbillingmsgs  sql.NullString  `json:"custbillingmsgs"`  // custbillingmsgs
	Custrafpaid      pq.NullTime     `json:"custrafpaid"`      // custrafpaid
	Custinvadd1      sql.NullString  `json:"custinvadd1"`      // custinvadd1
	Custinvadd2      sql.NullString  `json:"custinvadd2"`      // custinvadd2
	Custinvadd3      sql.NullString  `json:"custinvadd3"`      // custinvadd3
	Custinvadd4      sql.NullString  `json:"custinvadd4"`      // custinvadd4
	Custinvcounty    sql.NullString  `json:"custinvcounty"`    // custinvcounty
	Custinvpostcode  sql.NullString  `json:"custinvpostcode"`  // custinvpostcode
	Custinvphone     sql.NullString  `json:"custinvphone"`     // custinvphone
	Custinvfax       sql.NullString  `json:"custinvfax"`       // custinvfax
	Custinvmobile    sql.NullString  `json:"custinvmobile"`    // custinvmobile
	Custinvemail     sql.NullString  `json:"custinvemail"`     // custinvemail
	Custbillinggroup sql.NullInt64   `json:"custbillinggroup"` // custbillinggroup
	Custnextbillno   sql.NullInt64   `json:"custnextbillno"`   // custnextbillno
	Custlastbilldate pq.NullTime     `json:"custlastbilldate"` // custlastbilldate
	Custpaidfirstbil pq.NullTime     `json:"custpaidfirstbil"` // custpaidfirstbil
	Custbilldelivery sql.NullInt64   `json:"custbilldelivery"` // custbilldelivery
	Custcardcashbak  sql.NullFloat64 `json:"custcardcashbak"`  // custcardcashbak
	Custcgacvd       sql.NullFloat64 `json:"custcgacvd"`       // custcgacvd
	Custgoodwillcred sql.NullFloat64 `json:"custgoodwillcred"` // custgoodwillcred
	Custaffcashbak   sql.NullFloat64 `json:"custaffcashbak"`   // custaffcashbak
	Custshareholding pq.NullTime     `json:"custshareholding"` // custshareholding
	Custdeposits     sql.NullFloat64 `json:"custdeposits"`     // custdeposits
	Custsurcharge    sql.NullFloat64 `json:"custsurcharge"`    // custsurcharge
	Custautobarflag  sql.NullString  `json:"custautobarflag"`  // custautobarflag
	Custautobardate  pq.NullTime     `json:"custautobardate"`  // custautobardate
	Custautobarend   pq.NullTime     `json:"custautobarend"`   // custautobarend
	Custrating       sql.NullInt64   `json:"custrating"`       // custrating
	Custcomments     sql.NullInt64   `json:"custcomments"`     // custcomments
	Custitemisecalls sql.NullInt64   `json:"custitemisecalls"` // custitemisecalls
	Custexecid       sql.NullString  `json:"custexecid"`       // custexecid
	Custdobccsource  sql.NullString  `json:"custdobccsource"`  // custdobccsource
	Custclublevel    sql.NullInt64   `json:"custclublevel"`    // custclublevel
	Custdateentered  pq.NullTime     `json:"custdateentered"`  // custdateentered
	Custlivedate     pq.NullTime     `json:"custlivedate"`     // custlivedate
	Custenddate      pq.NullTime     `json:"custenddate"`      // custenddate
	Custbanksort     sql.NullString  `json:"custbanksort"`     // custbanksort
	Custbankaccno    sql.NullString  `json:"custbankaccno"`    // custbankaccno
	Custbankaccname  sql.NullString  `json:"custbankaccname"`  // custbankaccname
	Custbankddref    sql.NullString  `json:"custbankddref"`    // custbankddref
	Custpaymethod    sql.NullString  `json:"custpaymethod"`    // custpaymethod
	Custauddisdate   pq.NullTime     `json:"custauddisdate"`   // custauddisdate
	Custstatus       sql.NullString  `json:"custstatus"`       // custstatus
	Cust100poundflag sql.NullInt64   `json:"cust100poundflag"` // cust100poundflag
	Custoutstanding  sql.NullFloat64 `json:"custoutstanding"`  // custoutstanding
	Custorigbillgrp  sql.NullInt64   `json:"custorigbillgrp"`  // custorigbillgrp
	Custcorporate    sql.NullString  `json:"custcorporate"`    // custcorporate
	Custcorppackage  sql.NullString  `json:"custcorppackage"`  // custcorppackage
	Custmemberfee    sql.NullFloat64 `json:"custmemberfee"`    // custmemberfee
	Custcgbpaid      pq.NullTime     `json:"custcgbpaid"`      // custcgbpaid
	Custhighincome   sql.NullInt64   `json:"custhighincome"`   // custhighincome
	Custcgbclaw      sql.NullString  `json:"custcgbclaw"`      // custcgbclaw
	Custdobccdate    pq.NullTime     `json:"custdobccdate"`    // custdobccdate
	Custvexecid      sql.NullString  `json:"custvexecid"`      // custvexecid
	Custservices     sql.NullString  `json:"custservices"`     // custservices
	Custconnservices sql.NullString  `json:"custconnservices"` // custconnservices
	Custdebtdate     pq.NullTime     `json:"custdebtdate"`     // custdebtdate
	Custdebtagency   sql.NullString  `json:"custdebtagency"`   // custdebtagency
	Custbillsuppress sql.NullInt64   `json:"custbillsuppress"` // custbillsuppress
	Cust2cgbpaid     pq.NullTime     `json:"cust2cgbpaid"`     // cust2cgbpaid
	Custccnumber     sql.NullString  `json:"custccnumber"`     // custccnumber
	Custcctype       sql.NullInt64   `json:"custcctype"`       // custcctype
	Custccstartdate  sql.NullString  `json:"custccstartdate"`  // custccstartdate
	Custccenddate    sql.NullString  `json:"custccenddate"`    // custccenddate
	Custccissue      sql.NullInt64   `json:"custccissue"`      // custccissue
	Custfreecalls    sql.NullInt64   `json:"custfreecalls"`    // custfreecalls
	Custspecialneeds sql.NullInt64   `json:"custspecialneeds"` // custspecialneeds
	Custoriginalexec sql.NullString  `json:"custoriginalexec"` // custoriginalexec
	Custpsr          sql.NullString  `json:"custpsr"`          // custpsr
	Custpassword     sql.NullString  `json:"custpassword"`     // custpassword
	Custgreendeal    sql.NullFloat64 `json:"custgreendeal"`    // custgreendeal
	Custdeliverto    sql.NullInt64   `json:"custdeliverto"`    // custdeliverto
	Custenteredby    sql.NullString  `json:"custenteredby"`    // custenteredby
	Custc4bcontend   pq.NullTime     `json:"custc4bcontend"`   // custc4bcontend
	Custsentgocd     pq.NullTime     `json:"custsentgocd"`     // custsentgocd
	Custnomarketing  sql.NullString  `json:"custnomarketing"`  // custnomarketing
	Custtotps        pq.NullTime     `json:"custtotps"`        // custtotps
	Custservicelvl   sql.NullString  `json:"custservicelvl"`   // custservicelvl
	Custexportflag   sql.NullInt64   `json:"custexportflag"`   // custexportflag
	Custclubjoindate pq.NullTime     `json:"custclubjoindate"` // custclubjoindate
	Custprotectfee   sql.NullFloat64 `json:"custprotectfee"`   // custprotectfee
	Custclubdiscount sql.NullFloat64 `json:"custclubdiscount"` // custclubdiscount
	Custishomemover  sql.NullString  `json:"custishomemover"`  // custishomemover
	Custcashback     sql.NullString  `json:"custcashback"`     // custcashback
	Custcorpuser     sql.NullString  `json:"custcorpuser"`     // custcorpuser
	Custcommitment01 sql.NullFloat64 `json:"custcommitment01"` // custcommitment01
	Custcommitment02 sql.NullFloat64 `json:"custcommitment02"` // custcommitment02
	Custcommitment03 sql.NullFloat64 `json:"custcommitment03"` // custcommitment03
	Custdebtservices sql.NullString  `json:"custdebtservices"` // custdebtservices
	Custrequiresrmr  sql.NullString  `json:"custrequiresrmr"`  // custrequiresrmr
	Custpiggybondpay pq.NullTime     `json:"custpiggybondpay"` // custpiggybondpay
	Custdob2         pq.NullTime     `json:"custdob2"`         // custdob2
	Custclubupgrade  pq.NullTime     `json:"custclubupgrade"`  // custclubupgrade
	Custreferral     sql.NullString  `json:"custreferral"`     // custreferral
	Custrefreward    sql.NullString  `json:"custrefreward"`    // custrefreward
	Custrefdiscount  sql.NullInt64   `json:"custrefdiscount"`  // custrefdiscount
	Custrefcount     sql.NullInt64   `json:"custrefcount"`     // custrefcount
	Custownortenant  sql.NullString  `json:"custownortenant"`  // custownortenant
	Custtoteligsvs   sql.NullInt64   `json:"custtoteligsvs"`   // custtoteligsvs
	Custescalation   sql.NullString  `json:"custescalation"`   // custescalation
	Custnewtenant    sql.NullInt64   `json:"custnewtenant"`    // custnewtenant
	Custiscou        sql.NullString  `json:"custiscou"`        // custiscou
	Custarchivedate  pq.NullTime     `json:"custarchivedate"`  // custarchivedate
	Custrepservices  sql.NullString  `json:"custrepservices"`  // custrepservices
	Custemaildate    pq.NullTime     `json:"custemaildate"`    // custemaildate
	Custeligiblesvs  sql.NullInt64   `json:"custeligiblesvs"`  // custeligiblesvs
	Custmyaccount    pq.NullTime     `json:"custmyaccount"`    // custmyaccount
	Custspared1      pq.NullTime     `json:"custspared1"`      // custspared1
	Custgoldsince    pq.NullTime     `json:"custgoldsince"`    // custgoldsince
	Custvoucher      sql.NullString  `json:"custvoucher"`      // custvoucher
	Custshopperref   sql.NullString  `json:"custshopperref"`   // custshopperref
	Custsupportingid sql.NullString  `json:"custsupportingid"` // custsupportingid
	Custrafpaidan    pq.NullTime     `json:"custrafpaidan"`    // custrafpaidan
	Custtotalspend   sql.NullFloat64 `json:"custtotalspend"`   // custtotalspend
	Custnewppmonly   sql.NullInt64   `json:"custnewppmonly"`   // custnewppmonly
	Custlinkaccount  sql.NullString  `json:"custlinkaccount"`  // custlinkaccount
	Custvirtexecid   sql.NullString  `json:"custvirtexecid"`   // custvirtexecid
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the Customer exists in the database.
func (c *Customer) Exists() bool {
	return c._exists
}

// Deleted provides information if the Customer has been deleted from the database.
func (c *Customer) Deleted() bool {
	return c._deleted
}

// Insert inserts the Customer to the database.
func (c *Customer) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if c._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.customer (` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67, $68, $69, $70, $71, $72, $73, $74, $75, $76, $77, $78, $79, $80, $81, $82, $83, $84, $85, $86, $87, $88, $89, $90, $91, $92, $93, $94, $95, $96, $97, $98, $99, $100, $101, $102, $103, $104, $105, $106, $107, $108, $109, $110, $111, $112, $113, $114, $115, $116, $117, $118, $119, $120, $121, $122, $123, $124, $125, $126, $127, $128, $129, $130, $131, $132, $133, $134, $135, $136, $137, $138, $139, $140` +
		`) RETURNING equinox_lrn`

	// run query
	XOLog(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxSec)
	err = db.QueryRow(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxSec).Scan(&c.EquinoxLrn)
	if err != nil {
		return err
	}

	// set existence
	c._exists = true

	return nil
}

// Update updates the Customer in the database.
func (c *Customer) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !c._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if c._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE equinox.customer SET (` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_sec` +
		`) = ( ` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67, $68, $69, $70, $71, $72, $73, $74, $75, $76, $77, $78, $79, $80, $81, $82, $83, $84, $85, $86, $87, $88, $89, $90, $91, $92, $93, $94, $95, $96, $97, $98, $99, $100, $101, $102, $103, $104, $105, $106, $107, $108, $109, $110, $111, $112, $113, $114, $115, $116, $117, $118, $119, $120, $121, $122, $123, $124, $125, $126, $127, $128, $129, $130, $131, $132, $133, $134, $135, $136, $137, $138, $139, $140` +
		`) WHERE equinox_lrn = $141`

	// run query
	XOLog(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxSec, c.EquinoxLrn)
	_, err = db.Exec(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxSec, c.EquinoxLrn)
	return err
}

// Save saves the Customer to the database.
func (c *Customer) Save(db XODB) error {
	if c.Exists() {
		return c.Update(db)
	}

	return c.Insert(db)
}

// Upsert performs an upsert for Customer.
//
// NOTE: PostgreSQL 9.5+ only
func (c *Customer) Upsert(db XODB) error {
	var err error

	// if already exist, bail
	if c._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.customer (` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_lrn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67, $68, $69, $70, $71, $72, $73, $74, $75, $76, $77, $78, $79, $80, $81, $82, $83, $84, $85, $86, $87, $88, $89, $90, $91, $92, $93, $94, $95, $96, $97, $98, $99, $100, $101, $102, $103, $104, $105, $106, $107, $108, $109, $110, $111, $112, $113, $114, $115, $116, $117, $118, $119, $120, $121, $122, $123, $124, $125, $126, $127, $128, $129, $130, $131, $132, $133, $134, $135, $136, $137, $138, $139, $140, $141` +
		`) ON CONFLICT (equinox_lrn) DO UPDATE SET (` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_lrn, equinox_sec` +
		`) = (` +
		`EXCLUDED.custaccountno, EXCLUDED.custname, EXCLUDED.custconttitle, EXCLUDED.custcontinitials, EXCLUDED.custcontfirstnam, EXCLUDED.custcontsurname, EXCLUDED.custcampaign, EXCLUDED.custdob, EXCLUDED.custadd1, EXCLUDED.custadd2, EXCLUDED.custadd3, EXCLUDED.custadd4, EXCLUDED.custcounty, EXCLUDED.custpostcode, EXCLUDED.custphone, EXCLUDED.custfax, EXCLUDED.custmobile, EXCLUDED.custemail, EXCLUDED.custinvtitle, EXCLUDED.custinvinitials, EXCLUDED.custinvfirstname, EXCLUDED.custinvsurname, EXCLUDED.custbillingmsgs, EXCLUDED.custrafpaid, EXCLUDED.custinvadd1, EXCLUDED.custinvadd2, EXCLUDED.custinvadd3, EXCLUDED.custinvadd4, EXCLUDED.custinvcounty, EXCLUDED.custinvpostcode, EXCLUDED.custinvphone, EXCLUDED.custinvfax, EXCLUDED.custinvmobile, EXCLUDED.custinvemail, EXCLUDED.custbillinggroup, EXCLUDED.custnextbillno, EXCLUDED.custlastbilldate, EXCLUDED.custpaidfirstbil, EXCLUDED.custbilldelivery, EXCLUDED.custcardcashbak, EXCLUDED.custcgacvd, EXCLUDED.custgoodwillcred, EXCLUDED.custaffcashbak, EXCLUDED.custshareholding, EXCLUDED.custdeposits, EXCLUDED.custsurcharge, EXCLUDED.custautobarflag, EXCLUDED.custautobardate, EXCLUDED.custautobarend, EXCLUDED.custrating, EXCLUDED.custcomments, EXCLUDED.custitemisecalls, EXCLUDED.custexecid, EXCLUDED.custdobccsource, EXCLUDED.custclublevel, EXCLUDED.custdateentered, EXCLUDED.custlivedate, EXCLUDED.custenddate, EXCLUDED.custbanksort, EXCLUDED.custbankaccno, EXCLUDED.custbankaccname, EXCLUDED.custbankddref, EXCLUDED.custpaymethod, EXCLUDED.custauddisdate, EXCLUDED.custstatus, EXCLUDED.cust100poundflag, EXCLUDED.custoutstanding, EXCLUDED.custorigbillgrp, EXCLUDED.custcorporate, EXCLUDED.custcorppackage, EXCLUDED.custmemberfee, EXCLUDED.custcgbpaid, EXCLUDED.custhighincome, EXCLUDED.custcgbclaw, EXCLUDED.custdobccdate, EXCLUDED.custvexecid, EXCLUDED.custservices, EXCLUDED.custconnservices, EXCLUDED.custdebtdate, EXCLUDED.custdebtagency, EXCLUDED.custbillsuppress, EXCLUDED.cust2cgbpaid, EXCLUDED.custccnumber, EXCLUDED.custcctype, EXCLUDED.custccstartdate, EXCLUDED.custccenddate, EXCLUDED.custccissue, EXCLUDED.custfreecalls, EXCLUDED.custspecialneeds, EXCLUDED.custoriginalexec, EXCLUDED.custpsr, EXCLUDED.custpassword, EXCLUDED.custgreendeal, EXCLUDED.custdeliverto, EXCLUDED.custenteredby, EXCLUDED.custc4bcontend, EXCLUDED.custsentgocd, EXCLUDED.custnomarketing, EXCLUDED.custtotps, EXCLUDED.custservicelvl, EXCLUDED.custexportflag, EXCLUDED.custclubjoindate, EXCLUDED.custprotectfee, EXCLUDED.custclubdiscount, EXCLUDED.custishomemover, EXCLUDED.custcashback, EXCLUDED.custcorpuser, EXCLUDED.custcommitment01, EXCLUDED.custcommitment02, EXCLUDED.custcommitment03, EXCLUDED.custdebtservices, EXCLUDED.custrequiresrmr, EXCLUDED.custpiggybondpay, EXCLUDED.custdob2, EXCLUDED.custclubupgrade, EXCLUDED.custreferral, EXCLUDED.custrefreward, EXCLUDED.custrefdiscount, EXCLUDED.custrefcount, EXCLUDED.custownortenant, EXCLUDED.custtoteligsvs, EXCLUDED.custescalation, EXCLUDED.custnewtenant, EXCLUDED.custiscou, EXCLUDED.custarchivedate, EXCLUDED.custrepservices, EXCLUDED.custemaildate, EXCLUDED.custeligiblesvs, EXCLUDED.custmyaccount, EXCLUDED.custspared1, EXCLUDED.custgoldsince, EXCLUDED.custvoucher, EXCLUDED.custshopperref, EXCLUDED.custsupportingid, EXCLUDED.custrafpaidan, EXCLUDED.custtotalspend, EXCLUDED.custnewppmonly, EXCLUDED.custlinkaccount, EXCLUDED.custvirtexecid, EXCLUDED.equinox_lrn, EXCLUDED.equinox_sec` +
		`)`

	// run query
	XOLog(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxLrn, c.EquinoxSec)
	_, err = db.Exec(sqlstr, c.Custaccountno, c.Custname, c.Custconttitle, c.Custcontinitials, c.Custcontfirstnam, c.Custcontsurname, c.Custcampaign, c.Custdob, c.Custadd1, c.Custadd2, c.Custadd3, c.Custadd4, c.Custcounty, c.Custpostcode, c.Custphone, c.Custfax, c.Custmobile, c.Custemail, c.Custinvtitle, c.Custinvinitials, c.Custinvfirstname, c.Custinvsurname, c.Custbillingmsgs, c.Custrafpaid, c.Custinvadd1, c.Custinvadd2, c.Custinvadd3, c.Custinvadd4, c.Custinvcounty, c.Custinvpostcode, c.Custinvphone, c.Custinvfax, c.Custinvmobile, c.Custinvemail, c.Custbillinggroup, c.Custnextbillno, c.Custlastbilldate, c.Custpaidfirstbil, c.Custbilldelivery, c.Custcardcashbak, c.Custcgacvd, c.Custgoodwillcred, c.Custaffcashbak, c.Custshareholding, c.Custdeposits, c.Custsurcharge, c.Custautobarflag, c.Custautobardate, c.Custautobarend, c.Custrating, c.Custcomments, c.Custitemisecalls, c.Custexecid, c.Custdobccsource, c.Custclublevel, c.Custdateentered, c.Custlivedate, c.Custenddate, c.Custbanksort, c.Custbankaccno, c.Custbankaccname, c.Custbankddref, c.Custpaymethod, c.Custauddisdate, c.Custstatus, c.Cust100poundflag, c.Custoutstanding, c.Custorigbillgrp, c.Custcorporate, c.Custcorppackage, c.Custmemberfee, c.Custcgbpaid, c.Custhighincome, c.Custcgbclaw, c.Custdobccdate, c.Custvexecid, c.Custservices, c.Custconnservices, c.Custdebtdate, c.Custdebtagency, c.Custbillsuppress, c.Cust2cgbpaid, c.Custccnumber, c.Custcctype, c.Custccstartdate, c.Custccenddate, c.Custccissue, c.Custfreecalls, c.Custspecialneeds, c.Custoriginalexec, c.Custpsr, c.Custpassword, c.Custgreendeal, c.Custdeliverto, c.Custenteredby, c.Custc4bcontend, c.Custsentgocd, c.Custnomarketing, c.Custtotps, c.Custservicelvl, c.Custexportflag, c.Custclubjoindate, c.Custprotectfee, c.Custclubdiscount, c.Custishomemover, c.Custcashback, c.Custcorpuser, c.Custcommitment01, c.Custcommitment02, c.Custcommitment03, c.Custdebtservices, c.Custrequiresrmr, c.Custpiggybondpay, c.Custdob2, c.Custclubupgrade, c.Custreferral, c.Custrefreward, c.Custrefdiscount, c.Custrefcount, c.Custownortenant, c.Custtoteligsvs, c.Custescalation, c.Custnewtenant, c.Custiscou, c.Custarchivedate, c.Custrepservices, c.Custemaildate, c.Custeligiblesvs, c.Custmyaccount, c.Custspared1, c.Custgoldsince, c.Custvoucher, c.Custshopperref, c.Custsupportingid, c.Custrafpaidan, c.Custtotalspend, c.Custnewppmonly, c.Custlinkaccount, c.Custvirtexecid, c.EquinoxLrn, c.EquinoxSec)
	if err != nil {
		return err
	}

	// set existence
	c._exists = true

	return nil
}

// Delete deletes the Customer from the database.
func (c *Customer) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !c._exists {
		return nil
	}

	// if deleted, bail
	if c._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM equinox.customer WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, c.EquinoxLrn)
	_, err = db.Exec(sqlstr, c.EquinoxLrn)
	if err != nil {
		return err
	}

	// set deleted
	c._deleted = true

	return nil
}

// CustomersByCustname retrieves a row from 'equinox.customer' as a Customer.
//
// Generated from index 'custaccountno'.
func CustomersByCustname(db XODB, custname sql.NullString) ([]*Customer, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_lrn, equinox_sec ` +
		`FROM equinox.customer ` +
		`WHERE custname = $1`

	// run query
	XOLog(sqlstr, custname)
	q, err := db.Query(sqlstr, custname)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*Customer{}
	for q.Next() {
		c := Customer{
			_exists: true,
		}

		// scan
		err = q.Scan(&c.Custaccountno, &c.Custname, &c.Custconttitle, &c.Custcontinitials, &c.Custcontfirstnam, &c.Custcontsurname, &c.Custcampaign, &c.Custdob, &c.Custadd1, &c.Custadd2, &c.Custadd3, &c.Custadd4, &c.Custcounty, &c.Custpostcode, &c.Custphone, &c.Custfax, &c.Custmobile, &c.Custemail, &c.Custinvtitle, &c.Custinvinitials, &c.Custinvfirstname, &c.Custinvsurname, &c.Custbillingmsgs, &c.Custrafpaid, &c.Custinvadd1, &c.Custinvadd2, &c.Custinvadd3, &c.Custinvadd4, &c.Custinvcounty, &c.Custinvpostcode, &c.Custinvphone, &c.Custinvfax, &c.Custinvmobile, &c.Custinvemail, &c.Custbillinggroup, &c.Custnextbillno, &c.Custlastbilldate, &c.Custpaidfirstbil, &c.Custbilldelivery, &c.Custcardcashbak, &c.Custcgacvd, &c.Custgoodwillcred, &c.Custaffcashbak, &c.Custshareholding, &c.Custdeposits, &c.Custsurcharge, &c.Custautobarflag, &c.Custautobardate, &c.Custautobarend, &c.Custrating, &c.Custcomments, &c.Custitemisecalls, &c.Custexecid, &c.Custdobccsource, &c.Custclublevel, &c.Custdateentered, &c.Custlivedate, &c.Custenddate, &c.Custbanksort, &c.Custbankaccno, &c.Custbankaccname, &c.Custbankddref, &c.Custpaymethod, &c.Custauddisdate, &c.Custstatus, &c.Cust100poundflag, &c.Custoutstanding, &c.Custorigbillgrp, &c.Custcorporate, &c.Custcorppackage, &c.Custmemberfee, &c.Custcgbpaid, &c.Custhighincome, &c.Custcgbclaw, &c.Custdobccdate, &c.Custvexecid, &c.Custservices, &c.Custconnservices, &c.Custdebtdate, &c.Custdebtagency, &c.Custbillsuppress, &c.Cust2cgbpaid, &c.Custccnumber, &c.Custcctype, &c.Custccstartdate, &c.Custccenddate, &c.Custccissue, &c.Custfreecalls, &c.Custspecialneeds, &c.Custoriginalexec, &c.Custpsr, &c.Custpassword, &c.Custgreendeal, &c.Custdeliverto, &c.Custenteredby, &c.Custc4bcontend, &c.Custsentgocd, &c.Custnomarketing, &c.Custtotps, &c.Custservicelvl, &c.Custexportflag, &c.Custclubjoindate, &c.Custprotectfee, &c.Custclubdiscount, &c.Custishomemover, &c.Custcashback, &c.Custcorpuser, &c.Custcommitment01, &c.Custcommitment02, &c.Custcommitment03, &c.Custdebtservices, &c.Custrequiresrmr, &c.Custpiggybondpay, &c.Custdob2, &c.Custclubupgrade, &c.Custreferral, &c.Custrefreward, &c.Custrefdiscount, &c.Custrefcount, &c.Custownortenant, &c.Custtoteligsvs, &c.Custescalation, &c.Custnewtenant, &c.Custiscou, &c.Custarchivedate, &c.Custrepservices, &c.Custemaildate, &c.Custeligiblesvs, &c.Custmyaccount, &c.Custspared1, &c.Custgoldsince, &c.Custvoucher, &c.Custshopperref, &c.Custsupportingid, &c.Custrafpaidan, &c.Custtotalspend, &c.Custnewppmonly, &c.Custlinkaccount, &c.Custvirtexecid, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return nil, err
		}

		res = append(res, &c)
	}

	return res, nil
}

// CustomerByEquinoxLrn retrieves a row from 'equinox.customer' as a Customer.
//
// Generated from index 'customer_pkey'.
func CustomerByEquinoxLrn(db XODB, equinoxLrn int64) (*Customer, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_lrn, equinox_sec ` +
		`FROM equinox.customer ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	c := Customer{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&c.Custaccountno, &c.Custname, &c.Custconttitle, &c.Custcontinitials, &c.Custcontfirstnam, &c.Custcontsurname, &c.Custcampaign, &c.Custdob, &c.Custadd1, &c.Custadd2, &c.Custadd3, &c.Custadd4, &c.Custcounty, &c.Custpostcode, &c.Custphone, &c.Custfax, &c.Custmobile, &c.Custemail, &c.Custinvtitle, &c.Custinvinitials, &c.Custinvfirstname, &c.Custinvsurname, &c.Custbillingmsgs, &c.Custrafpaid, &c.Custinvadd1, &c.Custinvadd2, &c.Custinvadd3, &c.Custinvadd4, &c.Custinvcounty, &c.Custinvpostcode, &c.Custinvphone, &c.Custinvfax, &c.Custinvmobile, &c.Custinvemail, &c.Custbillinggroup, &c.Custnextbillno, &c.Custlastbilldate, &c.Custpaidfirstbil, &c.Custbilldelivery, &c.Custcardcashbak, &c.Custcgacvd, &c.Custgoodwillcred, &c.Custaffcashbak, &c.Custshareholding, &c.Custdeposits, &c.Custsurcharge, &c.Custautobarflag, &c.Custautobardate, &c.Custautobarend, &c.Custrating, &c.Custcomments, &c.Custitemisecalls, &c.Custexecid, &c.Custdobccsource, &c.Custclublevel, &c.Custdateentered, &c.Custlivedate, &c.Custenddate, &c.Custbanksort, &c.Custbankaccno, &c.Custbankaccname, &c.Custbankddref, &c.Custpaymethod, &c.Custauddisdate, &c.Custstatus, &c.Cust100poundflag, &c.Custoutstanding, &c.Custorigbillgrp, &c.Custcorporate, &c.Custcorppackage, &c.Custmemberfee, &c.Custcgbpaid, &c.Custhighincome, &c.Custcgbclaw, &c.Custdobccdate, &c.Custvexecid, &c.Custservices, &c.Custconnservices, &c.Custdebtdate, &c.Custdebtagency, &c.Custbillsuppress, &c.Cust2cgbpaid, &c.Custccnumber, &c.Custcctype, &c.Custccstartdate, &c.Custccenddate, &c.Custccissue, &c.Custfreecalls, &c.Custspecialneeds, &c.Custoriginalexec, &c.Custpsr, &c.Custpassword, &c.Custgreendeal, &c.Custdeliverto, &c.Custenteredby, &c.Custc4bcontend, &c.Custsentgocd, &c.Custnomarketing, &c.Custtotps, &c.Custservicelvl, &c.Custexportflag, &c.Custclubjoindate, &c.Custprotectfee, &c.Custclubdiscount, &c.Custishomemover, &c.Custcashback, &c.Custcorpuser, &c.Custcommitment01, &c.Custcommitment02, &c.Custcommitment03, &c.Custdebtservices, &c.Custrequiresrmr, &c.Custpiggybondpay, &c.Custdob2, &c.Custclubupgrade, &c.Custreferral, &c.Custrefreward, &c.Custrefdiscount, &c.Custrefcount, &c.Custownortenant, &c.Custtoteligsvs, &c.Custescalation, &c.Custnewtenant, &c.Custiscou, &c.Custarchivedate, &c.Custrepservices, &c.Custemaildate, &c.Custeligiblesvs, &c.Custmyaccount, &c.Custspared1, &c.Custgoldsince, &c.Custvoucher, &c.Custshopperref, &c.Custsupportingid, &c.Custrafpaidan, &c.Custtotalspend, &c.Custnewppmonly, &c.Custlinkaccount, &c.Custvirtexecid, &c.EquinoxLrn, &c.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &c, nil
}

// CustomersByCustaccountno retrieves a row from 'equinox.customer' as a Customer.
//
// Generated from index 'i_customer_accountno'.
func CustomersByCustaccountno(db XODB, custaccountno sql.NullString) ([]*Customer, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`custaccountno, custname, custconttitle, custcontinitials, custcontfirstnam, custcontsurname, custcampaign, custdob, custadd1, custadd2, custadd3, custadd4, custcounty, custpostcode, custphone, custfax, custmobile, custemail, custinvtitle, custinvinitials, custinvfirstname, custinvsurname, custbillingmsgs, custrafpaid, custinvadd1, custinvadd2, custinvadd3, custinvadd4, custinvcounty, custinvpostcode, custinvphone, custinvfax, custinvmobile, custinvemail, custbillinggroup, custnextbillno, custlastbilldate, custpaidfirstbil, custbilldelivery, custcardcashbak, custcgacvd, custgoodwillcred, custaffcashbak, custshareholding, custdeposits, custsurcharge, custautobarflag, custautobardate, custautobarend, custrating, custcomments, custitemisecalls, custexecid, custdobccsource, custclublevel, custdateentered, custlivedate, custenddate, custbanksort, custbankaccno, custbankaccname, custbankddref, custpaymethod, custauddisdate, custstatus, cust100poundflag, custoutstanding, custorigbillgrp, custcorporate, custcorppackage, custmemberfee, custcgbpaid, custhighincome, custcgbclaw, custdobccdate, custvexecid, custservices, custconnservices, custdebtdate, custdebtagency, custbillsuppress, cust2cgbpaid, custccnumber, custcctype, custccstartdate, custccenddate, custccissue, custfreecalls, custspecialneeds, custoriginalexec, custpsr, custpassword, custgreendeal, custdeliverto, custenteredby, custc4bcontend, custsentgocd, custnomarketing, custtotps, custservicelvl, custexportflag, custclubjoindate, custprotectfee, custclubdiscount, custishomemover, custcashback, custcorpuser, custcommitment01, custcommitment02, custcommitment03, custdebtservices, custrequiresrmr, custpiggybondpay, custdob2, custclubupgrade, custreferral, custrefreward, custrefdiscount, custrefcount, custownortenant, custtoteligsvs, custescalation, custnewtenant, custiscou, custarchivedate, custrepservices, custemaildate, custeligiblesvs, custmyaccount, custspared1, custgoldsince, custvoucher, custshopperref, custsupportingid, custrafpaidan, custtotalspend, custnewppmonly, custlinkaccount, custvirtexecid, equinox_lrn, equinox_sec ` +
		`FROM equinox.customer ` +
		`WHERE custaccountno = $1`

	// run query
	XOLog(sqlstr, custaccountno)
	q, err := db.Query(sqlstr, custaccountno)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*Customer{}
	for q.Next() {
		c := Customer{
			_exists: true,
		}

		// scan
		err = q.Scan(&c.Custaccountno, &c.Custname, &c.Custconttitle, &c.Custcontinitials, &c.Custcontfirstnam, &c.Custcontsurname, &c.Custcampaign, &c.Custdob, &c.Custadd1, &c.Custadd2, &c.Custadd3, &c.Custadd4, &c.Custcounty, &c.Custpostcode, &c.Custphone, &c.Custfax, &c.Custmobile, &c.Custemail, &c.Custinvtitle, &c.Custinvinitials, &c.Custinvfirstname, &c.Custinvsurname, &c.Custbillingmsgs, &c.Custrafpaid, &c.Custinvadd1, &c.Custinvadd2, &c.Custinvadd3, &c.Custinvadd4, &c.Custinvcounty, &c.Custinvpostcode, &c.Custinvphone, &c.Custinvfax, &c.Custinvmobile, &c.Custinvemail, &c.Custbillinggroup, &c.Custnextbillno, &c.Custlastbilldate, &c.Custpaidfirstbil, &c.Custbilldelivery, &c.Custcardcashbak, &c.Custcgacvd, &c.Custgoodwillcred, &c.Custaffcashbak, &c.Custshareholding, &c.Custdeposits, &c.Custsurcharge, &c.Custautobarflag, &c.Custautobardate, &c.Custautobarend, &c.Custrating, &c.Custcomments, &c.Custitemisecalls, &c.Custexecid, &c.Custdobccsource, &c.Custclublevel, &c.Custdateentered, &c.Custlivedate, &c.Custenddate, &c.Custbanksort, &c.Custbankaccno, &c.Custbankaccname, &c.Custbankddref, &c.Custpaymethod, &c.Custauddisdate, &c.Custstatus, &c.Cust100poundflag, &c.Custoutstanding, &c.Custorigbillgrp, &c.Custcorporate, &c.Custcorppackage, &c.Custmemberfee, &c.Custcgbpaid, &c.Custhighincome, &c.Custcgbclaw, &c.Custdobccdate, &c.Custvexecid, &c.Custservices, &c.Custconnservices, &c.Custdebtdate, &c.Custdebtagency, &c.Custbillsuppress, &c.Cust2cgbpaid, &c.Custccnumber, &c.Custcctype, &c.Custccstartdate, &c.Custccenddate, &c.Custccissue, &c.Custfreecalls, &c.Custspecialneeds, &c.Custoriginalexec, &c.Custpsr, &c.Custpassword, &c.Custgreendeal, &c.Custdeliverto, &c.Custenteredby, &c.Custc4bcontend, &c.Custsentgocd, &c.Custnomarketing, &c.Custtotps, &c.Custservicelvl, &c.Custexportflag, &c.Custclubjoindate, &c.Custprotectfee, &c.Custclubdiscount, &c.Custishomemover, &c.Custcashback, &c.Custcorpuser, &c.Custcommitment01, &c.Custcommitment02, &c.Custcommitment03, &c.Custdebtservices, &c.Custrequiresrmr, &c.Custpiggybondpay, &c.Custdob2, &c.Custclubupgrade, &c.Custreferral, &c.Custrefreward, &c.Custrefdiscount, &c.Custrefcount, &c.Custownortenant, &c.Custtoteligsvs, &c.Custescalation, &c.Custnewtenant, &c.Custiscou, &c.Custarchivedate, &c.Custrepservices, &c.Custemaildate, &c.Custeligiblesvs, &c.Custmyaccount, &c.Custspared1, &c.Custgoldsince, &c.Custvoucher, &c.Custshopperref, &c.Custsupportingid, &c.Custrafpaidan, &c.Custtotalspend, &c.Custnewppmonly, &c.Custlinkaccount, &c.Custvirtexecid, &c.EquinoxLrn, &c.EquinoxSec)
		if err != nil {
			return nil, err
		}

		res = append(res, &c)
	}

	return res, nil
}
