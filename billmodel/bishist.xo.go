// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Bishist represents a row from 'equinox.bishist'.
type Bishist struct {
	Bishfilename  sql.NullString `json:"bishfilename"`  // bishfilename
	Bishfileid    sql.NullString `json:"bishfileid"`    // bishfileid
	Bishdate      pq.NullTime    `json:"bishdate"`      // bishdate
	Bishfiletype  sql.NullString `json:"bishfiletype"`  // bishfiletype
	Bishfileacrj  sql.NullString `json:"bishfileacrj"`  // bishfileacrj
	Bishread      sql.NullInt64  `json:"bishread"`      // bishread
	Bishresponse  sql.NullString `json:"bishresponse"`  // bishresponse
	Bishrecacrj   sql.NullString `json:"bishrecacrj"`   // bishrecacrj
	Bishmemo      sql.NullInt64  `json:"bishmemo"`      // bishmemo
	Bishhandshake pq.NullTime    `json:"bishhandshake"` // bishhandshake
	EquinoxPrn    sql.NullInt64  `json:"equinox_prn"`   // equinox_prn
	EquinoxLrn    int64          `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64  `json:"equinox_sec"`   // equinox_sec
}

// BishistByEquinoxLrn retrieves a row from 'equinox.bishist' as a Bishist.
//
// Generated from index 'bishist_pkey'.
func BishistByEquinoxLrn(db XODB, equinoxLrn int64) (*Bishist, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`bishfilename, bishfileid, bishdate, bishfiletype, bishfileacrj, bishread, bishresponse, bishrecacrj, bishmemo, bishhandshake, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.bishist ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Bishist{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.Bishfilename, &b.Bishfileid, &b.Bishdate, &b.Bishfiletype, &b.Bishfileacrj, &b.Bishread, &b.Bishresponse, &b.Bishrecacrj, &b.Bishmemo, &b.Bishhandshake, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
