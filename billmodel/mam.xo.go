// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Mam represents a row from 'equinox.mam'.
type Mam struct {
	Mamid           sql.NullString `json:"mamid"`           // mamid
	Mamname         sql.NullString `json:"mamname"`         // mamname
	Mamneedfiles    sql.NullInt64  `json:"mamneedfiles"`    // mamneedfiles
	Mamixlink       sql.NullInt64  `json:"mamixlink"`       // mamixlink
	Mamemail        sql.NullInt64  `json:"mamemail"`        // mamemail
	Mameaddress     sql.NullString `json:"mameaddress"`     // mameaddress
	Mamthirdparty   sql.NullInt64  `json:"mamthirdparty"`   // mamthirdparty
	Mamthirdpartyid sql.NullString `json:"mamthirdpartyid"` // mamthirdpartyid
	Mamfileno       sql.NullInt64  `json:"mamfileno"`       // mamfileno
	Mamnumber       sql.NullInt64  `json:"mamnumber"`       // mamnumber
	Mamcontractref  sql.NullString `json:"mamcontractref"`  // mamcontractref
	Mamnode         sql.NullString `json:"mamnode"`         // mamnode
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

func AllMam(db XODB, callback func(x Mam) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`mamid, mamname, mamneedfiles, mamixlink, mamemail, mameaddress, mamthirdparty, mamthirdpartyid, mamfileno, mamnumber, mamcontractref, mamnode, equinox_lrn, equinox_sec ` +
		`FROM equinox.mam `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		m := Mam{}

		// scan
		err = q.Scan(&m.Mamid, &m.Mamname, &m.Mamneedfiles, &m.Mamixlink, &m.Mamemail, &m.Mameaddress, &m.Mamthirdparty, &m.Mamthirdpartyid, &m.Mamfileno, &m.Mamnumber, &m.Mamcontractref, &m.Mamnode, &m.EquinoxLrn, &m.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(m) {
			return nil
		}
	}

	return nil
}

// MamByEquinoxLrn retrieves a row from 'equinox.mam' as a Mam.
//
// Generated from index 'mam_pkey'.
func MamByEquinoxLrn(db XODB, equinoxLrn int64) (*Mam, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`mamid, mamname, mamneedfiles, mamixlink, mamemail, mameaddress, mamthirdparty, mamthirdpartyid, mamfileno, mamnumber, mamcontractref, mamnode, equinox_lrn, equinox_sec ` +
		`FROM equinox.mam ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	m := Mam{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&m.Mamid, &m.Mamname, &m.Mamneedfiles, &m.Mamixlink, &m.Mamemail, &m.Mameaddress, &m.Mamthirdparty, &m.Mamthirdpartyid, &m.Mamfileno, &m.Mamnumber, &m.Mamcontractref, &m.Mamnode, &m.EquinoxLrn, &m.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &m, nil
}
