// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import "database/sql"

// Postcode represents a row from 'equinox.postcode'.
type Postcode struct {
	Pcpostcode    sql.NullString  `json:"pcpostcode"`    // pcpostcode
	Pctown        sql.NullString  `json:"pctown"`        // pctown
	Pcstd         sql.NullString  `json:"pcstd"`         // pcstd
	Pcmobcoverage sql.NullFloat64 `json:"pcmobcoverage"` // pcmobcoverage
	Pcarea        sql.NullString  `json:"pcarea"`        // pcarea
	Pcnoexecs     sql.NullInt64   `json:"pcnoexecs"`     // pcnoexecs
	Pcnounqexecs  sql.NullInt64   `json:"pcnounqexecs"`  // pcnounqexecs
	Pcnocust      sql.NullInt64   `json:"pcnocust"`      // pcnocust
	Pcnomobcust   sql.NullInt64   `json:"pcnomobcust"`   // pcnomobcust
	Pcelecreg     sql.NullInt64   `json:"pcelecreg"`     // pcelecreg
	EquinoxLrn    int64           `json:"equinox_lrn"`   // equinox_lrn
	EquinoxSec    sql.NullInt64   `json:"equinox_sec"`   // equinox_sec
}

// PostcodeByEquinoxLrn retrieves a row from 'equinox.postcode' as a Postcode.
//
// Generated from index 'postcode_pkey'.
func PostcodeByEquinoxLrn(db XODB, equinoxLrn int64) (*Postcode, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`pcpostcode, pctown, pcstd, pcmobcoverage, pcarea, pcnoexecs, pcnounqexecs, pcnocust, pcnomobcust, pcelecreg, equinox_lrn, equinox_sec ` +
		`FROM equinox.postcode ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	p := Postcode{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&p.Pcpostcode, &p.Pctown, &p.Pcstd, &p.Pcmobcoverage, &p.Pcarea, &p.Pcnoexecs, &p.Pcnounqexecs, &p.Pcnocust, &p.Pcnomobcust, &p.Pcelecreg, &p.EquinoxLrn, &p.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &p, nil
}
