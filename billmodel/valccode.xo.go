// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Valccode represents a row from 'equinox.valccode'.
type Valccode struct {
	Valcfieldname   sql.NullString `json:"valcfieldname"`   // valcfieldname
	Valcrange       sql.NullInt64  `json:"valcrange"`       // valcrange
	Valcvalue       sql.NullInt64  `json:"valcvalue"`       // valcvalue
	Valcdatatype    sql.NullString `json:"valcdatatype"`    // valcdatatype
	Valcoperation   sql.NullString `json:"valcoperation"`   // valcoperation
	Valcmandatory   sql.NullInt64  `json:"valcmandatory"`   // valcmandatory
	Valcfillblank   sql.NullInt64  `json:"valcfillblank"`   // valcfillblank
	Valcmacrouse    sql.NullInt64  `json:"valcmacrouse"`    // valcmacrouse
	Valcmacrobf     sql.NullInt64  `json:"valcmacrobf"`     // valcmacrobf
	Valcmacroaf     sql.NullInt64  `json:"valcmacroaf"`     // valcmacroaf
	Valcmacroerror  sql.NullInt64  `json:"valcmacroerror"`  // valcmacroerror
	Valcdatefrom    pq.NullTime    `json:"valcdatefrom"`    // valcdatefrom
	Valcdateto      pq.NullTime    `json:"valcdateto"`      // valcdateto
	Valcdateentered pq.NullTime    `json:"valcdateentered"` // valcdateentered
	Valcenteredby   sql.NullString `json:"valcenteredby"`   // valcenteredby
	Valcid          sql.NullString `json:"valcid"`          // valcid
	EquinoxLrn      int64          `json:"equinox_lrn"`     // equinox_lrn
	EquinoxSec      sql.NullInt64  `json:"equinox_sec"`     // equinox_sec
}

// ValccodeByEquinoxLrn retrieves a row from 'equinox.valccode' as a Valccode.
//
// Generated from index 'valccode_pkey'.
func ValccodeByEquinoxLrn(db XODB, equinoxLrn int64) (*Valccode, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`valcfieldname, valcrange, valcvalue, valcdatatype, valcoperation, valcmandatory, valcfillblank, valcmacrouse, valcmacrobf, valcmacroaf, valcmacroerror, valcdatefrom, valcdateto, valcdateentered, valcenteredby, valcid, equinox_lrn, equinox_sec ` +
		`FROM equinox.valccode ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	v := Valccode{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&v.Valcfieldname, &v.Valcrange, &v.Valcvalue, &v.Valcdatatype, &v.Valcoperation, &v.Valcmandatory, &v.Valcfillblank, &v.Valcmacrouse, &v.Valcmacrobf, &v.Valcmacroaf, &v.Valcmacroerror, &v.Valcdatefrom, &v.Valcdateto, &v.Valcdateentered, &v.Valcenteredby, &v.Valcid, &v.EquinoxLrn, &v.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &v, nil
}
