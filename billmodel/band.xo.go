// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"
	"errors"
)

// Band represents a row from 'equinox.band'.
type Band struct {
	Banduniquesys    sql.NullFloat64 `json:"banduniquesys"`    // banduniquesys
	Bandid           sql.NullString  `json:"bandid"`           // bandid
	Bandchrgopt      sql.NullString  `json:"bandchrgopt"`      // bandchrgopt
	Bandfixed        sql.NullString  `json:"bandfixed"`        // bandfixed
	Bandrebate       sql.NullInt64   `json:"bandrebate"`       // bandrebate
	Bandfreemins     sql.NullInt64   `json:"bandfreemins"`     // bandfreemins
	Bandvatrate      sql.NullFloat64 `json:"bandvatrate"`      // bandvatrate
	Bandvol1type1    sql.NullFloat64 `json:"bandvol1type1"`    // bandvol1type1
	Bandvol1type2    sql.NullFloat64 `json:"bandvol1type2"`    // bandvol1type2
	Bandvol1type3    sql.NullFloat64 `json:"bandvol1type3"`    // bandvol1type3
	Bandvol1type4    sql.NullFloat64 `json:"bandvol1type4"`    // bandvol1type4
	Bandvol1type5    sql.NullFloat64 `json:"bandvol1type5"`    // bandvol1type5
	Bandvol2type1    sql.NullFloat64 `json:"bandvol2type1"`    // bandvol2type1
	Bandvol2type2    sql.NullFloat64 `json:"bandvol2type2"`    // bandvol2type2
	Bandvol2type3    sql.NullFloat64 `json:"bandvol2type3"`    // bandvol2type3
	Bandvol2type4    sql.NullFloat64 `json:"bandvol2type4"`    // bandvol2type4
	Bandvol2type5    sql.NullFloat64 `json:"bandvol2type5"`    // bandvol2type5
	Bandvol3type1    sql.NullFloat64 `json:"bandvol3type1"`    // bandvol3type1
	Bandvol3type2    sql.NullFloat64 `json:"bandvol3type2"`    // bandvol3type2
	Bandvol3type3    sql.NullFloat64 `json:"bandvol3type3"`    // bandvol3type3
	Bandvol3type4    sql.NullFloat64 `json:"bandvol3type4"`    // bandvol3type4
	Bandvol3type5    sql.NullFloat64 `json:"bandvol3type5"`    // bandvol3type5
	Bandvol4type1    sql.NullFloat64 `json:"bandvol4type1"`    // bandvol4type1
	Bandvol4type2    sql.NullFloat64 `json:"bandvol4type2"`    // bandvol4type2
	Bandvol4type3    sql.NullFloat64 `json:"bandvol4type3"`    // bandvol4type3
	Bandvol4type4    sql.NullFloat64 `json:"bandvol4type4"`    // bandvol4type4
	Bandvol4type5    sql.NullFloat64 `json:"bandvol4type5"`    // bandvol4type5
	Bandvol5type1    sql.NullFloat64 `json:"bandvol5type1"`    // bandvol5type1
	Bandvol5type2    sql.NullFloat64 `json:"bandvol5type2"`    // bandvol5type2
	Bandvol5type3    sql.NullFloat64 `json:"bandvol5type3"`    // bandvol5type3
	Bandvol5type4    sql.NullFloat64 `json:"bandvol5type4"`    // bandvol5type4
	Bandvol5type5    sql.NullFloat64 `json:"bandvol5type5"`    // bandvol5type5
	Bandvol6type1    sql.NullFloat64 `json:"bandvol6type1"`    // bandvol6type1
	Bandvol6type2    sql.NullFloat64 `json:"bandvol6type2"`    // bandvol6type2
	Bandvol6type3    sql.NullFloat64 `json:"bandvol6type3"`    // bandvol6type3
	Bandvol6type4    sql.NullFloat64 `json:"bandvol6type4"`    // bandvol6type4
	Bandvol6type5    sql.NullFloat64 `json:"bandvol6type5"`    // bandvol6type5
	Bandvol7type1    sql.NullFloat64 `json:"bandvol7type1"`    // bandvol7type1
	Bandvol7type2    sql.NullFloat64 `json:"bandvol7type2"`    // bandvol7type2
	Bandvol7type3    sql.NullFloat64 `json:"bandvol7type3"`    // bandvol7type3
	Bandvol7type4    sql.NullFloat64 `json:"bandvol7type4"`    // bandvol7type4
	Bandvol7type5    sql.NullFloat64 `json:"bandvol7type5"`    // bandvol7type5
	Bandvol8type1    sql.NullFloat64 `json:"bandvol8type1"`    // bandvol8type1
	Bandvol8type2    sql.NullFloat64 `json:"bandvol8type2"`    // bandvol8type2
	Bandvol8type3    sql.NullFloat64 `json:"bandvol8type3"`    // bandvol8type3
	Bandvol8type4    sql.NullFloat64 `json:"bandvol8type4"`    // bandvol8type4
	Bandvol8type5    sql.NullFloat64 `json:"bandvol8type5"`    // bandvol8type5
	Bandvol9type1    sql.NullFloat64 `json:"bandvol9type1"`    // bandvol9type1
	Bandvol9type2    sql.NullFloat64 `json:"bandvol9type2"`    // bandvol9type2
	Bandvol9type3    sql.NullFloat64 `json:"bandvol9type3"`    // bandvol9type3
	Bandvol9type4    sql.NullFloat64 `json:"bandvol9type4"`    // bandvol9type4
	Bandvol9type5    sql.NullFloat64 `json:"bandvol9type5"`    // bandvol9type5
	Bandvol10type1   sql.NullFloat64 `json:"bandvol10type1"`   // bandvol10type1
	Bandvol10type2   sql.NullFloat64 `json:"bandvol10type2"`   // bandvol10type2
	Bandvol10type3   sql.NullFloat64 `json:"bandvol10type3"`   // bandvol10type3
	Bandvol10type4   sql.NullFloat64 `json:"bandvol10type4"`   // bandvol10type4
	Bandvol10type5   sql.NullFloat64 `json:"bandvol10type5"`   // bandvol10type5
	Bandinclfreemins sql.NullInt64   `json:"bandinclfreemins"` // bandinclfreemins
	Banincindiscount sql.NullInt64   `json:"banincindiscount"` // banincindiscount
	Bandbasetype1    sql.NullFloat64 `json:"bandbasetype1"`    // bandbasetype1
	Bandbasetype2    sql.NullFloat64 `json:"bandbasetype2"`    // bandbasetype2
	Bandbasetype3    sql.NullFloat64 `json:"bandbasetype3"`    // bandbasetype3
	Bandbasetype4    sql.NullFloat64 `json:"bandbasetype4"`    // bandbasetype4
	Bandbasetype5    sql.NullFloat64 `json:"bandbasetype5"`    // bandbasetype5
	Bandmarkup       sql.NullString  `json:"bandmarkup"`       // bandmarkup
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the Band exists in the database.
func (b *Band) Exists() bool {
	return b._exists
}

// Deleted provides information if the Band has been deleted from the database.
func (b *Band) Deleted() bool {
	return b._deleted
}

// Insert inserts the Band to the database.
func (b *Band) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if b._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.band (` +
		`banduniquesys, bandid, bandchrgopt, bandfixed, bandrebate, bandfreemins, bandvatrate, bandvol1type1, bandvol1type2, bandvol1type3, bandvol1type4, bandvol1type5, bandvol2type1, bandvol2type2, bandvol2type3, bandvol2type4, bandvol2type5, bandvol3type1, bandvol3type2, bandvol3type3, bandvol3type4, bandvol3type5, bandvol4type1, bandvol4type2, bandvol4type3, bandvol4type4, bandvol4type5, bandvol5type1, bandvol5type2, bandvol5type3, bandvol5type4, bandvol5type5, bandvol6type1, bandvol6type2, bandvol6type3, bandvol6type4, bandvol6type5, bandvol7type1, bandvol7type2, bandvol7type3, bandvol7type4, bandvol7type5, bandvol8type1, bandvol8type2, bandvol8type3, bandvol8type4, bandvol8type5, bandvol9type1, bandvol9type2, bandvol9type3, bandvol9type4, bandvol9type5, bandvol10type1, bandvol10type2, bandvol10type3, bandvol10type4, bandvol10type5, bandinclfreemins, banincindiscount, bandbasetype1, bandbasetype2, bandbasetype3, bandbasetype4, bandbasetype5, bandmarkup, equinox_prn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67` +
		`) RETURNING equinox_lrn`

	// run query
	XOLog(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxSec)
	err = db.QueryRow(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxSec).Scan(&b.EquinoxLrn)
	if err != nil {
		return err
	}

	// set existence
	b._exists = true

	return nil
}

// Update updates the Band in the database.
func (b *Band) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !b._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if b._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE equinox.band SET (` +
		`banduniquesys, bandid, bandchrgopt, bandfixed, bandrebate, bandfreemins, bandvatrate, bandvol1type1, bandvol1type2, bandvol1type3, bandvol1type4, bandvol1type5, bandvol2type1, bandvol2type2, bandvol2type3, bandvol2type4, bandvol2type5, bandvol3type1, bandvol3type2, bandvol3type3, bandvol3type4, bandvol3type5, bandvol4type1, bandvol4type2, bandvol4type3, bandvol4type4, bandvol4type5, bandvol5type1, bandvol5type2, bandvol5type3, bandvol5type4, bandvol5type5, bandvol6type1, bandvol6type2, bandvol6type3, bandvol6type4, bandvol6type5, bandvol7type1, bandvol7type2, bandvol7type3, bandvol7type4, bandvol7type5, bandvol8type1, bandvol8type2, bandvol8type3, bandvol8type4, bandvol8type5, bandvol9type1, bandvol9type2, bandvol9type3, bandvol9type4, bandvol9type5, bandvol10type1, bandvol10type2, bandvol10type3, bandvol10type4, bandvol10type5, bandinclfreemins, banincindiscount, bandbasetype1, bandbasetype2, bandbasetype3, bandbasetype4, bandbasetype5, bandmarkup, equinox_prn, equinox_sec` +
		`) = ( ` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67` +
		`) WHERE equinox_lrn = $68`

	// run query
	XOLog(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxSec, b.EquinoxLrn)
	_, err = db.Exec(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxSec, b.EquinoxLrn)
	return err
}

// Save saves the Band to the database.
func (b *Band) Save(db XODB) error {
	if b.Exists() {
		return b.Update(db)
	}

	return b.Insert(db)
}

// Upsert performs an upsert for Band.
//
// NOTE: PostgreSQL 9.5+ only
func (b *Band) Upsert(db XODB) error {
	var err error

	// if already exist, bail
	if b._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO equinox.band (` +
		`banduniquesys, bandid, bandchrgopt, bandfixed, bandrebate, bandfreemins, bandvatrate, bandvol1type1, bandvol1type2, bandvol1type3, bandvol1type4, bandvol1type5, bandvol2type1, bandvol2type2, bandvol2type3, bandvol2type4, bandvol2type5, bandvol3type1, bandvol3type2, bandvol3type3, bandvol3type4, bandvol3type5, bandvol4type1, bandvol4type2, bandvol4type3, bandvol4type4, bandvol4type5, bandvol5type1, bandvol5type2, bandvol5type3, bandvol5type4, bandvol5type5, bandvol6type1, bandvol6type2, bandvol6type3, bandvol6type4, bandvol6type5, bandvol7type1, bandvol7type2, bandvol7type3, bandvol7type4, bandvol7type5, bandvol8type1, bandvol8type2, bandvol8type3, bandvol8type4, bandvol8type5, bandvol9type1, bandvol9type2, bandvol9type3, bandvol9type4, bandvol9type5, bandvol10type1, bandvol10type2, bandvol10type3, bandvol10type4, bandvol10type5, bandinclfreemins, banincindiscount, bandbasetype1, bandbasetype2, bandbasetype3, bandbasetype4, bandbasetype5, bandmarkup, equinox_prn, equinox_lrn, equinox_sec` +
		`) VALUES (` +
		`$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $65, $66, $67, $68` +
		`) ON CONFLICT (equinox_lrn) DO UPDATE SET (` +
		`banduniquesys, bandid, bandchrgopt, bandfixed, bandrebate, bandfreemins, bandvatrate, bandvol1type1, bandvol1type2, bandvol1type3, bandvol1type4, bandvol1type5, bandvol2type1, bandvol2type2, bandvol2type3, bandvol2type4, bandvol2type5, bandvol3type1, bandvol3type2, bandvol3type3, bandvol3type4, bandvol3type5, bandvol4type1, bandvol4type2, bandvol4type3, bandvol4type4, bandvol4type5, bandvol5type1, bandvol5type2, bandvol5type3, bandvol5type4, bandvol5type5, bandvol6type1, bandvol6type2, bandvol6type3, bandvol6type4, bandvol6type5, bandvol7type1, bandvol7type2, bandvol7type3, bandvol7type4, bandvol7type5, bandvol8type1, bandvol8type2, bandvol8type3, bandvol8type4, bandvol8type5, bandvol9type1, bandvol9type2, bandvol9type3, bandvol9type4, bandvol9type5, bandvol10type1, bandvol10type2, bandvol10type3, bandvol10type4, bandvol10type5, bandinclfreemins, banincindiscount, bandbasetype1, bandbasetype2, bandbasetype3, bandbasetype4, bandbasetype5, bandmarkup, equinox_prn, equinox_lrn, equinox_sec` +
		`) = (` +
		`EXCLUDED.banduniquesys, EXCLUDED.bandid, EXCLUDED.bandchrgopt, EXCLUDED.bandfixed, EXCLUDED.bandrebate, EXCLUDED.bandfreemins, EXCLUDED.bandvatrate, EXCLUDED.bandvol1type1, EXCLUDED.bandvol1type2, EXCLUDED.bandvol1type3, EXCLUDED.bandvol1type4, EXCLUDED.bandvol1type5, EXCLUDED.bandvol2type1, EXCLUDED.bandvol2type2, EXCLUDED.bandvol2type3, EXCLUDED.bandvol2type4, EXCLUDED.bandvol2type5, EXCLUDED.bandvol3type1, EXCLUDED.bandvol3type2, EXCLUDED.bandvol3type3, EXCLUDED.bandvol3type4, EXCLUDED.bandvol3type5, EXCLUDED.bandvol4type1, EXCLUDED.bandvol4type2, EXCLUDED.bandvol4type3, EXCLUDED.bandvol4type4, EXCLUDED.bandvol4type5, EXCLUDED.bandvol5type1, EXCLUDED.bandvol5type2, EXCLUDED.bandvol5type3, EXCLUDED.bandvol5type4, EXCLUDED.bandvol5type5, EXCLUDED.bandvol6type1, EXCLUDED.bandvol6type2, EXCLUDED.bandvol6type3, EXCLUDED.bandvol6type4, EXCLUDED.bandvol6type5, EXCLUDED.bandvol7type1, EXCLUDED.bandvol7type2, EXCLUDED.bandvol7type3, EXCLUDED.bandvol7type4, EXCLUDED.bandvol7type5, EXCLUDED.bandvol8type1, EXCLUDED.bandvol8type2, EXCLUDED.bandvol8type3, EXCLUDED.bandvol8type4, EXCLUDED.bandvol8type5, EXCLUDED.bandvol9type1, EXCLUDED.bandvol9type2, EXCLUDED.bandvol9type3, EXCLUDED.bandvol9type4, EXCLUDED.bandvol9type5, EXCLUDED.bandvol10type1, EXCLUDED.bandvol10type2, EXCLUDED.bandvol10type3, EXCLUDED.bandvol10type4, EXCLUDED.bandvol10type5, EXCLUDED.bandinclfreemins, EXCLUDED.banincindiscount, EXCLUDED.bandbasetype1, EXCLUDED.bandbasetype2, EXCLUDED.bandbasetype3, EXCLUDED.bandbasetype4, EXCLUDED.bandbasetype5, EXCLUDED.bandmarkup, EXCLUDED.equinox_prn, EXCLUDED.equinox_lrn, EXCLUDED.equinox_sec` +
		`)`

	// run query
	XOLog(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxLrn, b.EquinoxSec)
	_, err = db.Exec(sqlstr, b.Banduniquesys, b.Bandid, b.Bandchrgopt, b.Bandfixed, b.Bandrebate, b.Bandfreemins, b.Bandvatrate, b.Bandvol1type1, b.Bandvol1type2, b.Bandvol1type3, b.Bandvol1type4, b.Bandvol1type5, b.Bandvol2type1, b.Bandvol2type2, b.Bandvol2type3, b.Bandvol2type4, b.Bandvol2type5, b.Bandvol3type1, b.Bandvol3type2, b.Bandvol3type3, b.Bandvol3type4, b.Bandvol3type5, b.Bandvol4type1, b.Bandvol4type2, b.Bandvol4type3, b.Bandvol4type4, b.Bandvol4type5, b.Bandvol5type1, b.Bandvol5type2, b.Bandvol5type3, b.Bandvol5type4, b.Bandvol5type5, b.Bandvol6type1, b.Bandvol6type2, b.Bandvol6type3, b.Bandvol6type4, b.Bandvol6type5, b.Bandvol7type1, b.Bandvol7type2, b.Bandvol7type3, b.Bandvol7type4, b.Bandvol7type5, b.Bandvol8type1, b.Bandvol8type2, b.Bandvol8type3, b.Bandvol8type4, b.Bandvol8type5, b.Bandvol9type1, b.Bandvol9type2, b.Bandvol9type3, b.Bandvol9type4, b.Bandvol9type5, b.Bandvol10type1, b.Bandvol10type2, b.Bandvol10type3, b.Bandvol10type4, b.Bandvol10type5, b.Bandinclfreemins, b.Banincindiscount, b.Bandbasetype1, b.Bandbasetype2, b.Bandbasetype3, b.Bandbasetype4, b.Bandbasetype5, b.Bandmarkup, b.EquinoxPrn, b.EquinoxLrn, b.EquinoxSec)
	if err != nil {
		return err
	}

	// set existence
	b._exists = true

	return nil
}

// Delete deletes the Band from the database.
func (b *Band) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !b._exists {
		return nil
	}

	// if deleted, bail
	if b._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM equinox.band WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, b.EquinoxLrn)
	_, err = db.Exec(sqlstr, b.EquinoxLrn)
	if err != nil {
		return err
	}

	// set deleted
	b._deleted = true

	return nil
}

// BandByEquinoxLrn retrieves a row from 'equinox.band' as a Band.
//
// Generated from index 'band_pkey'.
func BandByEquinoxLrn(db XODB, equinoxLrn int64) (*Band, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`banduniquesys, bandid, bandchrgopt, bandfixed, bandrebate, bandfreemins, bandvatrate, bandvol1type1, bandvol1type2, bandvol1type3, bandvol1type4, bandvol1type5, bandvol2type1, bandvol2type2, bandvol2type3, bandvol2type4, bandvol2type5, bandvol3type1, bandvol3type2, bandvol3type3, bandvol3type4, bandvol3type5, bandvol4type1, bandvol4type2, bandvol4type3, bandvol4type4, bandvol4type5, bandvol5type1, bandvol5type2, bandvol5type3, bandvol5type4, bandvol5type5, bandvol6type1, bandvol6type2, bandvol6type3, bandvol6type4, bandvol6type5, bandvol7type1, bandvol7type2, bandvol7type3, bandvol7type4, bandvol7type5, bandvol8type1, bandvol8type2, bandvol8type3, bandvol8type4, bandvol8type5, bandvol9type1, bandvol9type2, bandvol9type3, bandvol9type4, bandvol9type5, bandvol10type1, bandvol10type2, bandvol10type3, bandvol10type4, bandvol10type5, bandinclfreemins, banincindiscount, bandbasetype1, bandbasetype2, bandbasetype3, bandbasetype4, bandbasetype5, bandmarkup, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.band ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	b := Band{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&b.Banduniquesys, &b.Bandid, &b.Bandchrgopt, &b.Bandfixed, &b.Bandrebate, &b.Bandfreemins, &b.Bandvatrate, &b.Bandvol1type1, &b.Bandvol1type2, &b.Bandvol1type3, &b.Bandvol1type4, &b.Bandvol1type5, &b.Bandvol2type1, &b.Bandvol2type2, &b.Bandvol2type3, &b.Bandvol2type4, &b.Bandvol2type5, &b.Bandvol3type1, &b.Bandvol3type2, &b.Bandvol3type3, &b.Bandvol3type4, &b.Bandvol3type5, &b.Bandvol4type1, &b.Bandvol4type2, &b.Bandvol4type3, &b.Bandvol4type4, &b.Bandvol4type5, &b.Bandvol5type1, &b.Bandvol5type2, &b.Bandvol5type3, &b.Bandvol5type4, &b.Bandvol5type5, &b.Bandvol6type1, &b.Bandvol6type2, &b.Bandvol6type3, &b.Bandvol6type4, &b.Bandvol6type5, &b.Bandvol7type1, &b.Bandvol7type2, &b.Bandvol7type3, &b.Bandvol7type4, &b.Bandvol7type5, &b.Bandvol8type1, &b.Bandvol8type2, &b.Bandvol8type3, &b.Bandvol8type4, &b.Bandvol8type5, &b.Bandvol9type1, &b.Bandvol9type2, &b.Bandvol9type3, &b.Bandvol9type4, &b.Bandvol9type5, &b.Bandvol10type1, &b.Bandvol10type2, &b.Bandvol10type3, &b.Bandvol10type4, &b.Bandvol10type5, &b.Bandinclfreemins, &b.Banincindiscount, &b.Bandbasetype1, &b.Bandbasetype2, &b.Bandbasetype3, &b.Bandbasetype4, &b.Bandbasetype5, &b.Bandmarkup, &b.EquinoxPrn, &b.EquinoxLrn, &b.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &b, nil
}
