// Package billmodel contains the types for schema 'equinox'.
package billmodel

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql"

	"github.com/lib/pq"
)

// Gmam represents a row from 'equinox.gmam'.
type Gmam struct {
	Gmmamid          sql.NullString  `json:"gmmamid"`          // gmmamid
	Gmorigmamid      sql.NullString  `json:"gmorigmamid"`      // gmorigmamid
	Gmeffectivedate  pq.NullTime     `json:"gmeffectivedate"`  // gmeffectivedate
	Gmmscode         sql.NullString  `json:"gmmscode"`         // gmmscode
	Gmfiletype       sql.NullString  `json:"gmfiletype"`       // gmfiletype
	Gmtranstype      sql.NullString  `json:"gmtranstype"`      // gmtranstype
	Gmpaymehtodcode  sql.NullString  `json:"gmpaymehtodcode"`  // gmpaymehtodcode
	Gmmodelcode      sql.NullString  `json:"gmmodelcode"`      // gmmodelcode
	Gmyearmake       sql.NullString  `json:"gmyearmake"`       // gmyearmake
	Gmassetstatus    sql.NullString  `json:"gmassetstatus"`    // gmassetstatus
	Gmmetertypecode  sql.NullString  `json:"gmmetertypecode"`  // gmmetertypecode
	Gmmetermechanism sql.NullString  `json:"gmmetermechanism"` // gmmetermechanism
	Gmlocationcode   sql.NullString  `json:"gmlocationcode"`   // gmlocationcode
	Gmmakecode       sql.NullString  `json:"gmmakecode"`       // gmmakecode
	Gmmcapacity      sql.NullInt64   `json:"gmmcapacity"`      // gmmcapacity
	Gmunits          sql.NullString  `json:"gmunits"`          // gmunits
	Gmreadfactor     sql.NullFloat64 `json:"gmreadfactor"`     // gmreadfactor
	Gmfilecreated    pq.NullTime     `json:"gmfilecreated"`    // gmfilecreated
	Gmfilecreatedby  sql.NullString  `json:"gmfilecreatedby"`  // gmfilecreatedby
	Gmdials          sql.NullInt64   `json:"gmdials"`          // gmdials
	Gmrolecode       sql.NullString  `json:"gmrolecode"`       // gmrolecode
	EquinoxPrn       sql.NullInt64   `json:"equinox_prn"`      // equinox_prn
	EquinoxLrn       int64           `json:"equinox_lrn"`      // equinox_lrn
	EquinoxSec       sql.NullInt64   `json:"equinox_sec"`      // equinox_sec
}

func AllGmam(db XODB, callback func(x Gmam) bool) error {

	// sql query
	const sqlstr = `SELECT ` +
		`gmmamid, gmorigmamid, gmeffectivedate, gmmscode, gmfiletype, gmtranstype, gmpaymehtodcode, gmmodelcode, gmyearmake, gmassetstatus, gmmetertypecode, gmmetermechanism, gmlocationcode, gmmakecode, gmmcapacity, gmunits, gmreadfactor, gmfilecreated, gmfilecreatedby, gmdials, gmrolecode, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gmam `

	q, err := db.Query(sqlstr)

	if err != nil {
		return err
	}
	defer q.Close()

	// load results
	for q.Next() {
		g := Gmam{}

		// scan
		err = q.Scan(&g.Gmmamid, &g.Gmorigmamid, &g.Gmeffectivedate, &g.Gmmscode, &g.Gmfiletype, &g.Gmtranstype, &g.Gmpaymehtodcode, &g.Gmmodelcode, &g.Gmyearmake, &g.Gmassetstatus, &g.Gmmetertypecode, &g.Gmmetermechanism, &g.Gmlocationcode, &g.Gmmakecode, &g.Gmmcapacity, &g.Gmunits, &g.Gmreadfactor, &g.Gmfilecreated, &g.Gmfilecreatedby, &g.Gmdials, &g.Gmrolecode, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
		if err != nil {
			return err
		}
		if !callback(g) {
			return nil
		}
	}

	return nil
}

// GmamByEquinoxLrn retrieves a row from 'equinox.gmam' as a Gmam.
//
// Generated from index 'gmam_pkey'.
func GmamByEquinoxLrn(db XODB, equinoxLrn int64) (*Gmam, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`gmmamid, gmorigmamid, gmeffectivedate, gmmscode, gmfiletype, gmtranstype, gmpaymehtodcode, gmmodelcode, gmyearmake, gmassetstatus, gmmetertypecode, gmmetermechanism, gmlocationcode, gmmakecode, gmmcapacity, gmunits, gmreadfactor, gmfilecreated, gmfilecreatedby, gmdials, gmrolecode, equinox_prn, equinox_lrn, equinox_sec ` +
		`FROM equinox.gmam ` +
		`WHERE equinox_lrn = $1`

	// run query
	XOLog(sqlstr, equinoxLrn)
	g := Gmam{}

	err = db.QueryRow(sqlstr, equinoxLrn).Scan(&g.Gmmamid, &g.Gmorigmamid, &g.Gmeffectivedate, &g.Gmmscode, &g.Gmfiletype, &g.Gmtranstype, &g.Gmpaymehtodcode, &g.Gmmodelcode, &g.Gmyearmake, &g.Gmassetstatus, &g.Gmmetertypecode, &g.Gmmetermechanism, &g.Gmlocationcode, &g.Gmmakecode, &g.Gmmcapacity, &g.Gmunits, &g.Gmreadfactor, &g.Gmfilecreated, &g.Gmfilecreatedby, &g.Gmdials, &g.Gmrolecode, &g.EquinoxPrn, &g.EquinoxLrn, &g.EquinoxSec)
	if err != nil {
		return nil, err
	}

	return &g, nil
}
